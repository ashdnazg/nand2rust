<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="854" onload="init(evt)" viewBox="0 0 1200 854" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="854" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="837.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="837.00"> </text><svg id="frames" x="10" width="1180" total_samples="8966"><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.01%)</title><rect x="0.0000%" y="773" width="0.0112%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="783.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="0.0112%" y="773" width="0.0112%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="1"/><text x="0.2612%" y="783.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (11 samples, 0.12%)</title><rect x="0.0223%" y="757" width="0.1227%" height="15" fill="rgb(221,193,54)" fg:x="2" fg:w="11"/><text x="0.2723%" y="767.50"></text></g><g><title>[libSDL2-2.0.so.0.10.0] (1 samples, 0.01%)</title><rect x="0.1450%" y="757" width="0.0112%" height="15" fill="rgb(248,212,6)" fg:x="13" fg:w="1"/><text x="0.3950%" y="767.50"></text></g><g><title>[libdbus-1.so.3.19.11] (1 samples, 0.01%)</title><rect x="0.1561%" y="757" width="0.0112%" height="15" fill="rgb(208,68,35)" fg:x="14" fg:w="1"/><text x="0.4061%" y="767.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (3 samples, 0.03%)</title><rect x="0.1673%" y="757" width="0.0335%" height="15" fill="rgb(232,128,0)" fg:x="15" fg:w="3"/><text x="0.4173%" y="767.50"></text></g><g><title>_IO_fgets (1 samples, 0.01%)</title><rect x="0.2008%" y="757" width="0.0112%" height="15" fill="rgb(207,160,47)" fg:x="18" fg:w="1"/><text x="0.4508%" y="767.50"></text></g><g><title>_IO_getc (1 samples, 0.01%)</title><rect x="0.2119%" y="757" width="0.0112%" height="15" fill="rgb(228,23,34)" fg:x="19" fg:w="1"/><text x="0.4619%" y="767.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="0.2231%" y="757" width="0.0112%" height="15" fill="rgb(218,30,26)" fg:x="20" fg:w="1"/><text x="0.4731%" y="767.50"></text></g><g><title>__GI___libc_malloc (10 samples, 0.11%)</title><rect x="0.2342%" y="757" width="0.1115%" height="15" fill="rgb(220,122,19)" fg:x="21" fg:w="10"/><text x="0.4842%" y="767.50"></text></g><g><title>__memcmp_avx2_movbe (66 samples, 0.74%)</title><rect x="0.3458%" y="757" width="0.7361%" height="15" fill="rgb(250,228,42)" fg:x="31" fg:w="66"/><text x="0.5958%" y="767.50"></text></g><g><title>_int_free (3 samples, 0.03%)</title><rect x="1.0819%" y="757" width="0.0335%" height="15" fill="rgb(240,193,28)" fg:x="97" fg:w="3"/><text x="1.3319%" y="767.50"></text></g><g><title>core::hash::BuildHasher::hash_one (42 samples, 0.47%)</title><rect x="1.1153%" y="757" width="0.4684%" height="15" fill="rgb(216,20,37)" fg:x="100" fg:w="42"/><text x="1.3653%" y="767.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (6 samples, 0.07%)</title><rect x="1.5168%" y="741" width="0.0669%" height="15" fill="rgb(206,188,39)" fg:x="136" fg:w="6"/><text x="1.7668%" y="751.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (6 samples, 0.07%)</title><rect x="1.5168%" y="725" width="0.0669%" height="15" fill="rgb(217,207,13)" fg:x="136" fg:w="6"/><text x="1.7668%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (6 samples, 0.07%)</title><rect x="1.5168%" y="709" width="0.0669%" height="15" fill="rgb(231,73,38)" fg:x="136" fg:w="6"/><text x="1.7668%" y="719.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (6 samples, 0.07%)</title><rect x="1.5168%" y="693" width="0.0669%" height="15" fill="rgb(225,20,46)" fg:x="136" fg:w="6"/><text x="1.7668%" y="703.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.01%)</title><rect x="1.5726%" y="677" width="0.0112%" height="15" fill="rgb(210,31,41)" fg:x="141" fg:w="1"/><text x="1.8226%" y="687.50"></text></g><g><title>nand2tetris::vm::&lt;impl nand2tetris::hardware::RAM&gt;::get (38 samples, 0.42%)</title><rect x="1.5838%" y="757" width="0.4238%" height="15" fill="rgb(221,200,47)" fg:x="142" fg:w="38"/><text x="1.8338%" y="767.50"></text></g><g><title>nand2tetris::vm::&lt;impl nand2tetris::hardware::RAM&gt;::set (21 samples, 0.23%)</title><rect x="2.0076%" y="757" width="0.2342%" height="15" fill="rgb(226,26,5)" fg:x="180" fg:w="21"/><text x="2.2576%" y="767.50"></text></g><g><title>nand2tetris::vm::VM::goto (2 samples, 0.02%)</title><rect x="2.2418%" y="757" width="0.0223%" height="15" fill="rgb(249,33,26)" fg:x="201" fg:w="2"/><text x="2.4918%" y="767.50"></text></g><g><title>[[heap]] (379 samples, 4.23%)</title><rect x="0.0223%" y="773" width="4.2271%" height="15" fill="rgb(235,183,28)" fg:x="2" fg:w="379"/><text x="0.2723%" y="783.50">[[hea..</text></g><g><title>nand2tetris::vm::VM::step (178 samples, 1.99%)</title><rect x="2.2641%" y="757" width="1.9853%" height="15" fill="rgb(221,5,38)" fg:x="203" fg:w="178"/><text x="2.5141%" y="767.50">n..</text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (116 samples, 1.29%)</title><rect x="4.2494%" y="757" width="1.2938%" height="15" fill="rgb(247,18,42)" fg:x="381" fg:w="116"/><text x="4.4994%" y="767.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (112 samples, 1.25%)</title><rect x="4.2940%" y="741" width="1.2492%" height="15" fill="rgb(241,131,45)" fg:x="385" fg:w="112"/><text x="4.5440%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (112 samples, 1.25%)</title><rect x="4.2940%" y="725" width="1.2492%" height="15" fill="rgb(249,31,29)" fg:x="385" fg:w="112"/><text x="4.5440%" y="735.50"></text></g><g><title>[libX11.so.6.3.0] (1 samples, 0.01%)</title><rect x="5.5432%" y="757" width="0.0112%" height="15" fill="rgb(225,111,53)" fg:x="497" fg:w="1"/><text x="5.7932%" y="767.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.08%)</title><rect x="5.5543%" y="757" width="0.0781%" height="15" fill="rgb(238,160,17)" fg:x="498" fg:w="7"/><text x="5.8043%" y="767.50"></text></g><g><title>__memcmp_avx2_movbe (6 samples, 0.07%)</title><rect x="5.6324%" y="757" width="0.0669%" height="15" fill="rgb(214,148,48)" fg:x="505" fg:w="6"/><text x="5.8824%" y="767.50"></text></g><g><title>_dbus_list_remove_link (1 samples, 0.01%)</title><rect x="5.6993%" y="757" width="0.0112%" height="15" fill="rgb(232,36,49)" fg:x="511" fg:w="1"/><text x="5.9493%" y="767.50"></text></g><g><title>_dbus_type_reader_get_signature (1 samples, 0.01%)</title><rect x="5.7105%" y="757" width="0.0112%" height="15" fill="rgb(209,103,24)" fg:x="512" fg:w="1"/><text x="5.9605%" y="767.50"></text></g><g><title>core::hash::BuildHasher::hash_one (13 samples, 0.14%)</title><rect x="5.7216%" y="757" width="0.1450%" height="15" fill="rgb(229,88,8)" fg:x="513" fg:w="13"/><text x="5.9716%" y="767.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (9 samples, 0.10%)</title><rect x="5.7662%" y="741" width="0.1004%" height="15" fill="rgb(213,181,19)" fg:x="517" fg:w="9"/><text x="6.0162%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (9 samples, 0.10%)</title><rect x="5.7662%" y="725" width="0.1004%" height="15" fill="rgb(254,191,54)" fg:x="517" fg:w="9"/><text x="6.0162%" y="735.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (9 samples, 0.10%)</title><rect x="5.7662%" y="709" width="0.1004%" height="15" fill="rgb(241,83,37)" fg:x="517" fg:w="9"/><text x="6.0162%" y="719.50"></text></g><g><title>core::hash::Hasher::write_u8 (2 samples, 0.02%)</title><rect x="5.8443%" y="693" width="0.0223%" height="15" fill="rgb(233,36,39)" fg:x="524" fg:w="2"/><text x="6.0943%" y="703.50"></text></g><g><title>nand2tetris::vm::&lt;impl nand2tetris::hardware::RAM&gt;::get (113 samples, 1.26%)</title><rect x="5.8666%" y="757" width="1.2603%" height="15" fill="rgb(226,3,54)" fg:x="526" fg:w="113"/><text x="6.1166%" y="767.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (9 samples, 0.10%)</title><rect x="7.0265%" y="741" width="0.1004%" height="15" fill="rgb(245,192,40)" fg:x="630" fg:w="9"/><text x="7.2765%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (9 samples, 0.10%)</title><rect x="7.0265%" y="725" width="0.1004%" height="15" fill="rgb(238,167,29)" fg:x="630" fg:w="9"/><text x="7.2765%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (9 samples, 0.10%)</title><rect x="7.0265%" y="709" width="0.1004%" height="15" fill="rgb(232,182,51)" fg:x="630" fg:w="9"/><text x="7.2765%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (9 samples, 0.10%)</title><rect x="7.0265%" y="693" width="0.1004%" height="15" fill="rgb(231,60,39)" fg:x="630" fg:w="9"/><text x="7.2765%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (9 samples, 0.10%)</title><rect x="7.0265%" y="677" width="0.1004%" height="15" fill="rgb(208,69,12)" fg:x="630" fg:w="9"/><text x="7.2765%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (9 samples, 0.10%)</title><rect x="7.0265%" y="661" width="0.1004%" height="15" fill="rgb(235,93,37)" fg:x="630" fg:w="9"/><text x="7.2765%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (9 samples, 0.10%)</title><rect x="7.0265%" y="645" width="0.1004%" height="15" fill="rgb(213,116,39)" fg:x="630" fg:w="9"/><text x="7.2765%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (9 samples, 0.10%)</title><rect x="7.0265%" y="629" width="0.1004%" height="15" fill="rgb(222,207,29)" fg:x="630" fg:w="9"/><text x="7.2765%" y="639.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (9 samples, 0.10%)</title><rect x="7.0265%" y="613" width="0.1004%" height="15" fill="rgb(206,96,30)" fg:x="630" fg:w="9"/><text x="7.2765%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (9 samples, 0.10%)</title><rect x="7.0265%" y="597" width="0.1004%" height="15" fill="rgb(218,138,4)" fg:x="630" fg:w="9"/><text x="7.2765%" y="607.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (9 samples, 0.10%)</title><rect x="7.0265%" y="581" width="0.1004%" height="15" fill="rgb(250,191,14)" fg:x="630" fg:w="9"/><text x="7.2765%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (9 samples, 0.10%)</title><rect x="7.0265%" y="565" width="0.1004%" height="15" fill="rgb(239,60,40)" fg:x="630" fg:w="9"/><text x="7.2765%" y="575.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (9 samples, 0.10%)</title><rect x="7.0265%" y="549" width="0.1004%" height="15" fill="rgb(206,27,48)" fg:x="630" fg:w="9"/><text x="7.2765%" y="559.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (9 samples, 0.10%)</title><rect x="7.0265%" y="533" width="0.1004%" height="15" fill="rgb(225,35,8)" fg:x="630" fg:w="9"/><text x="7.2765%" y="543.50"></text></g><g><title>nand2tetris::vm::&lt;impl nand2tetris::hardware::RAM&gt;::set (31 samples, 0.35%)</title><rect x="7.1269%" y="757" width="0.3458%" height="15" fill="rgb(250,213,24)" fg:x="639" fg:w="31"/><text x="7.3769%" y="767.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (6 samples, 0.07%)</title><rect x="7.4058%" y="741" width="0.0669%" height="15" fill="rgb(247,123,22)" fg:x="664" fg:w="6"/><text x="7.6558%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (6 samples, 0.07%)</title><rect x="7.4058%" y="725" width="0.0669%" height="15" fill="rgb(231,138,38)" fg:x="664" fg:w="6"/><text x="7.6558%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (6 samples, 0.07%)</title><rect x="7.4058%" y="709" width="0.0669%" height="15" fill="rgb(231,145,46)" fg:x="664" fg:w="6"/><text x="7.6558%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6 samples, 0.07%)</title><rect x="7.4058%" y="693" width="0.0669%" height="15" fill="rgb(251,118,11)" fg:x="664" fg:w="6"/><text x="7.6558%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (6 samples, 0.07%)</title><rect x="7.4058%" y="677" width="0.0669%" height="15" fill="rgb(217,147,25)" fg:x="664" fg:w="6"/><text x="7.6558%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.07%)</title><rect x="7.4058%" y="661" width="0.0669%" height="15" fill="rgb(247,81,37)" fg:x="664" fg:w="6"/><text x="7.6558%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (6 samples, 0.07%)</title><rect x="7.4058%" y="645" width="0.0669%" height="15" fill="rgb(209,12,38)" fg:x="664" fg:w="6"/><text x="7.6558%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (6 samples, 0.07%)</title><rect x="7.4058%" y="629" width="0.0669%" height="15" fill="rgb(227,1,9)" fg:x="664" fg:w="6"/><text x="7.6558%" y="639.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (6 samples, 0.07%)</title><rect x="7.4058%" y="613" width="0.0669%" height="15" fill="rgb(248,47,43)" fg:x="664" fg:w="6"/><text x="7.6558%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (6 samples, 0.07%)</title><rect x="7.4058%" y="597" width="0.0669%" height="15" fill="rgb(221,10,30)" fg:x="664" fg:w="6"/><text x="7.6558%" y="607.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (6 samples, 0.07%)</title><rect x="7.4058%" y="581" width="0.0669%" height="15" fill="rgb(210,229,1)" fg:x="664" fg:w="6"/><text x="7.6558%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (6 samples, 0.07%)</title><rect x="7.4058%" y="565" width="0.0669%" height="15" fill="rgb(222,148,37)" fg:x="664" fg:w="6"/><text x="7.6558%" y="575.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (6 samples, 0.07%)</title><rect x="7.4058%" y="549" width="0.0669%" height="15" fill="rgb(234,67,33)" fg:x="664" fg:w="6"/><text x="7.6558%" y="559.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (6 samples, 0.07%)</title><rect x="7.4058%" y="533" width="0.0669%" height="15" fill="rgb(247,98,35)" fg:x="664" fg:w="6"/><text x="7.6558%" y="543.50"></text></g><g><title>[[stack]] (311 samples, 3.47%)</title><rect x="4.2494%" y="773" width="3.4687%" height="15" fill="rgb(247,138,52)" fg:x="381" fg:w="311"/><text x="4.4994%" y="783.50">[[s..</text></g><g><title>nand2tetris::vm::VM::step (22 samples, 0.25%)</title><rect x="7.4727%" y="757" width="0.2454%" height="15" fill="rgb(213,79,30)" fg:x="670" fg:w="22"/><text x="7.7227%" y="767.50"></text></g><g><title>&lt;(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.01%)</title><rect x="7.7180%" y="757" width="0.0112%" height="15" fill="rgb(246,177,23)" fg:x="692" fg:w="1"/><text x="7.9680%" y="767.50"></text></g><g><title>[anon] (2 samples, 0.02%)</title><rect x="7.7180%" y="773" width="0.0223%" height="15" fill="rgb(230,62,27)" fg:x="692" fg:w="2"/><text x="7.9680%" y="783.50"></text></g><g><title>[libX11.so.6.3.0] (1 samples, 0.01%)</title><rect x="7.7292%" y="757" width="0.0112%" height="15" fill="rgb(216,154,8)" fg:x="693" fg:w="1"/><text x="7.9792%" y="767.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="7.7515%" y="677" width="0.0112%" height="15" fill="rgb(244,35,45)" fg:x="695" fg:w="1"/><text x="8.0015%" y="687.50"></text></g><g><title>_IO_new_fopen (1 samples, 0.01%)</title><rect x="7.7515%" y="661" width="0.0112%" height="15" fill="rgb(251,115,12)" fg:x="695" fg:w="1"/><text x="8.0015%" y="671.50"></text></g><g><title>__fopen_internal (1 samples, 0.01%)</title><rect x="7.7515%" y="645" width="0.0112%" height="15" fill="rgb(240,54,50)" fg:x="695" fg:w="1"/><text x="8.0015%" y="655.50"></text></g><g><title>_IO_new_file_fopen (1 samples, 0.01%)</title><rect x="7.7515%" y="629" width="0.0112%" height="15" fill="rgb(233,84,52)" fg:x="695" fg:w="1"/><text x="8.0015%" y="639.50"></text></g><g><title>__GI__IO_file_open (1 samples, 0.01%)</title><rect x="7.7515%" y="613" width="0.0112%" height="15" fill="rgb(207,117,47)" fg:x="695" fg:w="1"/><text x="8.0015%" y="623.50"></text></g><g><title>__libc_open64 (1 samples, 0.01%)</title><rect x="7.7515%" y="597" width="0.0112%" height="15" fill="rgb(249,43,39)" fg:x="695" fg:w="1"/><text x="8.0015%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="7.7515%" y="581" width="0.0112%" height="15" fill="rgb(209,38,44)" fg:x="695" fg:w="1"/><text x="8.0015%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="7.7515%" y="565" width="0.0112%" height="15" fill="rgb(236,212,23)" fg:x="695" fg:w="1"/><text x="8.0015%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="7.7515%" y="549" width="0.0112%" height="15" fill="rgb(242,79,21)" fg:x="695" fg:w="1"/><text x="8.0015%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="7.7515%" y="533" width="0.0112%" height="15" fill="rgb(211,96,35)" fg:x="695" fg:w="1"/><text x="8.0015%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="7.7515%" y="517" width="0.0112%" height="15" fill="rgb(253,215,40)" fg:x="695" fg:w="1"/><text x="8.0015%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="7.7515%" y="501" width="0.0112%" height="15" fill="rgb(211,81,21)" fg:x="695" fg:w="1"/><text x="8.0015%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="7.7515%" y="485" width="0.0112%" height="15" fill="rgb(208,190,38)" fg:x="695" fg:w="1"/><text x="8.0015%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="7.7515%" y="469" width="0.0112%" height="15" fill="rgb(235,213,38)" fg:x="695" fg:w="1"/><text x="8.0015%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="7.7515%" y="453" width="0.0112%" height="15" fill="rgb(237,122,38)" fg:x="695" fg:w="1"/><text x="8.0015%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="7.7515%" y="437" width="0.0112%" height="15" fill="rgb(244,218,35)" fg:x="695" fg:w="1"/><text x="8.0015%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="7.7515%" y="421" width="0.0112%" height="15" fill="rgb(240,68,47)" fg:x="695" fg:w="1"/><text x="8.0015%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="7.7515%" y="405" width="0.0112%" height="15" fill="rgb(210,16,53)" fg:x="695" fg:w="1"/><text x="8.0015%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="7.7515%" y="389" width="0.0112%" height="15" fill="rgb(235,124,12)" fg:x="695" fg:w="1"/><text x="8.0015%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="7.7515%" y="373" width="0.0112%" height="15" fill="rgb(224,169,11)" fg:x="695" fg:w="1"/><text x="8.0015%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="7.7515%" y="357" width="0.0112%" height="15" fill="rgb(250,166,2)" fg:x="695" fg:w="1"/><text x="8.0015%" y="367.50"></text></g><g><title>[libGLX_nvidia.so.470.103.01] (3 samples, 0.03%)</title><rect x="7.7404%" y="773" width="0.0335%" height="15" fill="rgb(242,216,29)" fg:x="694" fg:w="3"/><text x="7.9904%" y="783.50"></text></g><g><title>[libGLX_nvidia.so.470.103.01] (3 samples, 0.03%)</title><rect x="7.7404%" y="757" width="0.0335%" height="15" fill="rgb(230,116,27)" fg:x="694" fg:w="3"/><text x="7.9904%" y="767.50"></text></g><g><title>[libGLX_nvidia.so.470.103.01] (3 samples, 0.03%)</title><rect x="7.7404%" y="741" width="0.0335%" height="15" fill="rgb(228,99,48)" fg:x="694" fg:w="3"/><text x="7.9904%" y="751.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (3 samples, 0.03%)</title><rect x="7.7404%" y="725" width="0.0335%" height="15" fill="rgb(253,11,6)" fg:x="694" fg:w="3"/><text x="7.9904%" y="735.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (3 samples, 0.03%)</title><rect x="7.7404%" y="709" width="0.0335%" height="15" fill="rgb(247,143,39)" fg:x="694" fg:w="3"/><text x="7.9904%" y="719.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (2 samples, 0.02%)</title><rect x="7.7515%" y="693" width="0.0223%" height="15" fill="rgb(236,97,10)" fg:x="695" fg:w="2"/><text x="8.0015%" y="703.50"></text></g><g><title>__libc_read (1 samples, 0.01%)</title><rect x="7.7627%" y="677" width="0.0112%" height="15" fill="rgb(233,208,19)" fg:x="696" fg:w="1"/><text x="8.0127%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="7.7627%" y="661" width="0.0112%" height="15" fill="rgb(216,164,2)" fg:x="696" fg:w="1"/><text x="8.0127%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="7.7627%" y="645" width="0.0112%" height="15" fill="rgb(220,129,5)" fg:x="696" fg:w="1"/><text x="8.0127%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="7.7627%" y="629" width="0.0112%" height="15" fill="rgb(242,17,10)" fg:x="696" fg:w="1"/><text x="8.0127%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="7.7627%" y="613" width="0.0112%" height="15" fill="rgb(242,107,0)" fg:x="696" fg:w="1"/><text x="8.0127%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="7.7627%" y="597" width="0.0112%" height="15" fill="rgb(251,28,31)" fg:x="696" fg:w="1"/><text x="8.0127%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="7.7627%" y="581" width="0.0112%" height="15" fill="rgb(233,223,10)" fg:x="696" fg:w="1"/><text x="8.0127%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="7.7627%" y="565" width="0.0112%" height="15" fill="rgb(215,21,27)" fg:x="696" fg:w="1"/><text x="8.0127%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="7.7627%" y="549" width="0.0112%" height="15" fill="rgb(232,23,21)" fg:x="696" fg:w="1"/><text x="8.0127%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="7.7627%" y="533" width="0.0112%" height="15" fill="rgb(244,5,23)" fg:x="696" fg:w="1"/><text x="8.0127%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="7.7627%" y="517" width="0.0112%" height="15" fill="rgb(226,81,46)" fg:x="696" fg:w="1"/><text x="8.0127%" y="527.50"></text></g><g><title>[libGLdispatch.so.0.0.0] (4 samples, 0.04%)</title><rect x="7.7738%" y="773" width="0.0446%" height="15" fill="rgb(247,70,30)" fg:x="697" fg:w="4"/><text x="8.0238%" y="783.50"></text></g><g><title>[libdbus-1.so.3.19.11] (1 samples, 0.01%)</title><rect x="7.8184%" y="757" width="0.0112%" height="15" fill="rgb(212,68,19)" fg:x="701" fg:w="1"/><text x="8.0684%" y="767.50"></text></g><g><title>[libSDL2-2.0.so.0.10.0] (2 samples, 0.02%)</title><rect x="7.8184%" y="773" width="0.0223%" height="15" fill="rgb(240,187,13)" fg:x="701" fg:w="2"/><text x="8.0684%" y="783.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="7.8296%" y="757" width="0.0112%" height="15" fill="rgb(223,113,26)" fg:x="702" fg:w="1"/><text x="8.0796%" y="767.50"></text></g><g><title>[libdbus-1.so.3.19.11] (1 samples, 0.01%)</title><rect x="7.8407%" y="773" width="0.0112%" height="15" fill="rgb(206,192,2)" fg:x="703" fg:w="1"/><text x="8.0907%" y="783.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (4 samples, 0.04%)</title><rect x="7.8519%" y="773" width="0.0446%" height="15" fill="rgb(241,108,4)" fg:x="704" fg:w="4"/><text x="8.1019%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (10 samples, 0.11%)</title><rect x="8.2422%" y="677" width="0.1115%" height="15" fill="rgb(247,173,49)" fg:x="739" fg:w="10"/><text x="8.4922%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10 samples, 0.11%)</title><rect x="8.2422%" y="661" width="0.1115%" height="15" fill="rgb(224,114,35)" fg:x="739" fg:w="10"/><text x="8.4922%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (10 samples, 0.11%)</title><rect x="8.2422%" y="645" width="0.1115%" height="15" fill="rgb(245,159,27)" fg:x="739" fg:w="10"/><text x="8.4922%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.11%)</title><rect x="8.2422%" y="629" width="0.1115%" height="15" fill="rgb(245,172,44)" fg:x="739" fg:w="10"/><text x="8.4922%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.11%)</title><rect x="8.2422%" y="613" width="0.1115%" height="15" fill="rgb(236,23,11)" fg:x="739" fg:w="10"/><text x="8.4922%" y="623.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.11%)</title><rect x="8.2422%" y="597" width="0.1115%" height="15" fill="rgb(205,117,38)" fg:x="739" fg:w="10"/><text x="8.4922%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (40 samples, 0.45%)</title><rect x="7.9523%" y="757" width="0.4461%" height="15" fill="rgb(237,72,25)" fg:x="713" fg:w="40"/><text x="8.2023%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (14 samples, 0.16%)</title><rect x="8.2422%" y="741" width="0.1561%" height="15" fill="rgb(244,70,9)" fg:x="739" fg:w="14"/><text x="8.4922%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (14 samples, 0.16%)</title><rect x="8.2422%" y="725" width="0.1561%" height="15" fill="rgb(217,125,39)" fg:x="739" fg:w="14"/><text x="8.4922%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (14 samples, 0.16%)</title><rect x="8.2422%" y="709" width="0.1561%" height="15" fill="rgb(235,36,10)" fg:x="739" fg:w="14"/><text x="8.4922%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (14 samples, 0.16%)</title><rect x="8.2422%" y="693" width="0.1561%" height="15" fill="rgb(251,123,47)" fg:x="739" fg:w="14"/><text x="8.4922%" y="703.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (4 samples, 0.04%)</title><rect x="8.3538%" y="677" width="0.0446%" height="15" fill="rgb(221,13,13)" fg:x="749" fg:w="4"/><text x="8.6038%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.04%)</title><rect x="8.3538%" y="661" width="0.0446%" height="15" fill="rgb(238,131,9)" fg:x="749" fg:w="4"/><text x="8.6038%" y="671.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (30 samples, 0.33%)</title><rect x="8.3984%" y="757" width="0.3346%" height="15" fill="rgb(211,50,8)" fg:x="753" fg:w="30"/><text x="8.6484%" y="767.50"></text></g><g><title>[libSDL2-2.0.so.0.10.0] (2 samples, 0.02%)</title><rect x="8.7330%" y="757" width="0.0223%" height="15" fill="rgb(245,182,24)" fg:x="783" fg:w="2"/><text x="8.9830%" y="767.50"></text></g><g><title>[libX11.so.6.3.0] (1 samples, 0.01%)</title><rect x="8.7999%" y="741" width="0.0112%" height="15" fill="rgb(242,14,37)" fg:x="789" fg:w="1"/><text x="9.0499%" y="751.50"></text></g><g><title>_XlcGetCharSetWithSide (1 samples, 0.01%)</title><rect x="8.7999%" y="725" width="0.0112%" height="15" fill="rgb(246,228,12)" fg:x="789" fg:w="1"/><text x="9.0499%" y="735.50"></text></g><g><title>[libX11.so.6.3.0] (6 samples, 0.07%)</title><rect x="8.7553%" y="757" width="0.0669%" height="15" fill="rgb(213,55,15)" fg:x="785" fg:w="6"/><text x="9.0053%" y="767.50"></text></g><g><title>_Xlcmbstowcs (1 samples, 0.01%)</title><rect x="8.8111%" y="741" width="0.0112%" height="15" fill="rgb(209,9,3)" fg:x="790" fg:w="1"/><text x="9.0611%" y="751.50"></text></g><g><title>_XlcOpenConverter (1 samples, 0.01%)</title><rect x="8.8111%" y="725" width="0.0112%" height="15" fill="rgb(230,59,30)" fg:x="790" fg:w="1"/><text x="9.0611%" y="735.50"></text></g><g><title>XrmStringToQuark (1 samples, 0.01%)</title><rect x="8.8111%" y="709" width="0.0112%" height="15" fill="rgb(209,121,21)" fg:x="790" fg:w="1"/><text x="9.0611%" y="719.50"></text></g><g><title>[libdbus-1.so.3.19.11] (2 samples, 0.02%)</title><rect x="8.8222%" y="757" width="0.0223%" height="15" fill="rgb(220,109,13)" fg:x="791" fg:w="2"/><text x="9.0722%" y="767.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (4 samples, 0.04%)</title><rect x="8.8445%" y="757" width="0.0446%" height="15" fill="rgb(232,18,1)" fg:x="793" fg:w="4"/><text x="9.0945%" y="767.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (2 samples, 0.02%)</title><rect x="8.8668%" y="741" width="0.0223%" height="15" fill="rgb(215,41,42)" fg:x="795" fg:w="2"/><text x="9.1168%" y="751.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (2 samples, 0.02%)</title><rect x="8.8668%" y="725" width="0.0223%" height="15" fill="rgb(224,123,36)" fg:x="795" fg:w="2"/><text x="9.1168%" y="735.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (2 samples, 0.02%)</title><rect x="8.8668%" y="709" width="0.0223%" height="15" fill="rgb(240,125,3)" fg:x="795" fg:w="2"/><text x="9.1168%" y="719.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (2 samples, 0.02%)</title><rect x="8.8668%" y="693" width="0.0223%" height="15" fill="rgb(205,98,50)" fg:x="795" fg:w="2"/><text x="9.1168%" y="703.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (2 samples, 0.02%)</title><rect x="8.8668%" y="677" width="0.0223%" height="15" fill="rgb(205,185,37)" fg:x="795" fg:w="2"/><text x="9.1168%" y="687.50"></text></g><g><title>[libGLX_nvidia.so.470.103.01] (2 samples, 0.02%)</title><rect x="8.8668%" y="661" width="0.0223%" height="15" fill="rgb(238,207,15)" fg:x="795" fg:w="2"/><text x="9.1168%" y="671.50"></text></g><g><title>[libGLX_nvidia.so.470.103.01] (2 samples, 0.02%)</title><rect x="8.8668%" y="645" width="0.0223%" height="15" fill="rgb(213,199,42)" fg:x="795" fg:w="2"/><text x="9.1168%" y="655.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (2 samples, 0.02%)</title><rect x="8.8668%" y="629" width="0.0223%" height="15" fill="rgb(235,201,11)" fg:x="795" fg:w="2"/><text x="9.1168%" y="639.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (2 samples, 0.02%)</title><rect x="8.8668%" y="613" width="0.0223%" height="15" fill="rgb(207,46,11)" fg:x="795" fg:w="2"/><text x="9.1168%" y="623.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (2 samples, 0.02%)</title><rect x="8.8668%" y="597" width="0.0223%" height="15" fill="rgb(241,35,35)" fg:x="795" fg:w="2"/><text x="9.1168%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (2 samples, 0.02%)</title><rect x="8.8668%" y="581" width="0.0223%" height="15" fill="rgb(243,32,47)" fg:x="795" fg:w="2"/><text x="9.1168%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (2 samples, 0.02%)</title><rect x="8.8668%" y="565" width="0.0223%" height="15" fill="rgb(247,202,23)" fg:x="795" fg:w="2"/><text x="9.1168%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (2 samples, 0.02%)</title><rect x="8.8668%" y="549" width="0.0223%" height="15" fill="rgb(219,102,11)" fg:x="795" fg:w="2"/><text x="9.1168%" y="559.50"></text></g><g><title>__ioctl (2 samples, 0.02%)</title><rect x="8.8668%" y="533" width="0.0223%" height="15" fill="rgb(243,110,44)" fg:x="795" fg:w="2"/><text x="9.1168%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="8.8668%" y="517" width="0.0223%" height="15" fill="rgb(222,74,54)" fg:x="795" fg:w="2"/><text x="9.1168%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.8891%" y="757" width="0.0112%" height="15" fill="rgb(216,99,12)" fg:x="797" fg:w="1"/><text x="9.1391%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.8891%" y="741" width="0.0112%" height="15" fill="rgb(226,22,26)" fg:x="797" fg:w="1"/><text x="9.1391%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.8891%" y="725" width="0.0112%" height="15" fill="rgb(217,163,10)" fg:x="797" fg:w="1"/><text x="9.1391%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.8891%" y="709" width="0.0112%" height="15" fill="rgb(213,25,53)" fg:x="797" fg:w="1"/><text x="9.1391%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.8891%" y="693" width="0.0112%" height="15" fill="rgb(252,105,26)" fg:x="797" fg:w="1"/><text x="9.1391%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.8891%" y="677" width="0.0112%" height="15" fill="rgb(220,39,43)" fg:x="797" fg:w="1"/><text x="9.1391%" y="687.50"></text></g><g><title>_XlcResolveLocaleName (1 samples, 0.01%)</title><rect x="8.9003%" y="757" width="0.0112%" height="15" fill="rgb(229,68,48)" fg:x="798" fg:w="1"/><text x="9.1503%" y="767.50"></text></g><g><title>[libX11.so.6.3.0] (1 samples, 0.01%)</title><rect x="8.9003%" y="741" width="0.0112%" height="15" fill="rgb(252,8,32)" fg:x="798" fg:w="1"/><text x="9.1503%" y="751.50"></text></g><g><title>[libX11.so.6.3.0] (1 samples, 0.01%)</title><rect x="8.9003%" y="725" width="0.0112%" height="15" fill="rgb(223,20,43)" fg:x="798" fg:w="1"/><text x="9.1503%" y="735.50"></text></g><g><title>__GI___libc_malloc (14 samples, 0.16%)</title><rect x="8.9114%" y="757" width="0.1561%" height="15" fill="rgb(229,81,49)" fg:x="799" fg:w="14"/><text x="9.1614%" y="767.50"></text></g><g><title>__memcmp_avx2_movbe (4 samples, 0.04%)</title><rect x="9.0676%" y="757" width="0.0446%" height="15" fill="rgb(236,28,36)" fg:x="813" fg:w="4"/><text x="9.3176%" y="767.50"></text></g><g><title>_dbus_header_set_field_basic (1 samples, 0.01%)</title><rect x="9.1122%" y="757" width="0.0112%" height="15" fill="rgb(249,185,26)" fg:x="817" fg:w="1"/><text x="9.3622%" y="767.50"></text></g><g><title>_dbus_type_reader_get_current_type (1 samples, 0.01%)</title><rect x="9.1234%" y="757" width="0.0112%" height="15" fill="rgb(249,174,33)" fg:x="818" fg:w="1"/><text x="9.3734%" y="767.50"></text></g><g><title>_int_free (38 samples, 0.42%)</title><rect x="9.1345%" y="757" width="0.4238%" height="15" fill="rgb(233,201,37)" fg:x="819" fg:w="38"/><text x="9.3845%" y="767.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="9.5583%" y="757" width="0.0112%" height="15" fill="rgb(221,78,26)" fg:x="857" fg:w="1"/><text x="9.8083%" y="767.50"></text></g><g><title>core::hash::BuildHasher::hash_one (133 samples, 1.48%)</title><rect x="9.5695%" y="757" width="1.4834%" height="15" fill="rgb(250,127,30)" fg:x="858" fg:w="133"/><text x="9.8195%" y="767.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (69 samples, 0.77%)</title><rect x="10.2833%" y="741" width="0.7696%" height="15" fill="rgb(230,49,44)" fg:x="922" fg:w="69"/><text x="10.5333%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (69 samples, 0.77%)</title><rect x="10.2833%" y="725" width="0.7696%" height="15" fill="rgb(229,67,23)" fg:x="922" fg:w="69"/><text x="10.5333%" y="735.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (69 samples, 0.77%)</title><rect x="10.2833%" y="709" width="0.7696%" height="15" fill="rgb(249,83,47)" fg:x="922" fg:w="69"/><text x="10.5333%" y="719.50"></text></g><g><title>core::hash::Hasher::write_u8 (3 samples, 0.03%)</title><rect x="11.0194%" y="693" width="0.0335%" height="15" fill="rgb(215,43,3)" fg:x="988" fg:w="3"/><text x="11.2694%" y="703.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="13.5735%" y="549" width="0.0112%" height="15" fill="rgb(238,154,13)" fg:x="1217" fg:w="1"/><text x="13.8235%" y="559.50"></text></g><g><title>tcache_get (1 samples, 0.01%)</title><rect x="13.5735%" y="533" width="0.0112%" height="15" fill="rgb(219,56,2)" fg:x="1217" fg:w="1"/><text x="13.8235%" y="543.50"></text></g><g><title>XFlush (3 samples, 0.03%)</title><rect x="13.5623%" y="645" width="0.0335%" height="15" fill="rgb(233,0,4)" fg:x="1216" fg:w="3"/><text x="13.8123%" y="655.50"></text></g><g><title>_XEventsQueued (3 samples, 0.03%)</title><rect x="13.5623%" y="629" width="0.0335%" height="15" fill="rgb(235,30,7)" fg:x="1216" fg:w="3"/><text x="13.8123%" y="639.50"></text></g><g><title>[libX11.so.6.3.0] (3 samples, 0.03%)</title><rect x="13.5623%" y="613" width="0.0335%" height="15" fill="rgb(250,79,13)" fg:x="1216" fg:w="3"/><text x="13.8123%" y="623.50"></text></g><g><title>[libX11.so.6.3.0] (3 samples, 0.03%)</title><rect x="13.5623%" y="597" width="0.0335%" height="15" fill="rgb(211,146,34)" fg:x="1216" fg:w="3"/><text x="13.8123%" y="607.50"></text></g><g><title>[libxcb.so.1.1.0] (3 samples, 0.03%)</title><rect x="13.5623%" y="581" width="0.0335%" height="15" fill="rgb(228,22,38)" fg:x="1216" fg:w="3"/><text x="13.8123%" y="591.50"></text></g><g><title>[libxcb.so.1.1.0] (2 samples, 0.02%)</title><rect x="13.5735%" y="565" width="0.0223%" height="15" fill="rgb(235,168,5)" fg:x="1217" fg:w="2"/><text x="13.8235%" y="575.50"></text></g><g><title>__libc_recvmsg (1 samples, 0.01%)</title><rect x="13.5847%" y="549" width="0.0112%" height="15" fill="rgb(221,155,16)" fg:x="1218" fg:w="1"/><text x="13.8347%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.5847%" y="533" width="0.0112%" height="15" fill="rgb(215,215,53)" fg:x="1218" fg:w="1"/><text x="13.8347%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.5847%" y="517" width="0.0112%" height="15" fill="rgb(223,4,10)" fg:x="1218" fg:w="1"/><text x="13.8347%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.5847%" y="501" width="0.0112%" height="15" fill="rgb(234,103,6)" fg:x="1218" fg:w="1"/><text x="13.8347%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.5847%" y="485" width="0.0112%" height="15" fill="rgb(227,97,0)" fg:x="1218" fg:w="1"/><text x="13.8347%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.5847%" y="469" width="0.0112%" height="15" fill="rgb(234,150,53)" fg:x="1218" fg:w="1"/><text x="13.8347%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.5847%" y="453" width="0.0112%" height="15" fill="rgb(228,201,54)" fg:x="1218" fg:w="1"/><text x="13.8347%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.5847%" y="437" width="0.0112%" height="15" fill="rgb(222,22,37)" fg:x="1218" fg:w="1"/><text x="13.8347%" y="447.50"></text></g><g><title>XChangeProperty (1 samples, 0.01%)</title><rect x="13.5958%" y="613" width="0.0112%" height="15" fill="rgb(237,53,32)" fg:x="1219" fg:w="1"/><text x="13.8458%" y="623.50"></text></g><g><title>[libX11.so.6.3.0] (1 samples, 0.01%)</title><rect x="13.6181%" y="549" width="0.0112%" height="15" fill="rgb(233,25,53)" fg:x="1221" fg:w="1"/><text x="13.8681%" y="559.50"></text></g><g><title>__GI___poll (2 samples, 0.02%)</title><rect x="13.6293%" y="501" width="0.0223%" height="15" fill="rgb(210,40,34)" fg:x="1222" fg:w="2"/><text x="13.8793%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="13.6293%" y="485" width="0.0223%" height="15" fill="rgb(241,220,44)" fg:x="1222" fg:w="2"/><text x="13.8793%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.6404%" y="469" width="0.0112%" height="15" fill="rgb(235,28,35)" fg:x="1223" fg:w="1"/><text x="13.8904%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.6404%" y="453" width="0.0112%" height="15" fill="rgb(210,56,17)" fg:x="1223" fg:w="1"/><text x="13.8904%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.6404%" y="437" width="0.0112%" height="15" fill="rgb(224,130,29)" fg:x="1223" fg:w="1"/><text x="13.8904%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.6404%" y="421" width="0.0112%" height="15" fill="rgb(235,212,8)" fg:x="1223" fg:w="1"/><text x="13.8904%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.6404%" y="405" width="0.0112%" height="15" fill="rgb(223,33,50)" fg:x="1223" fg:w="1"/><text x="13.8904%" y="415.50"></text></g><g><title>_XSend (4 samples, 0.04%)</title><rect x="13.6181%" y="565" width="0.0446%" height="15" fill="rgb(219,149,13)" fg:x="1221" fg:w="4"/><text x="13.8681%" y="575.50"></text></g><g><title>xcb_writev (3 samples, 0.03%)</title><rect x="13.6293%" y="549" width="0.0335%" height="15" fill="rgb(250,156,29)" fg:x="1222" fg:w="3"/><text x="13.8793%" y="559.50"></text></g><g><title>[libxcb.so.1.1.0] (3 samples, 0.03%)</title><rect x="13.6293%" y="533" width="0.0335%" height="15" fill="rgb(216,193,19)" fg:x="1222" fg:w="3"/><text x="13.8793%" y="543.50"></text></g><g><title>[libxcb.so.1.1.0] (3 samples, 0.03%)</title><rect x="13.6293%" y="517" width="0.0335%" height="15" fill="rgb(216,135,14)" fg:x="1222" fg:w="3"/><text x="13.8793%" y="527.50"></text></g><g><title>__GI___writev (1 samples, 0.01%)</title><rect x="13.6516%" y="501" width="0.0112%" height="15" fill="rgb(241,47,5)" fg:x="1224" fg:w="1"/><text x="13.9016%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.6516%" y="485" width="0.0112%" height="15" fill="rgb(233,42,35)" fg:x="1224" fg:w="1"/><text x="13.9016%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.6516%" y="469" width="0.0112%" height="15" fill="rgb(231,13,6)" fg:x="1224" fg:w="1"/><text x="13.9016%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.6516%" y="453" width="0.0112%" height="15" fill="rgb(207,181,40)" fg:x="1224" fg:w="1"/><text x="13.9016%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.6516%" y="437" width="0.0112%" height="15" fill="rgb(254,173,49)" fg:x="1224" fg:w="1"/><text x="13.9016%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.6516%" y="421" width="0.0112%" height="15" fill="rgb(221,1,38)" fg:x="1224" fg:w="1"/><text x="13.9016%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.6516%" y="405" width="0.0112%" height="15" fill="rgb(206,124,46)" fg:x="1224" fg:w="1"/><text x="13.9016%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.6516%" y="389" width="0.0112%" height="15" fill="rgb(249,21,11)" fg:x="1224" fg:w="1"/><text x="13.9016%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.6516%" y="373" width="0.0112%" height="15" fill="rgb(222,201,40)" fg:x="1224" fg:w="1"/><text x="13.9016%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.6516%" y="357" width="0.0112%" height="15" fill="rgb(235,61,29)" fg:x="1224" fg:w="1"/><text x="13.9016%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.6516%" y="341" width="0.0112%" height="15" fill="rgb(219,207,3)" fg:x="1224" fg:w="1"/><text x="13.9016%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.6516%" y="325" width="0.0112%" height="15" fill="rgb(222,56,46)" fg:x="1224" fg:w="1"/><text x="13.9016%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.6516%" y="309" width="0.0112%" height="15" fill="rgb(239,76,54)" fg:x="1224" fg:w="1"/><text x="13.9016%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.6516%" y="293" width="0.0112%" height="15" fill="rgb(231,124,27)" fg:x="1224" fg:w="1"/><text x="13.9016%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.6516%" y="277" width="0.0112%" height="15" fill="rgb(249,195,6)" fg:x="1224" fg:w="1"/><text x="13.9016%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.6516%" y="261" width="0.0112%" height="15" fill="rgb(237,174,47)" fg:x="1224" fg:w="1"/><text x="13.9016%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.6516%" y="245" width="0.0112%" height="15" fill="rgb(206,201,31)" fg:x="1224" fg:w="1"/><text x="13.9016%" y="255.50"></text></g><g><title>[libxcb.so.1.1.0] (2 samples, 0.02%)</title><rect x="13.6627%" y="517" width="0.0223%" height="15" fill="rgb(231,57,52)" fg:x="1225" fg:w="2"/><text x="13.9127%" y="527.50"></text></g><g><title>__libc_recvmsg (2 samples, 0.02%)</title><rect x="13.6627%" y="501" width="0.0223%" height="15" fill="rgb(248,177,22)" fg:x="1225" fg:w="2"/><text x="13.9127%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="13.6627%" y="485" width="0.0223%" height="15" fill="rgb(215,211,37)" fg:x="1225" fg:w="2"/><text x="13.9127%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="13.6627%" y="469" width="0.0223%" height="15" fill="rgb(241,128,51)" fg:x="1225" fg:w="2"/><text x="13.9127%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="13.6627%" y="453" width="0.0223%" height="15" fill="rgb(227,165,31)" fg:x="1225" fg:w="2"/><text x="13.9127%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="13.6627%" y="437" width="0.0223%" height="15" fill="rgb(228,167,24)" fg:x="1225" fg:w="2"/><text x="13.9127%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="13.6627%" y="421" width="0.0223%" height="15" fill="rgb(228,143,12)" fg:x="1225" fg:w="2"/><text x="13.9127%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="13.6627%" y="405" width="0.0223%" height="15" fill="rgb(249,149,8)" fg:x="1225" fg:w="2"/><text x="13.9127%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="13.6627%" y="389" width="0.0223%" height="15" fill="rgb(243,35,44)" fg:x="1225" fg:w="2"/><text x="13.9127%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.6739%" y="373" width="0.0112%" height="15" fill="rgb(246,89,9)" fg:x="1226" fg:w="1"/><text x="13.9239%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.6739%" y="357" width="0.0112%" height="15" fill="rgb(233,213,13)" fg:x="1226" fg:w="1"/><text x="13.9239%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.6739%" y="341" width="0.0112%" height="15" fill="rgb(233,141,41)" fg:x="1226" fg:w="1"/><text x="13.9239%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.6739%" y="325" width="0.0112%" height="15" fill="rgb(239,167,4)" fg:x="1226" fg:w="1"/><text x="13.9239%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.6739%" y="309" width="0.0112%" height="15" fill="rgb(209,217,16)" fg:x="1226" fg:w="1"/><text x="13.9239%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.6739%" y="293" width="0.0112%" height="15" fill="rgb(219,88,35)" fg:x="1226" fg:w="1"/><text x="13.9239%" y="303.50"></text></g><g><title>XTranslateCoordinates (8 samples, 0.09%)</title><rect x="13.6181%" y="597" width="0.0892%" height="15" fill="rgb(220,193,23)" fg:x="1221" fg:w="8"/><text x="13.8681%" y="607.50"></text></g><g><title>_XReply (8 samples, 0.09%)</title><rect x="13.6181%" y="581" width="0.0892%" height="15" fill="rgb(230,90,52)" fg:x="1221" fg:w="8"/><text x="13.8681%" y="591.50"></text></g><g><title>xcb_wait_for_reply64 (4 samples, 0.04%)</title><rect x="13.6627%" y="565" width="0.0446%" height="15" fill="rgb(252,106,19)" fg:x="1225" fg:w="4"/><text x="13.9127%" y="575.50"></text></g><g><title>[libxcb.so.1.1.0] (4 samples, 0.04%)</title><rect x="13.6627%" y="549" width="0.0446%" height="15" fill="rgb(206,74,20)" fg:x="1225" fg:w="4"/><text x="13.9127%" y="559.50"></text></g><g><title>[libxcb.so.1.1.0] (4 samples, 0.04%)</title><rect x="13.6627%" y="533" width="0.0446%" height="15" fill="rgb(230,138,44)" fg:x="1225" fg:w="4"/><text x="13.9127%" y="543.50"></text></g><g><title>__GI___poll (2 samples, 0.02%)</title><rect x="13.6850%" y="517" width="0.0223%" height="15" fill="rgb(235,182,43)" fg:x="1227" fg:w="2"/><text x="13.9350%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="13.6850%" y="501" width="0.0223%" height="15" fill="rgb(242,16,51)" fg:x="1227" fg:w="2"/><text x="13.9350%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.6962%" y="485" width="0.0112%" height="15" fill="rgb(248,9,4)" fg:x="1228" fg:w="1"/><text x="13.9462%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.6962%" y="469" width="0.0112%" height="15" fill="rgb(210,31,22)" fg:x="1228" fg:w="1"/><text x="13.9462%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.6962%" y="453" width="0.0112%" height="15" fill="rgb(239,54,39)" fg:x="1228" fg:w="1"/><text x="13.9462%" y="463.50"></text></g><g><title>[libdbus-1.so.3.19.11] (4 samples, 0.04%)</title><rect x="13.7185%" y="565" width="0.0446%" height="15" fill="rgb(230,99,41)" fg:x="1230" fg:w="4"/><text x="13.9685%" y="575.50"></text></g><g><title>[libdbus-1.so.3.19.11] (4 samples, 0.04%)</title><rect x="13.7185%" y="549" width="0.0446%" height="15" fill="rgb(253,106,12)" fg:x="1230" fg:w="4"/><text x="13.9685%" y="559.50"></text></g><g><title>[libdbus-1.so.3.19.11] (4 samples, 0.04%)</title><rect x="13.7185%" y="533" width="0.0446%" height="15" fill="rgb(213,46,41)" fg:x="1230" fg:w="4"/><text x="13.9685%" y="543.50"></text></g><g><title>[libdbus-1.so.3.19.11] (4 samples, 0.04%)</title><rect x="13.7185%" y="517" width="0.0446%" height="15" fill="rgb(215,133,35)" fg:x="1230" fg:w="4"/><text x="13.9685%" y="527.50"></text></g><g><title>[libdbus-1.so.3.19.11] (4 samples, 0.04%)</title><rect x="13.7185%" y="501" width="0.0446%" height="15" fill="rgb(213,28,5)" fg:x="1230" fg:w="4"/><text x="13.9685%" y="511.50"></text></g><g><title>[libdbus-1.so.3.19.11] (4 samples, 0.04%)</title><rect x="13.7185%" y="485" width="0.0446%" height="15" fill="rgb(215,77,49)" fg:x="1230" fg:w="4"/><text x="13.9685%" y="495.50"></text></g><g><title>[libdbus-1.so.3.19.11] (4 samples, 0.04%)</title><rect x="13.7185%" y="469" width="0.0446%" height="15" fill="rgb(248,100,22)" fg:x="1230" fg:w="4"/><text x="13.9685%" y="479.50"></text></g><g><title>__libc_sendmsg (3 samples, 0.03%)</title><rect x="13.7296%" y="453" width="0.0335%" height="15" fill="rgb(208,67,9)" fg:x="1231" fg:w="3"/><text x="13.9796%" y="463.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="13.7296%" y="437" width="0.0335%" height="15" fill="rgb(219,133,21)" fg:x="1231" fg:w="3"/><text x="13.9796%" y="447.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="13.7296%" y="421" width="0.0335%" height="15" fill="rgb(246,46,29)" fg:x="1231" fg:w="3"/><text x="13.9796%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="13.7408%" y="405" width="0.0223%" height="15" fill="rgb(246,185,52)" fg:x="1232" fg:w="2"/><text x="13.9908%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="13.7408%" y="389" width="0.0223%" height="15" fill="rgb(252,136,11)" fg:x="1232" fg:w="2"/><text x="13.9908%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="13.7408%" y="373" width="0.0223%" height="15" fill="rgb(219,138,53)" fg:x="1232" fg:w="2"/><text x="13.9908%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="13.7408%" y="357" width="0.0223%" height="15" fill="rgb(211,51,23)" fg:x="1232" fg:w="2"/><text x="13.9908%" y="367.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="13.7408%" y="341" width="0.0223%" height="15" fill="rgb(247,221,28)" fg:x="1232" fg:w="2"/><text x="13.9908%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="13.7408%" y="325" width="0.0223%" height="15" fill="rgb(251,222,45)" fg:x="1232" fg:w="2"/><text x="13.9908%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="13.7408%" y="309" width="0.0223%" height="15" fill="rgb(217,162,53)" fg:x="1232" fg:w="2"/><text x="13.9908%" y="319.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="13.7408%" y="293" width="0.0223%" height="15" fill="rgb(229,93,14)" fg:x="1232" fg:w="2"/><text x="13.9908%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="13.7408%" y="277" width="0.0223%" height="15" fill="rgb(209,67,49)" fg:x="1232" fg:w="2"/><text x="13.9908%" y="287.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="13.7408%" y="261" width="0.0223%" height="15" fill="rgb(213,87,29)" fg:x="1232" fg:w="2"/><text x="13.9908%" y="271.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="13.7408%" y="245" width="0.0223%" height="15" fill="rgb(205,151,52)" fg:x="1232" fg:w="2"/><text x="13.9908%" y="255.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="13.7408%" y="229" width="0.0223%" height="15" fill="rgb(253,215,39)" fg:x="1232" fg:w="2"/><text x="13.9908%" y="239.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="13.7408%" y="213" width="0.0223%" height="15" fill="rgb(221,220,41)" fg:x="1232" fg:w="2"/><text x="13.9908%" y="223.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="13.7408%" y="197" width="0.0223%" height="15" fill="rgb(218,133,21)" fg:x="1232" fg:w="2"/><text x="13.9908%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.7520%" y="181" width="0.0112%" height="15" fill="rgb(221,193,43)" fg:x="1233" fg:w="1"/><text x="14.0020%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.7520%" y="165" width="0.0112%" height="15" fill="rgb(240,128,52)" fg:x="1233" fg:w="1"/><text x="14.0020%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.7520%" y="149" width="0.0112%" height="15" fill="rgb(253,114,12)" fg:x="1233" fg:w="1"/><text x="14.0020%" y="159.50"></text></g><g><title>[libdbus-1.so.3.19.11] (1 samples, 0.01%)</title><rect x="13.7631%" y="437" width="0.0112%" height="15" fill="rgb(215,223,47)" fg:x="1234" fg:w="1"/><text x="14.0131%" y="447.50"></text></g><g><title>[libdbus-1.so.3.19.11] (1 samples, 0.01%)</title><rect x="13.7631%" y="421" width="0.0112%" height="15" fill="rgb(248,225,23)" fg:x="1234" fg:w="1"/><text x="14.0131%" y="431.50"></text></g><g><title>_dbus_type_reader_recurse (1 samples, 0.01%)</title><rect x="13.7631%" y="405" width="0.0112%" height="15" fill="rgb(250,108,0)" fg:x="1234" fg:w="1"/><text x="14.0131%" y="415.50"></text></g><g><title>_dbus_first_type_in_signature (1 samples, 0.01%)</title><rect x="13.7631%" y="389" width="0.0112%" height="15" fill="rgb(228,208,7)" fg:x="1234" fg:w="1"/><text x="14.0131%" y="399.50"></text></g><g><title>dbus_message_append_args_valist (2 samples, 0.02%)</title><rect x="13.7631%" y="565" width="0.0223%" height="15" fill="rgb(244,45,10)" fg:x="1234" fg:w="2"/><text x="14.0131%" y="575.50"></text></g><g><title>dbus_message_iter_append_basic (2 samples, 0.02%)</title><rect x="13.7631%" y="549" width="0.0223%" height="15" fill="rgb(207,125,25)" fg:x="1234" fg:w="2"/><text x="14.0131%" y="559.50"></text></g><g><title>[libdbus-1.so.3.19.11] (2 samples, 0.02%)</title><rect x="13.7631%" y="533" width="0.0223%" height="15" fill="rgb(210,195,18)" fg:x="1234" fg:w="2"/><text x="14.0131%" y="543.50"></text></g><g><title>_dbus_header_set_field_basic (2 samples, 0.02%)</title><rect x="13.7631%" y="517" width="0.0223%" height="15" fill="rgb(249,80,12)" fg:x="1234" fg:w="2"/><text x="14.0131%" y="527.50"></text></g><g><title>_dbus_type_reader_set_basic (2 samples, 0.02%)</title><rect x="13.7631%" y="501" width="0.0223%" height="15" fill="rgb(221,65,9)" fg:x="1234" fg:w="2"/><text x="14.0131%" y="511.50"></text></g><g><title>[libdbus-1.so.3.19.11] (2 samples, 0.02%)</title><rect x="13.7631%" y="485" width="0.0223%" height="15" fill="rgb(235,49,36)" fg:x="1234" fg:w="2"/><text x="14.0131%" y="495.50"></text></g><g><title>[libdbus-1.so.3.19.11] (2 samples, 0.02%)</title><rect x="13.7631%" y="469" width="0.0223%" height="15" fill="rgb(225,32,20)" fg:x="1234" fg:w="2"/><text x="14.0131%" y="479.50"></text></g><g><title>[libdbus-1.so.3.19.11] (2 samples, 0.02%)</title><rect x="13.7631%" y="453" width="0.0223%" height="15" fill="rgb(215,141,46)" fg:x="1234" fg:w="2"/><text x="14.0131%" y="463.50"></text></g><g><title>_dbus_type_reader_next (1 samples, 0.01%)</title><rect x="13.7743%" y="437" width="0.0112%" height="15" fill="rgb(250,160,47)" fg:x="1235" fg:w="1"/><text x="14.0243%" y="447.50"></text></g><g><title>[libdbus-1.so.3.19.11] (1 samples, 0.01%)</title><rect x="13.7743%" y="421" width="0.0112%" height="15" fill="rgb(216,222,40)" fg:x="1235" fg:w="1"/><text x="14.0243%" y="431.50"></text></g><g><title>[libdbus-1.so.3.19.11] (1 samples, 0.01%)</title><rect x="13.7743%" y="405" width="0.0112%" height="15" fill="rgb(234,217,39)" fg:x="1235" fg:w="1"/><text x="14.0243%" y="415.50"></text></g><g><title>_dbus_marshal_read_uint32 (1 samples, 0.01%)</title><rect x="13.7743%" y="389" width="0.0112%" height="15" fill="rgb(207,178,40)" fg:x="1235" fg:w="1"/><text x="14.0243%" y="399.50"></text></g><g><title>_dbus_type_writer_recurse (1 samples, 0.01%)</title><rect x="13.7854%" y="533" width="0.0112%" height="15" fill="rgb(221,136,13)" fg:x="1236" fg:w="1"/><text x="14.0354%" y="543.50"></text></g><g><title>[libdbus-1.so.3.19.11] (1 samples, 0.01%)</title><rect x="13.7854%" y="517" width="0.0112%" height="15" fill="rgb(249,199,10)" fg:x="1236" fg:w="1"/><text x="14.0354%" y="527.50"></text></g><g><title>_dbus_first_type_in_signature (1 samples, 0.01%)</title><rect x="13.7854%" y="501" width="0.0112%" height="15" fill="rgb(249,222,13)" fg:x="1236" fg:w="1"/><text x="14.0354%" y="511.50"></text></g><g><title>[libSDL2-2.0.so.0.10.0] (8 samples, 0.09%)</title><rect x="13.7185%" y="581" width="0.0892%" height="15" fill="rgb(244,185,38)" fg:x="1230" fg:w="8"/><text x="13.9685%" y="591.50"></text></g><g><title>dbus_message_new_method_call (2 samples, 0.02%)</title><rect x="13.7854%" y="565" width="0.0223%" height="15" fill="rgb(236,202,9)" fg:x="1236" fg:w="2"/><text x="14.0354%" y="575.50"></text></g><g><title>[libdbus-1.so.3.19.11] (2 samples, 0.02%)</title><rect x="13.7854%" y="549" width="0.0223%" height="15" fill="rgb(250,229,37)" fg:x="1236" fg:w="2"/><text x="14.0354%" y="559.50"></text></g><g><title>_dbus_type_writer_write_basic (1 samples, 0.01%)</title><rect x="13.7966%" y="533" width="0.0112%" height="15" fill="rgb(206,174,23)" fg:x="1237" fg:w="1"/><text x="14.0466%" y="543.50"></text></g><g><title>[libdbus-1.so.3.19.11] (1 samples, 0.01%)</title><rect x="13.7966%" y="517" width="0.0112%" height="15" fill="rgb(211,33,43)" fg:x="1237" fg:w="1"/><text x="14.0466%" y="527.50"></text></g><g><title>[libdbus-1.so.3.19.11] (1 samples, 0.01%)</title><rect x="13.7966%" y="501" width="0.0112%" height="15" fill="rgb(245,58,50)" fg:x="1237" fg:w="1"/><text x="14.0466%" y="511.50"></text></g><g><title>[libdbus-1.so.3.19.11] (1 samples, 0.01%)</title><rect x="13.7966%" y="485" width="0.0112%" height="15" fill="rgb(244,68,36)" fg:x="1237" fg:w="1"/><text x="14.0466%" y="495.50"></text></g><g><title>[libdbus-1.so.3.19.11] (1 samples, 0.01%)</title><rect x="13.7966%" y="469" width="0.0112%" height="15" fill="rgb(232,229,15)" fg:x="1237" fg:w="1"/><text x="14.0466%" y="479.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="13.7966%" y="453" width="0.0112%" height="15" fill="rgb(254,30,23)" fg:x="1237" fg:w="1"/><text x="14.0466%" y="463.50"></text></g><g><title>[libdbus-1.so.3.19.11] (1 samples, 0.01%)</title><rect x="13.8077%" y="453" width="0.0112%" height="15" fill="rgb(235,160,14)" fg:x="1238" fg:w="1"/><text x="14.0577%" y="463.50"></text></g><g><title>[libdbus-1.so.3.19.11] (2 samples, 0.02%)</title><rect x="13.8077%" y="469" width="0.0223%" height="15" fill="rgb(212,155,44)" fg:x="1238" fg:w="2"/><text x="14.0577%" y="479.50"></text></g><g><title>_dbus_hash_table_lookup_int (1 samples, 0.01%)</title><rect x="13.8189%" y="453" width="0.0112%" height="15" fill="rgb(226,2,50)" fg:x="1239" fg:w="1"/><text x="14.0689%" y="463.50"></text></g><g><title>[libdbus-1.so.3.19.11] (1 samples, 0.01%)</title><rect x="13.8189%" y="437" width="0.0112%" height="15" fill="rgb(234,177,6)" fg:x="1239" fg:w="1"/><text x="14.0689%" y="447.50"></text></g><g><title>[libdbus-1.so.3.19.11] (1 samples, 0.01%)</title><rect x="13.8189%" y="421" width="0.0112%" height="15" fill="rgb(217,24,9)" fg:x="1239" fg:w="1"/><text x="14.0689%" y="431.50"></text></g><g><title>[libdbus-1.so.3.19.11] (5 samples, 0.06%)</title><rect x="13.8077%" y="501" width="0.0558%" height="15" fill="rgb(220,13,46)" fg:x="1238" fg:w="5"/><text x="14.0577%" y="511.50"></text></g><g><title>[libdbus-1.so.3.19.11] (5 samples, 0.06%)</title><rect x="13.8077%" y="485" width="0.0558%" height="15" fill="rgb(239,221,27)" fg:x="1238" fg:w="5"/><text x="14.0577%" y="495.50"></text></g><g><title>__libc_recvmsg (3 samples, 0.03%)</title><rect x="13.8300%" y="469" width="0.0335%" height="15" fill="rgb(222,198,25)" fg:x="1240" fg:w="3"/><text x="14.0800%" y="479.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="13.8300%" y="453" width="0.0335%" height="15" fill="rgb(211,99,13)" fg:x="1240" fg:w="3"/><text x="14.0800%" y="463.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="13.8300%" y="437" width="0.0335%" height="15" fill="rgb(232,111,31)" fg:x="1240" fg:w="3"/><text x="14.0800%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="13.8412%" y="421" width="0.0223%" height="15" fill="rgb(245,82,37)" fg:x="1241" fg:w="2"/><text x="14.0912%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="13.8412%" y="405" width="0.0223%" height="15" fill="rgb(227,149,46)" fg:x="1241" fg:w="2"/><text x="14.0912%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.8523%" y="389" width="0.0112%" height="15" fill="rgb(218,36,50)" fg:x="1242" fg:w="1"/><text x="14.1023%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.8523%" y="373" width="0.0112%" height="15" fill="rgb(226,80,48)" fg:x="1242" fg:w="1"/><text x="14.1023%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.8523%" y="357" width="0.0112%" height="15" fill="rgb(238,224,15)" fg:x="1242" fg:w="1"/><text x="14.1023%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.8523%" y="341" width="0.0112%" height="15" fill="rgb(241,136,10)" fg:x="1242" fg:w="1"/><text x="14.1023%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.8523%" y="325" width="0.0112%" height="15" fill="rgb(208,32,45)" fg:x="1242" fg:w="1"/><text x="14.1023%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.8523%" y="309" width="0.0112%" height="15" fill="rgb(207,135,9)" fg:x="1242" fg:w="1"/><text x="14.1023%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.8523%" y="293" width="0.0112%" height="15" fill="rgb(206,86,44)" fg:x="1242" fg:w="1"/><text x="14.1023%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.8523%" y="277" width="0.0112%" height="15" fill="rgb(245,177,15)" fg:x="1242" fg:w="1"/><text x="14.1023%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.8523%" y="261" width="0.0112%" height="15" fill="rgb(206,64,50)" fg:x="1242" fg:w="1"/><text x="14.1023%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.8523%" y="245" width="0.0112%" height="15" fill="rgb(234,36,40)" fg:x="1242" fg:w="1"/><text x="14.1023%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.8523%" y="229" width="0.0112%" height="15" fill="rgb(213,64,8)" fg:x="1242" fg:w="1"/><text x="14.1023%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.8523%" y="213" width="0.0112%" height="15" fill="rgb(210,75,36)" fg:x="1242" fg:w="1"/><text x="14.1023%" y="223.50"></text></g><g><title>[libdbus-1.so.3.19.11] (9 samples, 0.10%)</title><rect x="13.8077%" y="549" width="0.1004%" height="15" fill="rgb(229,88,21)" fg:x="1238" fg:w="9"/><text x="14.0577%" y="559.50"></text></g><g><title>[libdbus-1.so.3.19.11] (9 samples, 0.10%)</title><rect x="13.8077%" y="533" width="0.1004%" height="15" fill="rgb(252,204,47)" fg:x="1238" fg:w="9"/><text x="14.0577%" y="543.50"></text></g><g><title>[libdbus-1.so.3.19.11] (9 samples, 0.10%)</title><rect x="13.8077%" y="517" width="0.1004%" height="15" fill="rgb(208,77,27)" fg:x="1238" fg:w="9"/><text x="14.0577%" y="527.50"></text></g><g><title>__GI___poll (4 samples, 0.04%)</title><rect x="13.8635%" y="501" width="0.0446%" height="15" fill="rgb(221,76,26)" fg:x="1243" fg:w="4"/><text x="14.1135%" y="511.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="13.8635%" y="485" width="0.0446%" height="15" fill="rgb(225,139,18)" fg:x="1243" fg:w="4"/><text x="14.1135%" y="495.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="13.8635%" y="469" width="0.0446%" height="15" fill="rgb(230,137,11)" fg:x="1243" fg:w="4"/><text x="14.1135%" y="479.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="13.8635%" y="453" width="0.0446%" height="15" fill="rgb(212,28,1)" fg:x="1243" fg:w="4"/><text x="14.1135%" y="463.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="13.8635%" y="437" width="0.0446%" height="15" fill="rgb(248,164,17)" fg:x="1243" fg:w="4"/><text x="14.1135%" y="447.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="13.8635%" y="421" width="0.0446%" height="15" fill="rgb(222,171,42)" fg:x="1243" fg:w="4"/><text x="14.1135%" y="431.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="13.8746%" y="405" width="0.0335%" height="15" fill="rgb(243,84,45)" fg:x="1244" fg:w="3"/><text x="14.1246%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="13.8858%" y="389" width="0.0223%" height="15" fill="rgb(252,49,23)" fg:x="1245" fg:w="2"/><text x="14.1358%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="13.8858%" y="373" width="0.0223%" height="15" fill="rgb(215,19,7)" fg:x="1245" fg:w="2"/><text x="14.1358%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="13.8858%" y="357" width="0.0223%" height="15" fill="rgb(238,81,41)" fg:x="1245" fg:w="2"/><text x="14.1358%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.8969%" y="341" width="0.0112%" height="15" fill="rgb(210,199,37)" fg:x="1246" fg:w="1"/><text x="14.1469%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.8969%" y="325" width="0.0112%" height="15" fill="rgb(244,192,49)" fg:x="1246" fg:w="1"/><text x="14.1469%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.8969%" y="309" width="0.0112%" height="15" fill="rgb(226,211,11)" fg:x="1246" fg:w="1"/><text x="14.1469%" y="319.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="13.9081%" y="549" width="0.0112%" height="15" fill="rgb(236,162,54)" fg:x="1247" fg:w="1"/><text x="14.1581%" y="559.50"></text></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="13.9193%" y="549" width="0.0112%" height="15" fill="rgb(220,229,9)" fg:x="1248" fg:w="1"/><text x="14.1693%" y="559.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.01%)</title><rect x="13.9193%" y="533" width="0.0112%" height="15" fill="rgb(250,87,22)" fg:x="1248" fg:w="1"/><text x="14.1693%" y="543.50"></text></g><g><title>[libdbus-1.so.3.19.11] (12 samples, 0.13%)</title><rect x="13.8077%" y="565" width="0.1338%" height="15" fill="rgb(239,43,17)" fg:x="1238" fg:w="12"/><text x="14.0577%" y="575.50"></text></g><g><title>_dbus_get_monotonic_time (1 samples, 0.01%)</title><rect x="13.9304%" y="549" width="0.0112%" height="15" fill="rgb(231,177,25)" fg:x="1249" fg:w="1"/><text x="14.1804%" y="559.50"></text></g><g><title>__GI___clock_gettime (1 samples, 0.01%)</title><rect x="13.9304%" y="533" width="0.0112%" height="15" fill="rgb(219,179,1)" fg:x="1249" fg:w="1"/><text x="14.1804%" y="543.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.01%)</title><rect x="13.9304%" y="517" width="0.0112%" height="15" fill="rgb(238,219,53)" fg:x="1249" fg:w="1"/><text x="14.1804%" y="527.50"></text></g><g><title>[libdbus-1.so.3.19.11] (4 samples, 0.04%)</title><rect x="13.9416%" y="517" width="0.0446%" height="15" fill="rgb(232,167,36)" fg:x="1250" fg:w="4"/><text x="14.1916%" y="527.50"></text></g><g><title>[libdbus-1.so.3.19.11] (4 samples, 0.04%)</title><rect x="13.9416%" y="501" width="0.0446%" height="15" fill="rgb(244,19,51)" fg:x="1250" fg:w="4"/><text x="14.1916%" y="511.50"></text></g><g><title>[libdbus-1.so.3.19.11] (4 samples, 0.04%)</title><rect x="13.9416%" y="485" width="0.0446%" height="15" fill="rgb(224,6,22)" fg:x="1250" fg:w="4"/><text x="14.1916%" y="495.50"></text></g><g><title>[libdbus-1.so.3.19.11] (4 samples, 0.04%)</title><rect x="13.9416%" y="469" width="0.0446%" height="15" fill="rgb(224,145,5)" fg:x="1250" fg:w="4"/><text x="14.1916%" y="479.50"></text></g><g><title>[libdbus-1.so.3.19.11] (4 samples, 0.04%)</title><rect x="13.9416%" y="453" width="0.0446%" height="15" fill="rgb(234,130,49)" fg:x="1250" fg:w="4"/><text x="14.1916%" y="463.50"></text></g><g><title>__libc_sendmsg (4 samples, 0.04%)</title><rect x="13.9416%" y="437" width="0.0446%" height="15" fill="rgb(254,6,2)" fg:x="1250" fg:w="4"/><text x="14.1916%" y="447.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="13.9416%" y="421" width="0.0446%" height="15" fill="rgb(208,96,46)" fg:x="1250" fg:w="4"/><text x="14.1916%" y="431.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="13.9527%" y="405" width="0.0335%" height="15" fill="rgb(239,3,39)" fg:x="1251" fg:w="3"/><text x="14.2027%" y="415.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="13.9527%" y="389" width="0.0335%" height="15" fill="rgb(233,210,1)" fg:x="1251" fg:w="3"/><text x="14.2027%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="13.9639%" y="373" width="0.0223%" height="15" fill="rgb(244,137,37)" fg:x="1252" fg:w="2"/><text x="14.2139%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="13.9639%" y="357" width="0.0223%" height="15" fill="rgb(240,136,2)" fg:x="1252" fg:w="2"/><text x="14.2139%" y="367.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="13.9639%" y="341" width="0.0223%" height="15" fill="rgb(239,18,37)" fg:x="1252" fg:w="2"/><text x="14.2139%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="13.9639%" y="325" width="0.0223%" height="15" fill="rgb(218,185,22)" fg:x="1252" fg:w="2"/><text x="14.2139%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="13.9639%" y="309" width="0.0223%" height="15" fill="rgb(225,218,4)" fg:x="1252" fg:w="2"/><text x="14.2139%" y="319.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="13.9639%" y="293" width="0.0223%" height="15" fill="rgb(230,182,32)" fg:x="1252" fg:w="2"/><text x="14.2139%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="13.9639%" y="277" width="0.0223%" height="15" fill="rgb(242,56,43)" fg:x="1252" fg:w="2"/><text x="14.2139%" y="287.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="13.9639%" y="261" width="0.0223%" height="15" fill="rgb(233,99,24)" fg:x="1252" fg:w="2"/><text x="14.2139%" y="271.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="13.9639%" y="245" width="0.0223%" height="15" fill="rgb(234,209,42)" fg:x="1252" fg:w="2"/><text x="14.2139%" y="255.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="13.9639%" y="229" width="0.0223%" height="15" fill="rgb(227,7,12)" fg:x="1252" fg:w="2"/><text x="14.2139%" y="239.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="13.9639%" y="213" width="0.0223%" height="15" fill="rgb(245,203,43)" fg:x="1252" fg:w="2"/><text x="14.2139%" y="223.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="13.9639%" y="197" width="0.0223%" height="15" fill="rgb(238,205,33)" fg:x="1252" fg:w="2"/><text x="14.2139%" y="207.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="13.9639%" y="181" width="0.0223%" height="15" fill="rgb(231,56,7)" fg:x="1252" fg:w="2"/><text x="14.2139%" y="191.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="13.9639%" y="165" width="0.0223%" height="15" fill="rgb(244,186,29)" fg:x="1252" fg:w="2"/><text x="14.2139%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.9750%" y="149" width="0.0112%" height="15" fill="rgb(234,111,31)" fg:x="1253" fg:w="1"/><text x="14.2250%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="13.9750%" y="133" width="0.0112%" height="15" fill="rgb(241,149,10)" fg:x="1253" fg:w="1"/><text x="14.2250%" y="143.50"></text></g><g><title>[libdbus-1.so.3.19.11] (5 samples, 0.06%)</title><rect x="13.9416%" y="549" width="0.0558%" height="15" fill="rgb(249,206,44)" fg:x="1250" fg:w="5"/><text x="14.1916%" y="559.50"></text></g><g><title>[libdbus-1.so.3.19.11] (5 samples, 0.06%)</title><rect x="13.9416%" y="533" width="0.0558%" height="15" fill="rgb(251,153,30)" fg:x="1250" fg:w="5"/><text x="14.1916%" y="543.50"></text></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="13.9862%" y="517" width="0.0112%" height="15" fill="rgb(239,152,38)" fg:x="1254" fg:w="1"/><text x="14.2362%" y="527.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.01%)</title><rect x="13.9862%" y="501" width="0.0112%" height="15" fill="rgb(249,139,47)" fg:x="1254" fg:w="1"/><text x="14.2362%" y="511.50"></text></g><g><title>dbus_connection_send_with_reply_and_block (18 samples, 0.20%)</title><rect x="13.8077%" y="581" width="0.2008%" height="15" fill="rgb(244,64,35)" fg:x="1238" fg:w="18"/><text x="14.0577%" y="591.50"></text></g><g><title>dbus_connection_send_with_reply (6 samples, 0.07%)</title><rect x="13.9416%" y="565" width="0.0669%" height="15" fill="rgb(216,46,15)" fg:x="1250" fg:w="6"/><text x="14.1916%" y="575.50"></text></g><g><title>_dbus_pending_call_new_unlocked (1 samples, 0.01%)</title><rect x="13.9973%" y="549" width="0.0112%" height="15" fill="rgb(250,74,19)" fg:x="1255" fg:w="1"/><text x="14.2473%" y="559.50"></text></g><g><title>__libc_calloc (1 samples, 0.01%)</title><rect x="13.9973%" y="533" width="0.0112%" height="15" fill="rgb(249,42,33)" fg:x="1255" fg:w="1"/><text x="14.2473%" y="543.50"></text></g><g><title>[libdbus-1.so.3.19.11] (1 samples, 0.01%)</title><rect x="14.0085%" y="517" width="0.0112%" height="15" fill="rgb(242,149,17)" fg:x="1256" fg:w="1"/><text x="14.2585%" y="527.50"></text></g><g><title>_dbus_type_writer_recurse (1 samples, 0.01%)</title><rect x="14.0085%" y="501" width="0.0112%" height="15" fill="rgb(244,29,21)" fg:x="1256" fg:w="1"/><text x="14.2585%" y="511.50"></text></g><g><title>[libdbus-1.so.3.19.11] (1 samples, 0.01%)</title><rect x="14.0085%" y="485" width="0.0112%" height="15" fill="rgb(220,130,37)" fg:x="1256" fg:w="1"/><text x="14.2585%" y="495.50"></text></g><g><title>_dbus_first_type_in_signature (1 samples, 0.01%)</title><rect x="14.0085%" y="469" width="0.0112%" height="15" fill="rgb(211,67,2)" fg:x="1256" fg:w="1"/><text x="14.2585%" y="479.50"></text></g><g><title>[libdbus-1.so.3.19.11] (1 samples, 0.01%)</title><rect x="14.0196%" y="501" width="0.0112%" height="15" fill="rgb(235,68,52)" fg:x="1257" fg:w="1"/><text x="14.2696%" y="511.50"></text></g><g><title>[libdbus-1.so.3.19.11] (1 samples, 0.01%)</title><rect x="14.0196%" y="485" width="0.0112%" height="15" fill="rgb(246,142,3)" fg:x="1257" fg:w="1"/><text x="14.2696%" y="495.50"></text></g><g><title>[libdbus-1.so.3.19.11] (1 samples, 0.01%)</title><rect x="14.0196%" y="469" width="0.0112%" height="15" fill="rgb(241,25,7)" fg:x="1257" fg:w="1"/><text x="14.2696%" y="479.50"></text></g><g><title>[libdbus-1.so.3.19.11] (1 samples, 0.01%)</title><rect x="14.0196%" y="453" width="0.0112%" height="15" fill="rgb(242,119,39)" fg:x="1257" fg:w="1"/><text x="14.2696%" y="463.50"></text></g><g><title>_dbus_type_reader_next (1 samples, 0.01%)</title><rect x="14.0196%" y="437" width="0.0112%" height="15" fill="rgb(241,98,45)" fg:x="1257" fg:w="1"/><text x="14.2696%" y="447.50"></text></g><g><title>[libdbus-1.so.3.19.11] (1 samples, 0.01%)</title><rect x="14.0196%" y="421" width="0.0112%" height="15" fill="rgb(254,28,30)" fg:x="1257" fg:w="1"/><text x="14.2696%" y="431.50"></text></g><g><title>_dbus_type_reader_next (1 samples, 0.01%)</title><rect x="14.0196%" y="405" width="0.0112%" height="15" fill="rgb(241,142,54)" fg:x="1257" fg:w="1"/><text x="14.2696%" y="415.50"></text></g><g><title>[libdbus-1.so.3.19.11] (1 samples, 0.01%)</title><rect x="14.0196%" y="389" width="0.0112%" height="15" fill="rgb(222,85,15)" fg:x="1257" fg:w="1"/><text x="14.2696%" y="399.50"></text></g><g><title>[libdbus-1.so.3.19.11] (1 samples, 0.01%)</title><rect x="14.0196%" y="373" width="0.0112%" height="15" fill="rgb(210,85,47)" fg:x="1257" fg:w="1"/><text x="14.2696%" y="383.50"></text></g><g><title>_dbus_type_reader_next (1 samples, 0.01%)</title><rect x="14.0196%" y="357" width="0.0112%" height="15" fill="rgb(224,206,25)" fg:x="1257" fg:w="1"/><text x="14.2696%" y="367.50"></text></g><g><title>[libdbus-1.so.3.19.11] (1 samples, 0.01%)</title><rect x="14.0196%" y="341" width="0.0112%" height="15" fill="rgb(243,201,19)" fg:x="1257" fg:w="1"/><text x="14.2696%" y="351.50"></text></g><g><title>dbus_message_append_args_valist (3 samples, 0.03%)</title><rect x="14.0085%" y="581" width="0.0335%" height="15" fill="rgb(236,59,4)" fg:x="1256" fg:w="3"/><text x="14.2585%" y="591.50"></text></g><g><title>dbus_message_iter_append_basic (3 samples, 0.03%)</title><rect x="14.0085%" y="565" width="0.0335%" height="15" fill="rgb(254,179,45)" fg:x="1256" fg:w="3"/><text x="14.2585%" y="575.50"></text></g><g><title>[libdbus-1.so.3.19.11] (3 samples, 0.03%)</title><rect x="14.0085%" y="549" width="0.0335%" height="15" fill="rgb(226,14,10)" fg:x="1256" fg:w="3"/><text x="14.2585%" y="559.50"></text></g><g><title>_dbus_header_set_field_basic (3 samples, 0.03%)</title><rect x="14.0085%" y="533" width="0.0335%" height="15" fill="rgb(244,27,41)" fg:x="1256" fg:w="3"/><text x="14.2585%" y="543.50"></text></g><g><title>_dbus_type_reader_set_basic (2 samples, 0.02%)</title><rect x="14.0196%" y="517" width="0.0223%" height="15" fill="rgb(235,35,32)" fg:x="1257" fg:w="2"/><text x="14.2696%" y="527.50"></text></g><g><title>_dbus_type_writer_write_basic (1 samples, 0.01%)</title><rect x="14.0308%" y="501" width="0.0112%" height="15" fill="rgb(218,68,31)" fg:x="1258" fg:w="1"/><text x="14.2808%" y="511.50"></text></g><g><title>[libdbus-1.so.3.19.11] (1 samples, 0.01%)</title><rect x="14.0308%" y="485" width="0.0112%" height="15" fill="rgb(207,120,37)" fg:x="1258" fg:w="1"/><text x="14.2808%" y="495.50"></text></g><g><title>[libdbus-1.so.3.19.11] (1 samples, 0.01%)</title><rect x="14.0308%" y="469" width="0.0112%" height="15" fill="rgb(227,98,0)" fg:x="1258" fg:w="1"/><text x="14.2808%" y="479.50"></text></g><g><title>[libdbus-1.so.3.19.11] (1 samples, 0.01%)</title><rect x="14.0308%" y="453" width="0.0112%" height="15" fill="rgb(207,7,3)" fg:x="1258" fg:w="1"/><text x="14.2808%" y="463.50"></text></g><g><title>[libdbus-1.so.3.19.11] (1 samples, 0.01%)</title><rect x="14.0308%" y="437" width="0.0112%" height="15" fill="rgb(206,98,19)" fg:x="1258" fg:w="1"/><text x="14.2808%" y="447.50"></text></g><g><title>[libdbus-1.so.3.19.11] (1 samples, 0.01%)</title><rect x="14.0308%" y="421" width="0.0112%" height="15" fill="rgb(217,5,26)" fg:x="1258" fg:w="1"/><text x="14.2808%" y="431.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="14.0308%" y="405" width="0.0112%" height="15" fill="rgb(235,190,38)" fg:x="1258" fg:w="1"/><text x="14.2808%" y="415.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="14.0308%" y="389" width="0.0112%" height="15" fill="rgb(247,86,24)" fg:x="1258" fg:w="1"/><text x="14.2808%" y="399.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="14.0308%" y="373" width="0.0112%" height="15" fill="rgb(205,101,16)" fg:x="1258" fg:w="1"/><text x="14.2808%" y="383.50"></text></g><g><title>[libdbus-1.so.3.19.11] (1 samples, 0.01%)</title><rect x="14.0419%" y="549" width="0.0112%" height="15" fill="rgb(246,168,33)" fg:x="1259" fg:w="1"/><text x="14.2919%" y="559.50"></text></g><g><title>[libdbus-1.so.3.19.11] (1 samples, 0.01%)</title><rect x="14.0419%" y="533" width="0.0112%" height="15" fill="rgb(231,114,1)" fg:x="1259" fg:w="1"/><text x="14.2919%" y="543.50"></text></g><g><title>_dbus_type_writer_recurse (1 samples, 0.01%)</title><rect x="14.0531%" y="549" width="0.0112%" height="15" fill="rgb(207,184,53)" fg:x="1260" fg:w="1"/><text x="14.3031%" y="559.50"></text></g><g><title>[libdbus-1.so.3.19.11] (1 samples, 0.01%)</title><rect x="14.0531%" y="533" width="0.0112%" height="15" fill="rgb(224,95,51)" fg:x="1260" fg:w="1"/><text x="14.3031%" y="543.50"></text></g><g><title>_dbus_type_writer_write_basic (2 samples, 0.02%)</title><rect x="14.0642%" y="549" width="0.0223%" height="15" fill="rgb(212,188,45)" fg:x="1261" fg:w="2"/><text x="14.3142%" y="559.50"></text></g><g><title>[libdbus-1.so.3.19.11] (1 samples, 0.01%)</title><rect x="14.0754%" y="533" width="0.0112%" height="15" fill="rgb(223,154,38)" fg:x="1262" fg:w="1"/><text x="14.3254%" y="543.50"></text></g><g><title>[libdbus-1.so.3.19.11] (1 samples, 0.01%)</title><rect x="14.0754%" y="517" width="0.0112%" height="15" fill="rgb(251,22,52)" fg:x="1262" fg:w="1"/><text x="14.3254%" y="527.50"></text></g><g><title>[libdbus-1.so.3.19.11] (1 samples, 0.01%)</title><rect x="14.0754%" y="501" width="0.0112%" height="15" fill="rgb(229,209,22)" fg:x="1262" fg:w="1"/><text x="14.3254%" y="511.50"></text></g><g><title>[libSDL2-2.0.so.0.10.0] (45 samples, 0.50%)</title><rect x="13.5958%" y="629" width="0.5019%" height="15" fill="rgb(234,138,34)" fg:x="1219" fg:w="45"/><text x="13.8458%" y="639.50"></text></g><g><title>[libSDL2-2.0.so.0.10.0] (44 samples, 0.49%)</title><rect x="13.6070%" y="613" width="0.4907%" height="15" fill="rgb(212,95,11)" fg:x="1220" fg:w="44"/><text x="13.8570%" y="623.50"></text></g><g><title>[libSDL2-2.0.so.0.10.0] (35 samples, 0.39%)</title><rect x="13.7073%" y="597" width="0.3904%" height="15" fill="rgb(240,179,47)" fg:x="1229" fg:w="35"/><text x="13.9573%" y="607.50"></text></g><g><title>dbus_message_new_method_call (5 samples, 0.06%)</title><rect x="14.0419%" y="581" width="0.0558%" height="15" fill="rgb(240,163,11)" fg:x="1259" fg:w="5"/><text x="14.2919%" y="591.50"></text></g><g><title>[libdbus-1.so.3.19.11] (5 samples, 0.06%)</title><rect x="14.0419%" y="565" width="0.0558%" height="15" fill="rgb(236,37,12)" fg:x="1259" fg:w="5"/><text x="14.2919%" y="575.50"></text></g><g><title>_dbus_validate_path (1 samples, 0.01%)</title><rect x="14.0865%" y="549" width="0.0112%" height="15" fill="rgb(232,164,16)" fg:x="1263" fg:w="1"/><text x="14.3365%" y="559.50"></text></g><g><title>[libdbus-1.so.3.19.11] (2 samples, 0.02%)</title><rect x="14.0977%" y="613" width="0.0223%" height="15" fill="rgb(244,205,15)" fg:x="1264" fg:w="2"/><text x="14.3477%" y="623.50"></text></g><g><title>[libdbus-1.so.3.19.11] (2 samples, 0.02%)</title><rect x="14.0977%" y="597" width="0.0223%" height="15" fill="rgb(223,117,47)" fg:x="1264" fg:w="2"/><text x="14.3477%" y="607.50"></text></g><g><title>[libdbus-1.so.3.19.11] (2 samples, 0.02%)</title><rect x="14.0977%" y="581" width="0.0223%" height="15" fill="rgb(244,107,35)" fg:x="1264" fg:w="2"/><text x="14.3477%" y="591.50"></text></g><g><title>__GI___poll (2 samples, 0.02%)</title><rect x="14.0977%" y="565" width="0.0223%" height="15" fill="rgb(205,140,8)" fg:x="1264" fg:w="2"/><text x="14.3477%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="14.0977%" y="549" width="0.0223%" height="15" fill="rgb(228,84,46)" fg:x="1264" fg:w="2"/><text x="14.3477%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="14.0977%" y="533" width="0.0223%" height="15" fill="rgb(254,188,9)" fg:x="1264" fg:w="2"/><text x="14.3477%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="14.0977%" y="517" width="0.0223%" height="15" fill="rgb(206,112,54)" fg:x="1264" fg:w="2"/><text x="14.3477%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="14.0977%" y="501" width="0.0223%" height="15" fill="rgb(216,84,49)" fg:x="1264" fg:w="2"/><text x="14.3477%" y="511.50"></text></g><g><title>[libdbus-1.so.3.19.11] (3 samples, 0.03%)</title><rect x="14.0977%" y="629" width="0.0335%" height="15" fill="rgb(214,194,35)" fg:x="1264" fg:w="3"/><text x="14.3477%" y="639.50"></text></g><g><title>dbus_connection_ref (1 samples, 0.01%)</title><rect x="14.1200%" y="613" width="0.0112%" height="15" fill="rgb(249,28,3)" fg:x="1266" fg:w="1"/><text x="14.3700%" y="623.50"></text></g><g><title>_XimLocalFilter (1 samples, 0.01%)</title><rect x="14.1312%" y="629" width="0.0112%" height="15" fill="rgb(222,56,52)" fg:x="1267" fg:w="1"/><text x="14.3812%" y="639.50"></text></g><g><title>XLookupString (1 samples, 0.01%)</title><rect x="14.1312%" y="613" width="0.0112%" height="15" fill="rgb(245,217,50)" fg:x="1267" fg:w="1"/><text x="14.3812%" y="623.50"></text></g><g><title>XkbTranslateKeyCode (1 samples, 0.01%)</title><rect x="14.1312%" y="597" width="0.0112%" height="15" fill="rgb(213,201,24)" fg:x="1267" fg:w="1"/><text x="14.3812%" y="607.50"></text></g><g><title>_XimLocalUtf8LookupString (1 samples, 0.01%)</title><rect x="14.1423%" y="629" width="0.0112%" height="15" fill="rgb(248,116,28)" fg:x="1268" fg:w="1"/><text x="14.3923%" y="639.50"></text></g><g><title>[libSDL2-2.0.so.0.10.0] (51 samples, 0.57%)</title><rect x="13.5958%" y="645" width="0.5688%" height="15" fill="rgb(219,72,43)" fg:x="1219" fg:w="51"/><text x="13.8458%" y="655.50"></text></g><g><title>dbus_connection_dispatch (1 samples, 0.01%)</title><rect x="14.1535%" y="629" width="0.0112%" height="15" fill="rgb(209,138,14)" fg:x="1269" fg:w="1"/><text x="14.4035%" y="639.50"></text></g><g><title>dbus_message_has_interface (1 samples, 0.01%)</title><rect x="14.1535%" y="613" width="0.0112%" height="15" fill="rgb(222,18,33)" fg:x="1269" fg:w="1"/><text x="14.4035%" y="623.50"></text></g><g><title>dbus_message_get_interface (1 samples, 0.01%)</title><rect x="14.1535%" y="597" width="0.0112%" height="15" fill="rgb(213,199,7)" fg:x="1269" fg:w="1"/><text x="14.4035%" y="607.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="14.1646%" y="645" width="0.0112%" height="15" fill="rgb(250,110,10)" fg:x="1270" fg:w="1"/><text x="14.4146%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="14.1646%" y="629" width="0.0112%" height="15" fill="rgb(248,123,6)" fg:x="1270" fg:w="1"/><text x="14.4146%" y="639.50"></text></g><g><title>&lt;sdl2::event::EventPollIterator as core::iter::traits::iterator::Iterator&gt;::next (56 samples, 0.62%)</title><rect x="13.5623%" y="725" width="0.6246%" height="15" fill="rgb(206,91,31)" fg:x="1216" fg:w="56"/><text x="13.8123%" y="735.50"></text></g><g><title>sdl2::event::poll_event (56 samples, 0.62%)</title><rect x="13.5623%" y="709" width="0.6246%" height="15" fill="rgb(211,154,13)" fg:x="1216" fg:w="56"/><text x="13.8123%" y="719.50"></text></g><g><title>[libSDL2-2.0.so.0.10.0] (56 samples, 0.62%)</title><rect x="13.5623%" y="693" width="0.6246%" height="15" fill="rgb(225,148,7)" fg:x="1216" fg:w="56"/><text x="13.8123%" y="703.50"></text></g><g><title>[libSDL2-2.0.so.0.10.0] (56 samples, 0.62%)</title><rect x="13.5623%" y="677" width="0.6246%" height="15" fill="rgb(220,160,43)" fg:x="1216" fg:w="56"/><text x="13.8123%" y="687.50"></text></g><g><title>[libSDL2-2.0.so.0.10.0] (56 samples, 0.62%)</title><rect x="13.5623%" y="661" width="0.6246%" height="15" fill="rgb(213,52,39)" fg:x="1216" fg:w="56"/><text x="13.8123%" y="671.50"></text></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="14.1758%" y="645" width="0.0112%" height="15" fill="rgb(243,137,7)" fg:x="1271" fg:w="1"/><text x="14.4258%" y="655.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.01%)</title><rect x="14.1758%" y="629" width="0.0112%" height="15" fill="rgb(230,79,13)" fg:x="1271" fg:w="1"/><text x="14.4258%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (1 samples, 0.01%)</title><rect x="14.1981%" y="645" width="0.0112%" height="15" fill="rgb(247,105,23)" fg:x="1273" fg:w="1"/><text x="14.4481%" y="655.50"></text></g><g><title>core::cmp::PartialOrd::ge (1 samples, 0.01%)</title><rect x="14.1981%" y="629" width="0.0112%" height="15" fill="rgb(223,179,41)" fg:x="1273" fg:w="1"/><text x="14.4481%" y="639.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.01%)</title><rect x="14.1981%" y="613" width="0.0112%" height="15" fill="rgb(218,9,34)" fg:x="1273" fg:w="1"/><text x="14.4481%" y="623.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (1 samples, 0.01%)</title><rect x="14.1981%" y="597" width="0.0112%" height="15" fill="rgb(222,106,8)" fg:x="1273" fg:w="1"/><text x="14.4481%" y="607.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (1 samples, 0.01%)</title><rect x="14.1981%" y="581" width="0.0112%" height="15" fill="rgb(211,220,0)" fg:x="1273" fg:w="1"/><text x="14.4481%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (1 samples, 0.01%)</title><rect x="14.1981%" y="565" width="0.0112%" height="15" fill="rgb(229,52,16)" fg:x="1273" fg:w="1"/><text x="14.4481%" y="575.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (3 samples, 0.03%)</title><rect x="14.1869%" y="725" width="0.0335%" height="15" fill="rgb(212,155,18)" fg:x="1272" fg:w="3"/><text x="14.4369%" y="735.50"></text></g><g><title>std::time::Instant::duration_since (3 samples, 0.03%)</title><rect x="14.1869%" y="709" width="0.0335%" height="15" fill="rgb(242,21,14)" fg:x="1272" fg:w="3"/><text x="14.4369%" y="719.50"></text></g><g><title>std::time::Instant::checked_duration_since (3 samples, 0.03%)</title><rect x="14.1869%" y="693" width="0.0335%" height="15" fill="rgb(222,19,48)" fg:x="1272" fg:w="3"/><text x="14.4369%" y="703.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (3 samples, 0.03%)</title><rect x="14.1869%" y="677" width="0.0335%" height="15" fill="rgb(232,45,27)" fg:x="1272" fg:w="3"/><text x="14.4369%" y="687.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (3 samples, 0.03%)</title><rect x="14.1869%" y="661" width="0.0335%" height="15" fill="rgb(249,103,42)" fg:x="1272" fg:w="3"/><text x="14.4369%" y="671.50"></text></g><g><title>core::time::Duration::new (1 samples, 0.01%)</title><rect x="14.2092%" y="645" width="0.0112%" height="15" fill="rgb(246,81,33)" fg:x="1274" fg:w="1"/><text x="14.4592%" y="655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::checked_add (1 samples, 0.01%)</title><rect x="14.2092%" y="629" width="0.0112%" height="15" fill="rgb(252,33,42)" fg:x="1274" fg:w="1"/><text x="14.4592%" y="639.50"></text></g><g><title>core::num::&lt;impl u64&gt;::overflowing_add (1 samples, 0.01%)</title><rect x="14.2092%" y="613" width="0.0112%" height="15" fill="rgb(209,212,41)" fg:x="1274" fg:w="1"/><text x="14.4592%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="14.2427%" y="709" width="0.0112%" height="15" fill="rgb(207,154,6)" fg:x="1277" fg:w="1"/><text x="14.4927%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="14.2427%" y="693" width="0.0112%" height="15" fill="rgb(223,64,47)" fg:x="1277" fg:w="1"/><text x="14.4927%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="14.2427%" y="677" width="0.0112%" height="15" fill="rgb(211,161,38)" fg:x="1277" fg:w="1"/><text x="14.4927%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="14.2427%" y="661" width="0.0112%" height="15" fill="rgb(219,138,40)" fg:x="1277" fg:w="1"/><text x="14.4927%" y="671.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="14.2427%" y="645" width="0.0112%" height="15" fill="rgb(241,228,46)" fg:x="1277" fg:w="1"/><text x="14.4927%" y="655.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="14.2427%" y="629" width="0.0112%" height="15" fill="rgb(223,209,38)" fg:x="1277" fg:w="1"/><text x="14.4927%" y="639.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="14.2427%" y="613" width="0.0112%" height="15" fill="rgb(236,164,45)" fg:x="1277" fg:w="1"/><text x="14.4927%" y="623.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="14.2427%" y="597" width="0.0112%" height="15" fill="rgb(231,15,5)" fg:x="1277" fg:w="1"/><text x="14.4927%" y="607.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="14.2427%" y="581" width="0.0112%" height="15" fill="rgb(252,35,15)" fg:x="1277" fg:w="1"/><text x="14.4927%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="14.2427%" y="565" width="0.0112%" height="15" fill="rgb(248,181,18)" fg:x="1277" fg:w="1"/><text x="14.4927%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="14.2427%" y="549" width="0.0112%" height="15" fill="rgb(233,39,42)" fg:x="1277" fg:w="1"/><text x="14.4927%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="14.2427%" y="533" width="0.0112%" height="15" fill="rgb(238,110,33)" fg:x="1277" fg:w="1"/><text x="14.4927%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="14.2427%" y="517" width="0.0112%" height="15" fill="rgb(233,195,10)" fg:x="1277" fg:w="1"/><text x="14.4927%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="14.2427%" y="501" width="0.0112%" height="15" fill="rgb(254,105,3)" fg:x="1277" fg:w="1"/><text x="14.4927%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="14.2427%" y="485" width="0.0112%" height="15" fill="rgb(221,225,9)" fg:x="1277" fg:w="1"/><text x="14.4927%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="14.2427%" y="469" width="0.0112%" height="15" fill="rgb(224,227,45)" fg:x="1277" fg:w="1"/><text x="14.4927%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="14.2427%" y="453" width="0.0112%" height="15" fill="rgb(229,198,43)" fg:x="1277" fg:w="1"/><text x="14.4927%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="14.2427%" y="437" width="0.0112%" height="15" fill="rgb(206,209,35)" fg:x="1277" fg:w="1"/><text x="14.4927%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="14.2427%" y="421" width="0.0112%" height="15" fill="rgb(245,195,53)" fg:x="1277" fg:w="1"/><text x="14.4927%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6 samples, 0.07%)</title><rect x="14.2204%" y="725" width="0.0669%" height="15" fill="rgb(240,92,26)" fg:x="1275" fg:w="6"/><text x="14.4704%" y="735.50"></text></g><g><title>core::ptr::write (3 samples, 0.03%)</title><rect x="14.2538%" y="709" width="0.0335%" height="15" fill="rgb(207,40,23)" fg:x="1278" fg:w="3"/><text x="14.5038%" y="719.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i16&gt;::lt (6 samples, 0.07%)</title><rect x="14.2873%" y="693" width="0.0669%" height="15" fill="rgb(223,111,35)" fg:x="1281" fg:w="6"/><text x="14.5373%" y="703.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (10 samples, 0.11%)</title><rect x="14.2873%" y="725" width="0.1115%" height="15" fill="rgb(229,147,28)" fg:x="1281" fg:w="10"/><text x="14.5373%" y="735.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (10 samples, 0.11%)</title><rect x="14.2873%" y="709" width="0.1115%" height="15" fill="rgb(211,29,28)" fg:x="1281" fg:w="10"/><text x="14.5373%" y="719.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::lt (4 samples, 0.04%)</title><rect x="14.3542%" y="693" width="0.0446%" height="15" fill="rgb(228,72,33)" fg:x="1287" fg:w="4"/><text x="14.6042%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="14.3877%" y="677" width="0.0112%" height="15" fill="rgb(205,214,31)" fg:x="1290" fg:w="1"/><text x="14.6377%" y="687.50"></text></g><g><title>nom::sequence::pair::{{closure}} (1 samples, 0.01%)</title><rect x="14.3988%" y="277" width="0.0112%" height="15" fill="rgb(224,111,15)" fg:x="1291" fg:w="1"/><text x="14.6488%" y="287.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.01%)</title><rect x="14.3988%" y="261" width="0.0112%" height="15" fill="rgb(253,21,26)" fg:x="1291" fg:w="1"/><text x="14.6488%" y="271.50"></text></g><g><title>nom::bytes::complete::tag::{{closure}} (1 samples, 0.01%)</title><rect x="14.3988%" y="245" width="0.0112%" height="15" fill="rgb(245,139,43)" fg:x="1291" fg:w="1"/><text x="14.6488%" y="255.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTake&gt;::take_split (1 samples, 0.01%)</title><rect x="14.3988%" y="229" width="0.0112%" height="15" fill="rgb(252,170,7)" fg:x="1291" fg:w="1"/><text x="14.6488%" y="239.50"></text></g><g><title>core::str::&lt;impl str&gt;::split_at (1 samples, 0.01%)</title><rect x="14.3988%" y="213" width="0.0112%" height="15" fill="rgb(231,118,14)" fg:x="1291" fg:w="1"/><text x="14.6488%" y="223.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (1 samples, 0.01%)</title><rect x="14.3988%" y="197" width="0.0112%" height="15" fill="rgb(238,83,0)" fg:x="1291" fg:w="1"/><text x="14.6488%" y="207.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_utf8_char_boundary (1 samples, 0.01%)</title><rect x="14.3988%" y="181" width="0.0112%" height="15" fill="rgb(221,39,39)" fg:x="1291" fg:w="1"/><text x="14.6488%" y="191.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.01%)</title><rect x="14.4100%" y="181" width="0.0112%" height="15" fill="rgb(222,119,46)" fg:x="1292" fg:w="1"/><text x="14.6600%" y="191.50"></text></g><g><title>nom::combinator::value::{{closure}} (1 samples, 0.01%)</title><rect x="14.4100%" y="165" width="0.0112%" height="15" fill="rgb(222,165,49)" fg:x="1292" fg:w="1"/><text x="14.6600%" y="175.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.01%)</title><rect x="14.4100%" y="149" width="0.0112%" height="15" fill="rgb(219,113,52)" fg:x="1292" fg:w="1"/><text x="14.6600%" y="159.50"></text></g><g><title>nom::bytes::complete::tag::{{closure}} (1 samples, 0.01%)</title><rect x="14.4100%" y="133" width="0.0112%" height="15" fill="rgb(214,7,15)" fg:x="1292" fg:w="1"/><text x="14.6600%" y="143.50"></text></g><g><title>&lt;nom::error::VerboseError&lt;I&gt; as nom::error::ParseError&lt;I&gt;&gt;::from_error_kind (1 samples, 0.01%)</title><rect x="14.4100%" y="117" width="0.0112%" height="15" fill="rgb(235,32,4)" fg:x="1292" fg:w="1"/><text x="14.6600%" y="127.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.01%)</title><rect x="14.4100%" y="101" width="0.0112%" height="15" fill="rgb(238,90,54)" fg:x="1292" fg:w="1"/><text x="14.6600%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="14.4100%" y="85" width="0.0112%" height="15" fill="rgb(213,208,19)" fg:x="1292" fg:w="1"/><text x="14.6600%" y="95.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="14.4100%" y="69" width="0.0112%" height="15" fill="rgb(233,156,4)" fg:x="1292" fg:w="1"/><text x="14.6600%" y="79.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="14.4100%" y="53" width="0.0112%" height="15" fill="rgb(207,194,5)" fg:x="1292" fg:w="1"/><text x="14.6600%" y="63.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="14.4100%" y="37" width="0.0112%" height="15" fill="rgb(206,111,30)" fg:x="1292" fg:w="1"/><text x="14.6600%" y="47.50"></text></g><g><title>nand2tetris::vm_parse::command (3 samples, 0.03%)</title><rect x="14.3988%" y="437" width="0.0335%" height="15" fill="rgb(243,70,54)" fg:x="1291" fg:w="3"/><text x="14.6488%" y="447.50"></text></g><g><title>nom::sequence::delimited::{{closure}} (3 samples, 0.03%)</title><rect x="14.3988%" y="421" width="0.0335%" height="15" fill="rgb(242,28,8)" fg:x="1291" fg:w="3"/><text x="14.6488%" y="431.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (3 samples, 0.03%)</title><rect x="14.3988%" y="405" width="0.0335%" height="15" fill="rgb(219,106,18)" fg:x="1291" fg:w="3"/><text x="14.6488%" y="415.50"></text></g><g><title>nom::branch::alt::{{closure}} (3 samples, 0.03%)</title><rect x="14.3988%" y="389" width="0.0335%" height="15" fill="rgb(244,222,10)" fg:x="1291" fg:w="3"/><text x="14.6488%" y="399.50"></text></g><g><title>&lt;(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (3 samples, 0.03%)</title><rect x="14.3988%" y="373" width="0.0335%" height="15" fill="rgb(236,179,52)" fg:x="1291" fg:w="3"/><text x="14.6488%" y="383.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (3 samples, 0.03%)</title><rect x="14.3988%" y="357" width="0.0335%" height="15" fill="rgb(213,23,39)" fg:x="1291" fg:w="3"/><text x="14.6488%" y="367.50"></text></g><g><title>nom::combinator::map::{{closure}} (3 samples, 0.03%)</title><rect x="14.3988%" y="341" width="0.0335%" height="15" fill="rgb(238,48,10)" fg:x="1291" fg:w="3"/><text x="14.6488%" y="351.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (3 samples, 0.03%)</title><rect x="14.3988%" y="325" width="0.0335%" height="15" fill="rgb(251,196,23)" fg:x="1291" fg:w="3"/><text x="14.6488%" y="335.50"></text></g><g><title>nom::sequence::preceded::{{closure}} (3 samples, 0.03%)</title><rect x="14.3988%" y="309" width="0.0335%" height="15" fill="rgb(250,152,24)" fg:x="1291" fg:w="3"/><text x="14.6488%" y="319.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (3 samples, 0.03%)</title><rect x="14.3988%" y="293" width="0.0335%" height="15" fill="rgb(209,150,17)" fg:x="1291" fg:w="3"/><text x="14.6488%" y="303.50"></text></g><g><title>nom::sequence::separated_pair::{{closure}} (2 samples, 0.02%)</title><rect x="14.4100%" y="277" width="0.0223%" height="15" fill="rgb(234,202,34)" fg:x="1292" fg:w="2"/><text x="14.6600%" y="287.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2 samples, 0.02%)</title><rect x="14.4100%" y="261" width="0.0223%" height="15" fill="rgb(253,148,53)" fg:x="1292" fg:w="2"/><text x="14.6600%" y="271.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2 samples, 0.02%)</title><rect x="14.4100%" y="245" width="0.0223%" height="15" fill="rgb(218,129,16)" fg:x="1292" fg:w="2"/><text x="14.6600%" y="255.50"></text></g><g><title>nand2tetris::vm_parse::push_segment (2 samples, 0.02%)</title><rect x="14.4100%" y="229" width="0.0223%" height="15" fill="rgb(216,85,19)" fg:x="1292" fg:w="2"/><text x="14.6600%" y="239.50"></text></g><g><title>nom::branch::alt::{{closure}} (2 samples, 0.02%)</title><rect x="14.4100%" y="213" width="0.0223%" height="15" fill="rgb(235,228,7)" fg:x="1292" fg:w="2"/><text x="14.6600%" y="223.50"></text></g><g><title>&lt;(A,B,C,D,E,F,G,H) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (2 samples, 0.02%)</title><rect x="14.4100%" y="197" width="0.0223%" height="15" fill="rgb(245,175,0)" fg:x="1292" fg:w="2"/><text x="14.6600%" y="207.50"></text></g><g><title>nom::error::ParseError::or (1 samples, 0.01%)</title><rect x="14.4211%" y="181" width="0.0112%" height="15" fill="rgb(208,168,36)" fg:x="1293" fg:w="1"/><text x="14.6711%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;nom::error::VerboseError&lt;&amp;str&gt;&gt; (1 samples, 0.01%)</title><rect x="14.4211%" y="165" width="0.0112%" height="15" fill="rgb(246,171,24)" fg:x="1293" fg:w="1"/><text x="14.6711%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(&amp;str,nom::error::VerboseErrorKind)&gt;&gt; (1 samples, 0.01%)</title><rect x="14.4211%" y="149" width="0.0112%" height="15" fill="rgb(215,142,24)" fg:x="1293" fg:w="1"/><text x="14.6711%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(&amp;str,nom::error::VerboseErrorKind)&gt;&gt; (1 samples, 0.01%)</title><rect x="14.4211%" y="133" width="0.0112%" height="15" fill="rgb(250,187,7)" fg:x="1293" fg:w="1"/><text x="14.6711%" y="143.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="14.4211%" y="117" width="0.0112%" height="15" fill="rgb(228,66,33)" fg:x="1293" fg:w="1"/><text x="14.6711%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="14.4211%" y="101" width="0.0112%" height="15" fill="rgb(234,215,21)" fg:x="1293" fg:w="1"/><text x="14.6711%" y="111.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="14.4211%" y="85" width="0.0112%" height="15" fill="rgb(222,191,20)" fg:x="1293" fg:w="1"/><text x="14.6711%" y="95.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="14.4211%" y="69" width="0.0112%" height="15" fill="rgb(245,79,54)" fg:x="1293" fg:w="1"/><text x="14.6711%" y="79.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="14.4323%" y="261" width="0.0112%" height="15" fill="rgb(240,10,37)" fg:x="1294" fg:w="1"/><text x="14.6823%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="14.4323%" y="245" width="0.0112%" height="15" fill="rgb(214,192,32)" fg:x="1294" fg:w="1"/><text x="14.6823%" y="255.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="14.4323%" y="229" width="0.0112%" height="15" fill="rgb(209,36,54)" fg:x="1294" fg:w="1"/><text x="14.6823%" y="239.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="14.4323%" y="213" width="0.0112%" height="15" fill="rgb(220,10,11)" fg:x="1294" fg:w="1"/><text x="14.6823%" y="223.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="14.4323%" y="197" width="0.0112%" height="15" fill="rgb(221,106,17)" fg:x="1294" fg:w="1"/><text x="14.6823%" y="207.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="14.4323%" y="181" width="0.0112%" height="15" fill="rgb(251,142,44)" fg:x="1294" fg:w="1"/><text x="14.6823%" y="191.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="14.4323%" y="165" width="0.0112%" height="15" fill="rgb(238,13,15)" fg:x="1294" fg:w="1"/><text x="14.6823%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5 samples, 0.06%)</title><rect x="14.3988%" y="725" width="0.0558%" height="15" fill="rgb(208,107,27)" fg:x="1291" fg:w="5"/><text x="14.6488%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5 samples, 0.06%)</title><rect x="14.3988%" y="709" width="0.0558%" height="15" fill="rgb(205,136,37)" fg:x="1291" fg:w="5"/><text x="14.6488%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.06%)</title><rect x="14.3988%" y="693" width="0.0558%" height="15" fill="rgb(250,205,27)" fg:x="1291" fg:w="5"/><text x="14.6488%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (5 samples, 0.06%)</title><rect x="14.3988%" y="677" width="0.0558%" height="15" fill="rgb(210,80,43)" fg:x="1291" fg:w="5"/><text x="14.6488%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.06%)</title><rect x="14.3988%" y="661" width="0.0558%" height="15" fill="rgb(247,160,36)" fg:x="1291" fg:w="5"/><text x="14.6488%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (5 samples, 0.06%)</title><rect x="14.3988%" y="645" width="0.0558%" height="15" fill="rgb(234,13,49)" fg:x="1291" fg:w="5"/><text x="14.6488%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.06%)</title><rect x="14.3988%" y="629" width="0.0558%" height="15" fill="rgb(234,122,0)" fg:x="1291" fg:w="5"/><text x="14.6488%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.06%)</title><rect x="14.3988%" y="613" width="0.0558%" height="15" fill="rgb(207,146,38)" fg:x="1291" fg:w="5"/><text x="14.6488%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (5 samples, 0.06%)</title><rect x="14.3988%" y="597" width="0.0558%" height="15" fill="rgb(207,177,25)" fg:x="1291" fg:w="5"/><text x="14.6488%" y="607.50"></text></g><g><title>nand2tetris::run_vm::{{closure}} (5 samples, 0.06%)</title><rect x="14.3988%" y="581" width="0.0558%" height="15" fill="rgb(211,178,42)" fg:x="1291" fg:w="5"/><text x="14.6488%" y="591.50"></text></g><g><title>nand2tetris::vm_parse::commands (5 samples, 0.06%)</title><rect x="14.3988%" y="565" width="0.0558%" height="15" fill="rgb(230,69,54)" fg:x="1291" fg:w="5"/><text x="14.6488%" y="575.50"></text></g><g><title>nom::combinator::all_consuming::{{closure}} (5 samples, 0.06%)</title><rect x="14.3988%" y="549" width="0.0558%" height="15" fill="rgb(214,135,41)" fg:x="1291" fg:w="5"/><text x="14.6488%" y="559.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (5 samples, 0.06%)</title><rect x="14.3988%" y="533" width="0.0558%" height="15" fill="rgb(237,67,25)" fg:x="1291" fg:w="5"/><text x="14.6488%" y="543.50"></text></g><g><title>nom::sequence::delimited::{{closure}} (5 samples, 0.06%)</title><rect x="14.3988%" y="517" width="0.0558%" height="15" fill="rgb(222,189,50)" fg:x="1291" fg:w="5"/><text x="14.6488%" y="527.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (5 samples, 0.06%)</title><rect x="14.3988%" y="501" width="0.0558%" height="15" fill="rgb(245,148,34)" fg:x="1291" fg:w="5"/><text x="14.6488%" y="511.50"></text></g><g><title>nom::multi::separated_list1::{{closure}} (5 samples, 0.06%)</title><rect x="14.3988%" y="485" width="0.0558%" height="15" fill="rgb(222,29,6)" fg:x="1291" fg:w="5"/><text x="14.6488%" y="495.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (5 samples, 0.06%)</title><rect x="14.3988%" y="469" width="0.0558%" height="15" fill="rgb(221,189,43)" fg:x="1291" fg:w="5"/><text x="14.6488%" y="479.50"></text></g><g><title>core::ops::function::FnMut::call_mut (5 samples, 0.06%)</title><rect x="14.3988%" y="453" width="0.0558%" height="15" fill="rgb(207,36,27)" fg:x="1291" fg:w="5"/><text x="14.6488%" y="463.50"></text></g><g><title>nand2tetris::vm_parse::non_command_lines (2 samples, 0.02%)</title><rect x="14.4323%" y="437" width="0.0223%" height="15" fill="rgb(217,90,24)" fg:x="1294" fg:w="2"/><text x="14.6823%" y="447.50"></text></g><g><title>nom::combinator::value::{{closure}} (2 samples, 0.02%)</title><rect x="14.4323%" y="421" width="0.0223%" height="15" fill="rgb(224,66,35)" fg:x="1294" fg:w="2"/><text x="14.6823%" y="431.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2 samples, 0.02%)</title><rect x="14.4323%" y="405" width="0.0223%" height="15" fill="rgb(221,13,50)" fg:x="1294" fg:w="2"/><text x="14.6823%" y="415.50"></text></g><g><title>nom::multi::many1_count::{{closure}} (2 samples, 0.02%)</title><rect x="14.4323%" y="389" width="0.0223%" height="15" fill="rgb(236,68,49)" fg:x="1294" fg:w="2"/><text x="14.6823%" y="399.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2 samples, 0.02%)</title><rect x="14.4323%" y="373" width="0.0223%" height="15" fill="rgb(229,146,28)" fg:x="1294" fg:w="2"/><text x="14.6823%" y="383.50"></text></g><g><title>nom::branch::alt::{{closure}} (2 samples, 0.02%)</title><rect x="14.4323%" y="357" width="0.0223%" height="15" fill="rgb(225,31,38)" fg:x="1294" fg:w="2"/><text x="14.6823%" y="367.50"></text></g><g><title>&lt;(A,B,C) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (2 samples, 0.02%)</title><rect x="14.4323%" y="341" width="0.0223%" height="15" fill="rgb(250,208,3)" fg:x="1294" fg:w="2"/><text x="14.6823%" y="351.50"></text></g><g><title>&lt;nom::error::VerboseError&lt;I&gt; as nom::error::ParseError&lt;I&gt;&gt;::append (2 samples, 0.02%)</title><rect x="14.4323%" y="325" width="0.0223%" height="15" fill="rgb(246,54,23)" fg:x="1294" fg:w="2"/><text x="14.6823%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.02%)</title><rect x="14.4323%" y="309" width="0.0223%" height="15" fill="rgb(243,76,11)" fg:x="1294" fg:w="2"/><text x="14.6823%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.02%)</title><rect x="14.4323%" y="293" width="0.0223%" height="15" fill="rgb(245,21,50)" fg:x="1294" fg:w="2"/><text x="14.6823%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.02%)</title><rect x="14.4323%" y="277" width="0.0223%" height="15" fill="rgb(228,9,43)" fg:x="1294" fg:w="2"/><text x="14.6823%" y="287.50"></text></g><g><title>core::cmp::max (1 samples, 0.01%)</title><rect x="14.4435%" y="261" width="0.0112%" height="15" fill="rgb(208,100,47)" fg:x="1295" fg:w="1"/><text x="14.6935%" y="271.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.01%)</title><rect x="14.4435%" y="245" width="0.0112%" height="15" fill="rgb(232,26,8)" fg:x="1295" fg:w="1"/><text x="14.6935%" y="255.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.01%)</title><rect x="14.4435%" y="229" width="0.0112%" height="15" fill="rgb(216,166,38)" fg:x="1295" fg:w="1"/><text x="14.6935%" y="239.50"></text></g><g><title>core::time::Duration::as_secs_f64 (1 samples, 0.01%)</title><rect x="14.4546%" y="725" width="0.0112%" height="15" fill="rgb(251,202,51)" fg:x="1296" fg:w="1"/><text x="14.7046%" y="735.50"></text></g><g><title>checked_request2size (23 samples, 0.26%)</title><rect x="15.5588%" y="517" width="0.2565%" height="15" fill="rgb(254,216,34)" fg:x="1395" fg:w="23"/><text x="15.8088%" y="527.50"></text></g><g><title>__GI___libc_malloc (68 samples, 0.76%)</title><rect x="15.1796%" y="533" width="0.7584%" height="15" fill="rgb(251,32,27)" fg:x="1361" fg:w="68"/><text x="15.4296%" y="543.50"></text></g><g><title>tcache_get (11 samples, 0.12%)</title><rect x="15.8153%" y="517" width="0.1227%" height="15" fill="rgb(208,127,28)" fg:x="1418" fg:w="11"/><text x="16.0653%" y="527.50"></text></g><g><title>__rdl_alloc (19 samples, 0.21%)</title><rect x="15.9380%" y="533" width="0.2119%" height="15" fill="rgb(224,137,22)" fg:x="1429" fg:w="19"/><text x="16.1880%" y="543.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (19 samples, 0.21%)</title><rect x="15.9380%" y="517" width="0.2119%" height="15" fill="rgb(254,70,32)" fg:x="1429" fg:w="19"/><text x="16.1880%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (118 samples, 1.32%)</title><rect x="14.9565%" y="629" width="1.3161%" height="15" fill="rgb(229,75,37)" fg:x="1341" fg:w="118"/><text x="15.2065%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (118 samples, 1.32%)</title><rect x="14.9565%" y="613" width="1.3161%" height="15" fill="rgb(252,64,23)" fg:x="1341" fg:w="118"/><text x="15.2065%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (118 samples, 1.32%)</title><rect x="14.9565%" y="597" width="1.3161%" height="15" fill="rgb(232,162,48)" fg:x="1341" fg:w="118"/><text x="15.2065%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (109 samples, 1.22%)</title><rect x="15.0569%" y="581" width="1.2157%" height="15" fill="rgb(246,160,12)" fg:x="1350" fg:w="109"/><text x="15.3069%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (109 samples, 1.22%)</title><rect x="15.0569%" y="565" width="1.2157%" height="15" fill="rgb(247,166,0)" fg:x="1350" fg:w="109"/><text x="15.3069%" y="575.50"></text></g><g><title>alloc::alloc::alloc (109 samples, 1.22%)</title><rect x="15.0569%" y="549" width="1.2157%" height="15" fill="rgb(249,219,21)" fg:x="1350" fg:w="109"/><text x="15.3069%" y="559.50"></text></g><g><title>__rust_alloc (11 samples, 0.12%)</title><rect x="16.1499%" y="533" width="0.1227%" height="15" fill="rgb(205,209,3)" fg:x="1448" fg:w="11"/><text x="16.3999%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (142 samples, 1.58%)</title><rect x="14.9565%" y="693" width="1.5838%" height="15" fill="rgb(243,44,1)" fg:x="1341" fg:w="142"/><text x="15.2065%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (142 samples, 1.58%)</title><rect x="14.9565%" y="677" width="1.5838%" height="15" fill="rgb(206,159,16)" fg:x="1341" fg:w="142"/><text x="15.2065%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (142 samples, 1.58%)</title><rect x="14.9565%" y="661" width="1.5838%" height="15" fill="rgb(244,77,30)" fg:x="1341" fg:w="142"/><text x="15.2065%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (142 samples, 1.58%)</title><rect x="14.9565%" y="645" width="1.5838%" height="15" fill="rgb(218,69,12)" fg:x="1341" fg:w="142"/><text x="15.2065%" y="655.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (24 samples, 0.27%)</title><rect x="16.2726%" y="629" width="0.2677%" height="15" fill="rgb(212,87,7)" fg:x="1459" fg:w="24"/><text x="16.5226%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (24 samples, 0.27%)</title><rect x="16.2726%" y="613" width="0.2677%" height="15" fill="rgb(245,114,25)" fg:x="1459" fg:w="24"/><text x="16.5226%" y="623.50"></text></g><g><title>__memmove_avx_unaligned_erms (24 samples, 0.27%)</title><rect x="16.2726%" y="597" width="0.2677%" height="15" fill="rgb(210,61,42)" fg:x="1459" fg:w="24"/><text x="16.5226%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (156 samples, 1.74%)</title><rect x="14.8115%" y="709" width="1.7399%" height="15" fill="rgb(211,52,33)" fg:x="1328" fg:w="156"/><text x="15.0615%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="16.5403%" y="693" width="0.0112%" height="15" fill="rgb(234,58,33)" fg:x="1483" fg:w="1"/><text x="16.7903%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="16.5403%" y="677" width="0.0112%" height="15" fill="rgb(220,115,36)" fg:x="1483" fg:w="1"/><text x="16.7903%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.02%)</title><rect x="16.5514%" y="709" width="0.0223%" height="15" fill="rgb(243,153,54)" fg:x="1484" fg:w="2"/><text x="16.8014%" y="719.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (7 samples, 0.08%)</title><rect x="17.1537%" y="549" width="0.0781%" height="15" fill="rgb(251,47,18)" fg:x="1538" fg:w="7"/><text x="17.4037%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (19 samples, 0.21%)</title><rect x="17.0533%" y="565" width="0.2119%" height="15" fill="rgb(242,102,42)" fg:x="1529" fg:w="19"/><text x="17.3033%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.03%)</title><rect x="17.2318%" y="549" width="0.0335%" height="15" fill="rgb(234,31,38)" fg:x="1545" fg:w="3"/><text x="17.4818%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="17.5106%" y="549" width="0.0112%" height="15" fill="rgb(221,117,51)" fg:x="1570" fg:w="1"/><text x="17.7606%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="17.5106%" y="533" width="0.0112%" height="15" fill="rgb(212,20,18)" fg:x="1570" fg:w="1"/><text x="17.7606%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="17.5106%" y="517" width="0.0112%" height="15" fill="rgb(245,133,36)" fg:x="1570" fg:w="1"/><text x="17.7606%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="17.5106%" y="501" width="0.0112%" height="15" fill="rgb(212,6,19)" fg:x="1570" fg:w="1"/><text x="17.7606%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="17.5106%" y="485" width="0.0112%" height="15" fill="rgb(218,1,36)" fg:x="1570" fg:w="1"/><text x="17.7606%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="17.5106%" y="469" width="0.0112%" height="15" fill="rgb(246,84,54)" fg:x="1570" fg:w="1"/><text x="17.7606%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="17.5106%" y="453" width="0.0112%" height="15" fill="rgb(242,110,6)" fg:x="1570" fg:w="1"/><text x="17.7606%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="17.5106%" y="437" width="0.0112%" height="15" fill="rgb(214,47,5)" fg:x="1570" fg:w="1"/><text x="17.7606%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="17.5106%" y="421" width="0.0112%" height="15" fill="rgb(218,159,25)" fg:x="1570" fg:w="1"/><text x="17.7606%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="17.5106%" y="405" width="0.0112%" height="15" fill="rgb(215,211,28)" fg:x="1570" fg:w="1"/><text x="17.7606%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (28 samples, 0.31%)</title><rect x="17.5217%" y="549" width="0.3123%" height="15" fill="rgb(238,59,32)" fg:x="1571" fg:w="28"/><text x="17.7717%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (135 samples, 1.51%)</title><rect x="16.7410%" y="613" width="1.5057%" height="15" fill="rgb(226,82,3)" fg:x="1501" fg:w="135"/><text x="16.9910%" y="623.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (135 samples, 1.51%)</title><rect x="16.7410%" y="597" width="1.5057%" height="15" fill="rgb(240,164,32)" fg:x="1501" fg:w="135"/><text x="16.9910%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (135 samples, 1.51%)</title><rect x="16.7410%" y="581" width="1.5057%" height="15" fill="rgb(232,46,7)" fg:x="1501" fg:w="135"/><text x="16.9910%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (88 samples, 0.98%)</title><rect x="17.2652%" y="565" width="0.9815%" height="15" fill="rgb(229,129,53)" fg:x="1548" fg:w="88"/><text x="17.5152%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (37 samples, 0.41%)</title><rect x="17.8340%" y="549" width="0.4127%" height="15" fill="rgb(234,188,29)" fg:x="1599" fg:w="37"/><text x="18.0840%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (38 samples, 0.42%)</title><rect x="18.2467%" y="613" width="0.4238%" height="15" fill="rgb(246,141,4)" fg:x="1636" fg:w="38"/><text x="18.4967%" y="623.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (17 samples, 0.19%)</title><rect x="18.4809%" y="597" width="0.1896%" height="15" fill="rgb(229,23,39)" fg:x="1657" fg:w="17"/><text x="18.7309%" y="607.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (14 samples, 0.16%)</title><rect x="18.5144%" y="581" width="0.1561%" height="15" fill="rgb(206,12,3)" fg:x="1660" fg:w="14"/><text x="18.7644%" y="591.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (14 samples, 0.16%)</title><rect x="18.5144%" y="565" width="0.1561%" height="15" fill="rgb(252,226,20)" fg:x="1660" fg:w="14"/><text x="18.7644%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="18.6705%" y="581" width="0.0112%" height="15" fill="rgb(216,123,35)" fg:x="1674" fg:w="1"/><text x="18.9205%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="18.6705%" y="565" width="0.0112%" height="15" fill="rgb(212,68,40)" fg:x="1674" fg:w="1"/><text x="18.9205%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (47 samples, 0.52%)</title><rect x="18.6817%" y="565" width="0.5242%" height="15" fill="rgb(254,125,32)" fg:x="1675" fg:w="47"/><text x="18.9317%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (47 samples, 0.52%)</title><rect x="18.6817%" y="549" width="0.5242%" height="15" fill="rgb(253,97,22)" fg:x="1675" fg:w="47"/><text x="18.9317%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (47 samples, 0.52%)</title><rect x="18.6817%" y="533" width="0.5242%" height="15" fill="rgb(241,101,14)" fg:x="1675" fg:w="47"/><text x="18.9317%" y="543.50"></text></g><g><title>core::hash::sip::u8to64_le (32 samples, 0.36%)</title><rect x="18.8490%" y="517" width="0.3569%" height="15" fill="rgb(238,103,29)" fg:x="1690" fg:w="32"/><text x="19.0990%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.09%)</title><rect x="19.1167%" y="501" width="0.0892%" height="15" fill="rgb(233,195,47)" fg:x="1714" fg:w="8"/><text x="19.3667%" y="511.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.03%)</title><rect x="19.4290%" y="485" width="0.0335%" height="15" fill="rgb(246,218,30)" fg:x="1742" fg:w="3"/><text x="19.6790%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7 samples, 0.08%)</title><rect x="19.4178%" y="501" width="0.0781%" height="15" fill="rgb(219,145,47)" fg:x="1741" fg:w="7"/><text x="19.6678%" y="511.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.03%)</title><rect x="19.4624%" y="485" width="0.0335%" height="15" fill="rgb(243,12,26)" fg:x="1745" fg:w="3"/><text x="19.7124%" y="495.50"></text></g><g><title>core::cmp::min (4 samples, 0.04%)</title><rect x="19.4959%" y="501" width="0.0446%" height="15" fill="rgb(214,87,16)" fg:x="1748" fg:w="4"/><text x="19.7459%" y="511.50"></text></g><g><title>core::cmp::Ord::min (4 samples, 0.04%)</title><rect x="19.4959%" y="485" width="0.0446%" height="15" fill="rgb(208,99,42)" fg:x="1748" fg:w="4"/><text x="19.7459%" y="495.50"></text></g><g><title>core::cmp::min_by (4 samples, 0.04%)</title><rect x="19.4959%" y="469" width="0.0446%" height="15" fill="rgb(253,99,2)" fg:x="1748" fg:w="4"/><text x="19.7459%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (103 samples, 1.15%)</title><rect x="18.6705%" y="597" width="1.1488%" height="15" fill="rgb(220,168,23)" fg:x="1674" fg:w="103"/><text x="18.9205%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (102 samples, 1.14%)</title><rect x="18.6817%" y="581" width="1.1376%" height="15" fill="rgb(242,38,24)" fg:x="1675" fg:w="102"/><text x="18.9317%" y="591.50"></text></g><g><title>core::hash::Hasher::write_u8 (55 samples, 0.61%)</title><rect x="19.2059%" y="565" width="0.6134%" height="15" fill="rgb(225,182,9)" fg:x="1722" fg:w="55"/><text x="19.4559%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (46 samples, 0.51%)</title><rect x="19.3063%" y="549" width="0.5130%" height="15" fill="rgb(243,178,37)" fg:x="1731" fg:w="46"/><text x="19.5563%" y="559.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (45 samples, 0.50%)</title><rect x="19.3174%" y="533" width="0.5019%" height="15" fill="rgb(232,139,19)" fg:x="1732" fg:w="45"/><text x="19.5674%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (45 samples, 0.50%)</title><rect x="19.3174%" y="517" width="0.5019%" height="15" fill="rgb(225,201,24)" fg:x="1732" fg:w="45"/><text x="19.5674%" y="527.50"></text></g><g><title>core::hash::sip::u8to64_le (25 samples, 0.28%)</title><rect x="19.5405%" y="501" width="0.2788%" height="15" fill="rgb(221,47,46)" fg:x="1752" fg:w="25"/><text x="19.7905%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (11 samples, 0.12%)</title><rect x="19.8193%" y="565" width="0.1227%" height="15" fill="rgb(249,23,13)" fg:x="1777" fg:w="11"/><text x="20.0693%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (11 samples, 0.12%)</title><rect x="19.8193%" y="549" width="0.1227%" height="15" fill="rgb(219,9,5)" fg:x="1777" fg:w="11"/><text x="20.0693%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (4 samples, 0.04%)</title><rect x="19.8974%" y="533" width="0.0446%" height="15" fill="rgb(254,171,16)" fg:x="1784" fg:w="4"/><text x="20.1474%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (20 samples, 0.22%)</title><rect x="20.4885%" y="485" width="0.2231%" height="15" fill="rgb(230,171,20)" fg:x="1837" fg:w="20"/><text x="20.7385%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (46 samples, 0.51%)</title><rect x="20.3770%" y="501" width="0.5130%" height="15" fill="rgb(210,71,41)" fg:x="1827" fg:w="46"/><text x="20.6270%" y="511.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (16 samples, 0.18%)</title><rect x="20.7116%" y="485" width="0.1785%" height="15" fill="rgb(206,173,20)" fg:x="1857" fg:w="16"/><text x="20.9616%" y="495.50"></text></g><g><title>core::cmp::min (1 samples, 0.01%)</title><rect x="20.8900%" y="501" width="0.0112%" height="15" fill="rgb(233,88,34)" fg:x="1873" fg:w="1"/><text x="21.1400%" y="511.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.01%)</title><rect x="20.8900%" y="485" width="0.0112%" height="15" fill="rgb(223,209,46)" fg:x="1873" fg:w="1"/><text x="21.1400%" y="495.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.01%)</title><rect x="20.8900%" y="469" width="0.0112%" height="15" fill="rgb(250,43,18)" fg:x="1873" fg:w="1"/><text x="21.1400%" y="479.50"></text></g><g><title>core::hash::sip::u8to64_le (48 samples, 0.54%)</title><rect x="20.9012%" y="501" width="0.5354%" height="15" fill="rgb(208,13,10)" fg:x="1874" fg:w="48"/><text x="21.1512%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.06%)</title><rect x="21.3808%" y="485" width="0.0558%" height="15" fill="rgb(212,200,36)" fg:x="1917" fg:w="5"/><text x="21.6308%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (144 samples, 1.61%)</title><rect x="19.9532%" y="549" width="1.6061%" height="15" fill="rgb(225,90,30)" fg:x="1789" fg:w="144"/><text x="20.2032%" y="559.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (144 samples, 1.61%)</title><rect x="19.9532%" y="533" width="1.6061%" height="15" fill="rgb(236,182,39)" fg:x="1789" fg:w="144"/><text x="20.2032%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (144 samples, 1.61%)</title><rect x="19.9532%" y="517" width="1.6061%" height="15" fill="rgb(212,144,35)" fg:x="1789" fg:w="144"/><text x="20.2032%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 0.12%)</title><rect x="21.4365%" y="501" width="0.1227%" height="15" fill="rgb(228,63,44)" fg:x="1922" fg:w="11"/><text x="21.6865%" y="511.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="21.9830%" y="469" width="0.0112%" height="15" fill="rgb(228,109,6)" fg:x="1971" fg:w="1"/><text x="22.2330%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.02%)</title><rect x="21.9830%" y="485" width="0.0223%" height="15" fill="rgb(238,117,24)" fg:x="1971" fg:w="2"/><text x="22.2330%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="21.9942%" y="469" width="0.0112%" height="15" fill="rgb(242,26,26)" fg:x="1972" fg:w="1"/><text x="22.2442%" y="479.50"></text></g><g><title>core::cmp::min (7 samples, 0.08%)</title><rect x="22.0054%" y="485" width="0.0781%" height="15" fill="rgb(221,92,48)" fg:x="1973" fg:w="7"/><text x="22.2554%" y="495.50"></text></g><g><title>core::cmp::Ord::min (7 samples, 0.08%)</title><rect x="22.0054%" y="469" width="0.0781%" height="15" fill="rgb(209,209,32)" fg:x="1973" fg:w="7"/><text x="22.2554%" y="479.50"></text></g><g><title>core::cmp::min_by (7 samples, 0.08%)</title><rect x="22.0054%" y="453" width="0.0781%" height="15" fill="rgb(221,70,22)" fg:x="1973" fg:w="7"/><text x="22.2554%" y="463.50"></text></g><g><title>hashbrown::map::make_hash (528 samples, 5.89%)</title><rect x="16.6964%" y="645" width="5.8889%" height="15" fill="rgb(248,145,5)" fg:x="1497" fg:w="528"/><text x="16.9464%" y="655.50">hashbro..</text></g><g><title>core::hash::BuildHasher::hash_one (528 samples, 5.89%)</title><rect x="16.6964%" y="629" width="5.8889%" height="15" fill="rgb(226,116,26)" fg:x="1497" fg:w="528"/><text x="16.9464%" y="639.50">core::h..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (351 samples, 3.91%)</title><rect x="18.6705%" y="613" width="3.9148%" height="15" fill="rgb(244,5,17)" fg:x="1674" fg:w="351"/><text x="18.9205%" y="623.50">core..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (248 samples, 2.77%)</title><rect x="19.8193%" y="597" width="2.7660%" height="15" fill="rgb(252,159,33)" fg:x="1777" fg:w="248"/><text x="20.0693%" y="607.50">co..</text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (248 samples, 2.77%)</title><rect x="19.8193%" y="581" width="2.7660%" height="15" fill="rgb(206,71,0)" fg:x="1777" fg:w="248"/><text x="20.0693%" y="591.50">&lt;a..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (237 samples, 2.64%)</title><rect x="19.9420%" y="565" width="2.6433%" height="15" fill="rgb(233,118,54)" fg:x="1788" fg:w="237"/><text x="20.1920%" y="575.50">co..</text></g><g><title>core::hash::Hasher::write_u8 (92 samples, 1.03%)</title><rect x="21.5592%" y="549" width="1.0261%" height="15" fill="rgb(234,83,48)" fg:x="1933" fg:w="92"/><text x="21.8092%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (84 samples, 0.94%)</title><rect x="21.6484%" y="533" width="0.9369%" height="15" fill="rgb(228,3,54)" fg:x="1941" fg:w="84"/><text x="21.8984%" y="543.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (84 samples, 0.94%)</title><rect x="21.6484%" y="517" width="0.9369%" height="15" fill="rgb(226,155,13)" fg:x="1941" fg:w="84"/><text x="21.8984%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (84 samples, 0.94%)</title><rect x="21.6484%" y="501" width="0.9369%" height="15" fill="rgb(241,28,37)" fg:x="1941" fg:w="84"/><text x="21.8984%" y="511.50"></text></g><g><title>core::hash::sip::u8to64_le (45 samples, 0.50%)</title><rect x="22.0834%" y="485" width="0.5019%" height="15" fill="rgb(233,93,10)" fg:x="1980" fg:w="45"/><text x="22.3334%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="22.5742%" y="469" width="0.0112%" height="15" fill="rgb(225,113,19)" fg:x="2024" fg:w="1"/><text x="22.8242%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.13%)</title><rect x="22.7972%" y="597" width="0.1338%" height="15" fill="rgb(241,2,18)" fg:x="2044" fg:w="12"/><text x="23.0472%" y="607.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (12 samples, 0.13%)</title><rect x="22.7972%" y="581" width="0.1338%" height="15" fill="rgb(228,207,21)" fg:x="2044" fg:w="12"/><text x="23.0472%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (7 samples, 0.08%)</title><rect x="22.9311%" y="549" width="0.0781%" height="15" fill="rgb(213,211,35)" fg:x="2056" fg:w="7"/><text x="23.1811%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (7 samples, 0.08%)</title><rect x="22.9311%" y="533" width="0.0781%" height="15" fill="rgb(209,83,10)" fg:x="2056" fg:w="7"/><text x="23.1811%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.01%)</title><rect x="22.9980%" y="517" width="0.0112%" height="15" fill="rgb(209,164,1)" fg:x="2062" fg:w="1"/><text x="23.2480%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="22.9980%" y="501" width="0.0112%" height="15" fill="rgb(213,184,43)" fg:x="2062" fg:w="1"/><text x="23.2480%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="22.9980%" y="485" width="0.0112%" height="15" fill="rgb(231,61,34)" fg:x="2062" fg:w="1"/><text x="23.2480%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="22.9980%" y="469" width="0.0112%" height="15" fill="rgb(235,75,3)" fg:x="2062" fg:w="1"/><text x="23.2480%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="22.9980%" y="453" width="0.0112%" height="15" fill="rgb(220,106,47)" fg:x="2062" fg:w="1"/><text x="23.2480%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="22.9980%" y="437" width="0.0112%" height="15" fill="rgb(210,196,33)" fg:x="2062" fg:w="1"/><text x="23.2480%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="22.9980%" y="421" width="0.0112%" height="15" fill="rgb(229,154,42)" fg:x="2062" fg:w="1"/><text x="23.2480%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="22.9980%" y="405" width="0.0112%" height="15" fill="rgb(228,114,26)" fg:x="2062" fg:w="1"/><text x="23.2480%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="22.9980%" y="389" width="0.0112%" height="15" fill="rgb(208,144,1)" fg:x="2062" fg:w="1"/><text x="23.2480%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="22.9980%" y="373" width="0.0112%" height="15" fill="rgb(239,112,37)" fg:x="2062" fg:w="1"/><text x="23.2480%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="22.9980%" y="357" width="0.0112%" height="15" fill="rgb(210,96,50)" fg:x="2062" fg:w="1"/><text x="23.2480%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="22.9980%" y="341" width="0.0112%" height="15" fill="rgb(222,178,2)" fg:x="2062" fg:w="1"/><text x="23.2480%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (58 samples, 0.65%)</title><rect x="22.9311%" y="565" width="0.6469%" height="15" fill="rgb(226,74,18)" fg:x="2056" fg:w="58"/><text x="23.1811%" y="575.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (51 samples, 0.57%)</title><rect x="23.0091%" y="549" width="0.5688%" height="15" fill="rgb(225,67,54)" fg:x="2063" fg:w="51"/><text x="23.2591%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (51 samples, 0.57%)</title><rect x="23.0091%" y="533" width="0.5688%" height="15" fill="rgb(251,92,32)" fg:x="2063" fg:w="51"/><text x="23.2591%" y="543.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (51 samples, 0.57%)</title><rect x="23.0091%" y="517" width="0.5688%" height="15" fill="rgb(228,149,22)" fg:x="2063" fg:w="51"/><text x="23.2591%" y="527.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (51 samples, 0.57%)</title><rect x="23.0091%" y="501" width="0.5688%" height="15" fill="rgb(243,54,13)" fg:x="2063" fg:w="51"/><text x="23.2591%" y="511.50"></text></g><g><title>__memcmp_avx2_movbe (49 samples, 0.55%)</title><rect x="23.0315%" y="485" width="0.5465%" height="15" fill="rgb(243,180,28)" fg:x="2065" fg:w="49"/><text x="23.2815%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (7 samples, 0.08%)</title><rect x="23.5780%" y="533" width="0.0781%" height="15" fill="rgb(208,167,24)" fg:x="2114" fg:w="7"/><text x="23.8280%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (7 samples, 0.08%)</title><rect x="23.5780%" y="517" width="0.0781%" height="15" fill="rgb(245,73,45)" fg:x="2114" fg:w="7"/><text x="23.8280%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (3 samples, 0.03%)</title><rect x="23.6226%" y="501" width="0.0335%" height="15" fill="rgb(237,203,48)" fg:x="2118" fg:w="3"/><text x="23.8726%" y="511.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (231 samples, 2.58%)</title><rect x="22.9311%" y="581" width="2.5764%" height="15" fill="rgb(211,197,16)" fg:x="2056" fg:w="231"/><text x="23.1811%" y="591.50">ha..</text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (A,B)&gt;::eq (173 samples, 1.93%)</title><rect x="23.5780%" y="565" width="1.9295%" height="15" fill="rgb(243,99,51)" fg:x="2114" fg:w="173"/><text x="23.8280%" y="575.50">c..</text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (173 samples, 1.93%)</title><rect x="23.5780%" y="549" width="1.9295%" height="15" fill="rgb(215,123,29)" fg:x="2114" fg:w="173"/><text x="23.8280%" y="559.50">&lt;..</text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (166 samples, 1.85%)</title><rect x="23.6560%" y="533" width="1.8514%" height="15" fill="rgb(239,186,37)" fg:x="2121" fg:w="166"/><text x="23.9060%" y="543.50">c..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (166 samples, 1.85%)</title><rect x="23.6560%" y="517" width="1.8514%" height="15" fill="rgb(252,136,39)" fg:x="2121" fg:w="166"/><text x="23.9060%" y="527.50">c..</text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (166 samples, 1.85%)</title><rect x="23.6560%" y="501" width="1.8514%" height="15" fill="rgb(223,213,32)" fg:x="2121" fg:w="166"/><text x="23.9060%" y="511.50">c..</text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (166 samples, 1.85%)</title><rect x="23.6560%" y="485" width="1.8514%" height="15" fill="rgb(233,115,5)" fg:x="2121" fg:w="166"/><text x="23.9060%" y="495.50">&lt;..</text></g><g><title>__memcmp_avx2_movbe (150 samples, 1.67%)</title><rect x="23.8345%" y="469" width="1.6730%" height="15" fill="rgb(207,226,44)" fg:x="2137" fg:w="150"/><text x="24.0845%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (237 samples, 2.64%)</title><rect x="22.9311%" y="597" width="2.6433%" height="15" fill="rgb(208,126,0)" fg:x="2056" fg:w="237"/><text x="23.1811%" y="607.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (6 samples, 0.07%)</title><rect x="25.5075%" y="581" width="0.0669%" height="15" fill="rgb(244,66,21)" fg:x="2287" fg:w="6"/><text x="25.7575%" y="591.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (6 samples, 0.07%)</title><rect x="25.5075%" y="565" width="0.0669%" height="15" fill="rgb(222,97,12)" fg:x="2287" fg:w="6"/><text x="25.7575%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (6 samples, 0.07%)</title><rect x="25.5075%" y="549" width="0.0669%" height="15" fill="rgb(219,213,19)" fg:x="2287" fg:w="6"/><text x="25.7575%" y="559.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_neg (6 samples, 0.07%)</title><rect x="25.5075%" y="533" width="0.0669%" height="15" fill="rgb(252,169,30)" fg:x="2287" fg:w="6"/><text x="25.7575%" y="543.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_sub (6 samples, 0.07%)</title><rect x="25.5075%" y="517" width="0.0669%" height="15" fill="rgb(206,32,51)" fg:x="2287" fg:w="6"/><text x="25.7575%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (8 samples, 0.09%)</title><rect x="25.5744%" y="597" width="0.0892%" height="15" fill="rgb(250,172,42)" fg:x="2293" fg:w="8"/><text x="25.8244%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="25.6525%" y="581" width="0.0112%" height="15" fill="rgb(209,34,43)" fg:x="2300" fg:w="1"/><text x="25.9025%" y="591.50"></text></g><g><title>hashbrown::raw::h2 (27 samples, 0.30%)</title><rect x="25.6636%" y="597" width="0.3011%" height="15" fill="rgb(223,11,35)" fg:x="2301" fg:w="27"/><text x="25.9136%" y="607.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (10 samples, 0.11%)</title><rect x="25.9648%" y="597" width="0.1115%" height="15" fill="rgb(251,219,26)" fg:x="2328" fg:w="10"/><text x="26.2148%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (10 samples, 0.11%)</title><rect x="25.9648%" y="581" width="0.1115%" height="15" fill="rgb(231,119,3)" fg:x="2328" fg:w="10"/><text x="26.2148%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 0.11%)</title><rect x="25.9648%" y="565" width="0.1115%" height="15" fill="rgb(216,97,11)" fg:x="2328" fg:w="10"/><text x="26.2148%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (323 samples, 3.60%)</title><rect x="22.5853%" y="645" width="3.6025%" height="15" fill="rgb(223,59,9)" fg:x="2025" fg:w="323"/><text x="22.8353%" y="655.50">hash..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (323 samples, 3.60%)</title><rect x="22.5853%" y="629" width="3.6025%" height="15" fill="rgb(233,93,31)" fg:x="2025" fg:w="323"/><text x="22.8353%" y="639.50">hash..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (323 samples, 3.60%)</title><rect x="22.5853%" y="613" width="3.6025%" height="15" fill="rgb(239,81,33)" fg:x="2025" fg:w="323"/><text x="22.8353%" y="623.50">hash..</text></g><g><title>hashbrown::raw::sse2::Group::match_byte (10 samples, 0.11%)</title><rect x="26.0763%" y="597" width="0.1115%" height="15" fill="rgb(213,120,34)" fg:x="2338" fg:w="10"/><text x="26.3263%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (10 samples, 0.11%)</title><rect x="26.0763%" y="581" width="0.1115%" height="15" fill="rgb(243,49,53)" fg:x="2338" fg:w="10"/><text x="26.3263%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (863 samples, 9.63%)</title><rect x="16.5737%" y="709" width="9.6253%" height="15" fill="rgb(247,216,33)" fg:x="1486" fg:w="863"/><text x="16.8237%" y="719.50">&lt;std::collecti..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (863 samples, 9.63%)</title><rect x="16.5737%" y="693" width="9.6253%" height="15" fill="rgb(226,26,14)" fg:x="1486" fg:w="863"/><text x="16.8237%" y="703.50">std::collectio..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (863 samples, 9.63%)</title><rect x="16.5737%" y="677" width="9.6253%" height="15" fill="rgb(215,49,53)" fg:x="1486" fg:w="863"/><text x="16.8237%" y="687.50">hashbrown::map..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (863 samples, 9.63%)</title><rect x="16.5737%" y="661" width="9.6253%" height="15" fill="rgb(245,162,40)" fg:x="1486" fg:w="863"/><text x="16.8237%" y="671.50">hashbrown::map..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::is_empty (1 samples, 0.01%)</title><rect x="26.1878%" y="645" width="0.0112%" height="15" fill="rgb(229,68,17)" fg:x="2348" fg:w="1"/><text x="26.4378%" y="655.50"></text></g><g><title>__GI___libc_free (36 samples, 0.40%)</title><rect x="26.3440%" y="597" width="0.4015%" height="15" fill="rgb(213,182,10)" fg:x="2362" fg:w="36"/><text x="26.5940%" y="607.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.01%)</title><rect x="26.7455%" y="597" width="0.0112%" height="15" fill="rgb(245,125,30)" fg:x="2398" fg:w="1"/><text x="26.9955%" y="607.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.01%)</title><rect x="26.7455%" y="581" width="0.0112%" height="15" fill="rgb(232,202,2)" fg:x="2398" fg:w="1"/><text x="26.9955%" y="591.50"></text></g><g><title>__rust_dealloc (13 samples, 0.14%)</title><rect x="26.7566%" y="597" width="0.1450%" height="15" fill="rgb(237,140,51)" fg:x="2399" fg:w="13"/><text x="27.0066%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="27.7604%" y="581" width="0.0223%" height="15" fill="rgb(236,157,25)" fg:x="2489" fg:w="2"/><text x="28.0104%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,alloc::string::String)&gt; (155 samples, 1.73%)</title><rect x="26.1990%" y="709" width="1.7288%" height="15" fill="rgb(219,209,0)" fg:x="2349" fg:w="155"/><text x="26.4490%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (155 samples, 1.73%)</title><rect x="26.1990%" y="693" width="1.7288%" height="15" fill="rgb(240,116,54)" fg:x="2349" fg:w="155"/><text x="26.4490%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (155 samples, 1.73%)</title><rect x="26.1990%" y="677" width="1.7288%" height="15" fill="rgb(216,10,36)" fg:x="2349" fg:w="155"/><text x="26.4490%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (155 samples, 1.73%)</title><rect x="26.1990%" y="661" width="1.7288%" height="15" fill="rgb(222,72,44)" fg:x="2349" fg:w="155"/><text x="26.4490%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (155 samples, 1.73%)</title><rect x="26.1990%" y="645" width="1.7288%" height="15" fill="rgb(232,159,9)" fg:x="2349" fg:w="155"/><text x="26.4490%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (143 samples, 1.59%)</title><rect x="26.3328%" y="629" width="1.5949%" height="15" fill="rgb(210,39,32)" fg:x="2361" fg:w="143"/><text x="26.5828%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (143 samples, 1.59%)</title><rect x="26.3328%" y="613" width="1.5949%" height="15" fill="rgb(216,194,45)" fg:x="2361" fg:w="143"/><text x="26.5828%" y="623.50"></text></g><g><title>_int_free (92 samples, 1.03%)</title><rect x="26.9016%" y="597" width="1.0261%" height="15" fill="rgb(218,18,35)" fg:x="2412" fg:w="92"/><text x="27.1516%" y="607.50"></text></g><g><title>tcache_put (13 samples, 0.14%)</title><rect x="27.7827%" y="581" width="0.1450%" height="15" fill="rgb(207,83,51)" fg:x="2491" fg:w="13"/><text x="28.0327%" y="591.50"></text></g><g><title>nand2tetris::vm::VM::goto (1,218 samples, 13.58%)</title><rect x="14.4658%" y="725" width="13.5847%" height="15" fill="rgb(225,63,43)" fg:x="1297" fg:w="1218"/><text x="14.7158%" y="735.50">nand2tetris::vm::VM::..</text></g><g><title>core::slice::&lt;impl [T]&gt;::last (11 samples, 0.12%)</title><rect x="27.9277%" y="709" width="0.1227%" height="15" fill="rgb(207,57,36)" fg:x="2504" fg:w="11"/><text x="28.1777%" y="719.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.09%)</title><rect x="34.9097%" y="517" width="0.0892%" height="15" fill="rgb(216,99,33)" fg:x="3130" fg:w="8"/><text x="35.1597%" y="527.50"></text></g><g><title>tcache_get (2 samples, 0.02%)</title><rect x="34.9766%" y="501" width="0.0223%" height="15" fill="rgb(225,42,16)" fg:x="3136" fg:w="2"/><text x="35.2266%" y="511.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="34.9989%" y="517" width="0.0112%" height="15" fill="rgb(220,201,45)" fg:x="3138" fg:w="1"/><text x="35.2489%" y="527.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="34.9989%" y="501" width="0.0112%" height="15" fill="rgb(225,33,4)" fg:x="3138" fg:w="1"/><text x="35.2489%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (15 samples, 0.17%)</title><rect x="34.8762%" y="613" width="0.1673%" height="15" fill="rgb(224,33,50)" fg:x="3127" fg:w="15"/><text x="35.1262%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (15 samples, 0.17%)</title><rect x="34.8762%" y="597" width="0.1673%" height="15" fill="rgb(246,198,51)" fg:x="3127" fg:w="15"/><text x="35.1262%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (15 samples, 0.17%)</title><rect x="34.8762%" y="581" width="0.1673%" height="15" fill="rgb(205,22,4)" fg:x="3127" fg:w="15"/><text x="35.1262%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.16%)</title><rect x="34.8874%" y="565" width="0.1561%" height="15" fill="rgb(206,3,8)" fg:x="3128" fg:w="14"/><text x="35.1374%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.16%)</title><rect x="34.8874%" y="549" width="0.1561%" height="15" fill="rgb(251,23,15)" fg:x="3128" fg:w="14"/><text x="35.1374%" y="559.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.16%)</title><rect x="34.8874%" y="533" width="0.1561%" height="15" fill="rgb(252,88,28)" fg:x="3128" fg:w="14"/><text x="35.1374%" y="543.50"></text></g><g><title>__rust_alloc (3 samples, 0.03%)</title><rect x="35.0100%" y="517" width="0.0335%" height="15" fill="rgb(212,127,14)" fg:x="3139" fg:w="3"/><text x="35.2600%" y="527.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (20 samples, 0.22%)</title><rect x="34.8650%" y="709" width="0.2231%" height="15" fill="rgb(247,145,37)" fg:x="3126" fg:w="20"/><text x="35.1150%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (20 samples, 0.22%)</title><rect x="34.8650%" y="693" width="0.2231%" height="15" fill="rgb(209,117,53)" fg:x="3126" fg:w="20"/><text x="35.1150%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (19 samples, 0.21%)</title><rect x="34.8762%" y="677" width="0.2119%" height="15" fill="rgb(212,90,42)" fg:x="3127" fg:w="19"/><text x="35.1262%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19 samples, 0.21%)</title><rect x="34.8762%" y="661" width="0.2119%" height="15" fill="rgb(218,164,37)" fg:x="3127" fg:w="19"/><text x="35.1262%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (19 samples, 0.21%)</title><rect x="34.8762%" y="645" width="0.2119%" height="15" fill="rgb(246,65,34)" fg:x="3127" fg:w="19"/><text x="35.1262%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19 samples, 0.21%)</title><rect x="34.8762%" y="629" width="0.2119%" height="15" fill="rgb(231,100,33)" fg:x="3127" fg:w="19"/><text x="35.1262%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (4 samples, 0.04%)</title><rect x="35.0435%" y="613" width="0.0446%" height="15" fill="rgb(228,126,14)" fg:x="3142" fg:w="4"/><text x="35.2935%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.04%)</title><rect x="35.0435%" y="597" width="0.0446%" height="15" fill="rgb(215,173,21)" fg:x="3142" fg:w="4"/><text x="35.2935%" y="607.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.04%)</title><rect x="35.0435%" y="581" width="0.0446%" height="15" fill="rgb(210,6,40)" fg:x="3142" fg:w="4"/><text x="35.2935%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.03%)</title><rect x="35.0881%" y="629" width="0.0335%" height="15" fill="rgb(212,48,18)" fg:x="3146" fg:w="3"/><text x="35.3381%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.03%)</title><rect x="35.0881%" y="613" width="0.0335%" height="15" fill="rgb(230,214,11)" fg:x="3146" fg:w="3"/><text x="35.3381%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.03%)</title><rect x="35.0881%" y="597" width="0.0335%" height="15" fill="rgb(254,105,39)" fg:x="3146" fg:w="3"/><text x="35.3381%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="35.0993%" y="581" width="0.0223%" height="15" fill="rgb(245,158,5)" fg:x="3147" fg:w="2"/><text x="35.3493%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="35.0993%" y="565" width="0.0223%" height="15" fill="rgb(249,208,11)" fg:x="3147" fg:w="2"/><text x="35.3493%" y="575.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="35.0993%" y="549" width="0.0223%" height="15" fill="rgb(210,39,28)" fg:x="3147" fg:w="2"/><text x="35.3493%" y="559.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="35.0993%" y="533" width="0.0223%" height="15" fill="rgb(211,56,53)" fg:x="3147" fg:w="2"/><text x="35.3493%" y="543.50"></text></g><g><title>tcache_get (1 samples, 0.01%)</title><rect x="35.1104%" y="517" width="0.0112%" height="15" fill="rgb(226,201,30)" fg:x="3148" fg:w="1"/><text x="35.3604%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5 samples, 0.06%)</title><rect x="35.0881%" y="709" width="0.0558%" height="15" fill="rgb(239,101,34)" fg:x="3146" fg:w="5"/><text x="35.3381%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.06%)</title><rect x="35.0881%" y="693" width="0.0558%" height="15" fill="rgb(226,209,5)" fg:x="3146" fg:w="5"/><text x="35.3381%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.06%)</title><rect x="35.0881%" y="677" width="0.0558%" height="15" fill="rgb(250,105,47)" fg:x="3146" fg:w="5"/><text x="35.3381%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.06%)</title><rect x="35.0881%" y="661" width="0.0558%" height="15" fill="rgb(230,72,3)" fg:x="3146" fg:w="5"/><text x="35.3381%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.06%)</title><rect x="35.0881%" y="645" width="0.0558%" height="15" fill="rgb(232,218,39)" fg:x="3146" fg:w="5"/><text x="35.3381%" y="655.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.02%)</title><rect x="35.1216%" y="629" width="0.0223%" height="15" fill="rgb(248,166,6)" fg:x="3149" fg:w="2"/><text x="35.3716%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="35.1216%" y="613" width="0.0223%" height="15" fill="rgb(247,89,20)" fg:x="3149" fg:w="2"/><text x="35.3716%" y="623.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.02%)</title><rect x="35.1216%" y="597" width="0.0223%" height="15" fill="rgb(248,130,54)" fg:x="3149" fg:w="2"/><text x="35.3716%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (6 samples, 0.07%)</title><rect x="35.1439%" y="709" width="0.0669%" height="15" fill="rgb(234,196,4)" fg:x="3151" fg:w="6"/><text x="35.3939%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (6 samples, 0.07%)</title><rect x="35.1439%" y="693" width="0.0669%" height="15" fill="rgb(250,143,31)" fg:x="3151" fg:w="6"/><text x="35.3939%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (116 samples, 1.29%)</title><rect x="35.2108%" y="709" width="1.2938%" height="15" fill="rgb(211,110,34)" fg:x="3157" fg:w="116"/><text x="35.4608%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (10 samples, 0.11%)</title><rect x="36.3930%" y="693" width="0.1115%" height="15" fill="rgb(215,124,48)" fg:x="3263" fg:w="10"/><text x="36.6430%" y="703.50"></text></g><g><title>&lt;nand2tetris::hardware::RAM as core::ops::index::Index&lt;i16&gt;&gt;::index (2 samples, 0.02%)</title><rect x="36.5046%" y="709" width="0.0223%" height="15" fill="rgb(216,46,13)" fg:x="3273" fg:w="2"/><text x="36.7546%" y="719.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (79 samples, 0.88%)</title><rect x="40.8766%" y="549" width="0.8811%" height="15" fill="rgb(205,184,25)" fg:x="3665" fg:w="79"/><text x="41.1266%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (185 samples, 2.06%)</title><rect x="40.2744%" y="565" width="2.0634%" height="15" fill="rgb(228,1,10)" fg:x="3611" fg:w="185"/><text x="40.5244%" y="575.50">&lt;..</text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (52 samples, 0.58%)</title><rect x="41.7578%" y="549" width="0.5800%" height="15" fill="rgb(213,116,27)" fg:x="3744" fg:w="52"/><text x="42.0078%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (205 samples, 2.29%)</title><rect x="44.5126%" y="549" width="2.2864%" height="15" fill="rgb(241,95,50)" fg:x="3991" fg:w="205"/><text x="44.7626%" y="559.50">c..</text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (620 samples, 6.92%)</title><rect x="42.3377%" y="565" width="6.9150%" height="15" fill="rgb(238,48,32)" fg:x="3796" fg:w="620"/><text x="42.5877%" y="575.50">&lt;core::ha..</text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (220 samples, 2.45%)</title><rect x="46.7990%" y="549" width="2.4537%" height="15" fill="rgb(235,113,49)" fg:x="4196" fg:w="220"/><text x="47.0490%" y="559.50">co..</text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1,007 samples, 11.23%)</title><rect x="38.0326%" y="613" width="11.2313%" height="15" fill="rgb(205,127,43)" fg:x="3410" fg:w="1007"/><text x="38.2826%" y="623.50">&lt;std::collections..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1,007 samples, 11.23%)</title><rect x="38.0326%" y="597" width="11.2313%" height="15" fill="rgb(250,162,2)" fg:x="3410" fg:w="1007"/><text x="38.2826%" y="607.50">&lt;core::hash::sip:..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1,007 samples, 11.23%)</title><rect x="38.0326%" y="581" width="11.2313%" height="15" fill="rgb(220,13,41)" fg:x="3410" fg:w="1007"/><text x="38.2826%" y="591.50">&lt;core::hash::sip:..</text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="49.2527%" y="565" width="0.0112%" height="15" fill="rgb(249,221,25)" fg:x="4416" fg:w="1"/><text x="49.5027%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="50.9257%" y="597" width="0.0112%" height="15" fill="rgb(215,208,19)" fg:x="4566" fg:w="1"/><text x="51.1757%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (240 samples, 2.68%)</title><rect x="49.2639%" y="613" width="2.6768%" height="15" fill="rgb(236,175,2)" fg:x="4417" fg:w="240"/><text x="49.5139%" y="623.50">&lt;s..</text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (90 samples, 1.00%)</title><rect x="50.9369%" y="597" width="1.0038%" height="15" fill="rgb(241,52,2)" fg:x="4567" fg:w="90"/><text x="51.1869%" y="607.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (56 samples, 0.62%)</title><rect x="51.3161%" y="581" width="0.6246%" height="15" fill="rgb(248,140,14)" fg:x="4601" fg:w="56"/><text x="51.5661%" y="591.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (56 samples, 0.62%)</title><rect x="51.3161%" y="565" width="0.6246%" height="15" fill="rgb(253,22,42)" fg:x="4601" fg:w="56"/><text x="51.5661%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="51.9295%" y="549" width="0.0112%" height="15" fill="rgb(234,61,47)" fg:x="4656" fg:w="1"/><text x="52.1795%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="51.9295%" y="533" width="0.0112%" height="15" fill="rgb(208,226,15)" fg:x="4656" fg:w="1"/><text x="52.1795%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="51.9295%" y="517" width="0.0112%" height="15" fill="rgb(217,221,4)" fg:x="4656" fg:w="1"/><text x="52.1795%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="51.9295%" y="501" width="0.0112%" height="15" fill="rgb(212,174,34)" fg:x="4656" fg:w="1"/><text x="52.1795%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="51.9295%" y="485" width="0.0112%" height="15" fill="rgb(253,83,4)" fg:x="4656" fg:w="1"/><text x="52.1795%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="51.9295%" y="469" width="0.0112%" height="15" fill="rgb(250,195,49)" fg:x="4656" fg:w="1"/><text x="52.1795%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="51.9295%" y="453" width="0.0112%" height="15" fill="rgb(241,192,25)" fg:x="4656" fg:w="1"/><text x="52.1795%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="51.9295%" y="437" width="0.0112%" height="15" fill="rgb(208,124,10)" fg:x="4656" fg:w="1"/><text x="52.1795%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="51.9295%" y="421" width="0.0112%" height="15" fill="rgb(222,33,0)" fg:x="4656" fg:w="1"/><text x="52.1795%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="51.9295%" y="405" width="0.0112%" height="15" fill="rgb(234,209,28)" fg:x="4656" fg:w="1"/><text x="52.1795%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="51.9295%" y="389" width="0.0112%" height="15" fill="rgb(224,11,23)" fg:x="4656" fg:w="1"/><text x="52.1795%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="51.9407%" y="613" width="0.0112%" height="15" fill="rgb(232,99,1)" fg:x="4657" fg:w="1"/><text x="52.1907%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="51.9407%" y="597" width="0.0112%" height="15" fill="rgb(237,95,45)" fg:x="4657" fg:w="1"/><text x="52.1907%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="51.9407%" y="581" width="0.0112%" height="15" fill="rgb(208,109,11)" fg:x="4657" fg:w="1"/><text x="52.1907%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="51.9407%" y="565" width="0.0112%" height="15" fill="rgb(216,190,48)" fg:x="4657" fg:w="1"/><text x="52.1907%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="51.9407%" y="549" width="0.0112%" height="15" fill="rgb(251,171,36)" fg:x="4657" fg:w="1"/><text x="52.1907%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="51.9407%" y="533" width="0.0112%" height="15" fill="rgb(230,62,22)" fg:x="4657" fg:w="1"/><text x="52.1907%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="51.9407%" y="517" width="0.0112%" height="15" fill="rgb(225,114,35)" fg:x="4657" fg:w="1"/><text x="52.1907%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="51.9407%" y="501" width="0.0112%" height="15" fill="rgb(215,118,42)" fg:x="4657" fg:w="1"/><text x="52.1907%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (17 samples, 0.19%)</title><rect x="51.9518%" y="581" width="0.1896%" height="15" fill="rgb(243,119,21)" fg:x="4658" fg:w="17"/><text x="52.2018%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (17 samples, 0.19%)</title><rect x="51.9518%" y="565" width="0.1896%" height="15" fill="rgb(252,177,53)" fg:x="4658" fg:w="17"/><text x="52.2018%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (4 samples, 0.04%)</title><rect x="52.0968%" y="549" width="0.0446%" height="15" fill="rgb(237,209,29)" fg:x="4671" fg:w="4"/><text x="52.3468%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="52.1303%" y="533" width="0.0112%" height="15" fill="rgb(212,65,23)" fg:x="4674" fg:w="1"/><text x="52.3803%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8 samples, 0.09%)</title><rect x="54.5059%" y="501" width="0.0892%" height="15" fill="rgb(230,222,46)" fg:x="4887" fg:w="8"/><text x="54.7559%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="54.5840%" y="485" width="0.0112%" height="15" fill="rgb(215,135,32)" fg:x="4894" fg:w="1"/><text x="54.8340%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (15 samples, 0.17%)</title><rect x="54.4613%" y="517" width="0.1673%" height="15" fill="rgb(246,101,22)" fg:x="4883" fg:w="15"/><text x="54.7113%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.03%)</title><rect x="54.5951%" y="501" width="0.0335%" height="15" fill="rgb(206,107,13)" fg:x="4895" fg:w="3"/><text x="54.8451%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="58.1642%" y="501" width="0.0112%" height="15" fill="rgb(250,100,44)" fg:x="5215" fg:w="1"/><text x="58.4142%" y="511.50"></text></g><g><title>core::hash::sip::u8to64_le (393 samples, 4.38%)</title><rect x="54.6286%" y="517" width="4.3832%" height="15" fill="rgb(231,147,38)" fg:x="4898" fg:w="393"/><text x="54.8786%" y="527.50">core:..</text></g><g><title>core::intrinsics::copy_nonoverlapping (75 samples, 0.84%)</title><rect x="58.1753%" y="501" width="0.8365%" height="15" fill="rgb(229,8,40)" fg:x="5216" fg:w="75"/><text x="58.4253%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (580 samples, 6.47%)</title><rect x="52.5764%" y="565" width="6.4689%" height="15" fill="rgb(221,135,30)" fg:x="4714" fg:w="580"/><text x="52.8264%" y="575.50">&lt;std::co..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (580 samples, 6.47%)</title><rect x="52.5764%" y="549" width="6.4689%" height="15" fill="rgb(249,193,18)" fg:x="4714" fg:w="580"/><text x="52.8264%" y="559.50">&lt;core::h..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (580 samples, 6.47%)</title><rect x="52.5764%" y="533" width="6.4689%" height="15" fill="rgb(209,133,39)" fg:x="4714" fg:w="580"/><text x="52.8264%" y="543.50">&lt;core::h..</text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.03%)</title><rect x="59.0118%" y="517" width="0.0335%" height="15" fill="rgb(232,100,14)" fg:x="5291" fg:w="3"/><text x="59.2618%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (35 samples, 0.39%)</title><rect x="62.0901%" y="485" width="0.3904%" height="15" fill="rgb(224,185,1)" fg:x="5567" fg:w="35"/><text x="62.3401%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (58 samples, 0.65%)</title><rect x="61.9117%" y="501" width="0.6469%" height="15" fill="rgb(223,139,8)" fg:x="5551" fg:w="58"/><text x="62.1617%" y="511.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (7 samples, 0.08%)</title><rect x="62.4805%" y="485" width="0.0781%" height="15" fill="rgb(232,213,38)" fg:x="5602" fg:w="7"/><text x="62.7305%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="62.5586%" y="501" width="0.0223%" height="15" fill="rgb(207,94,22)" fg:x="5609" fg:w="2"/><text x="62.8086%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="62.5586%" y="485" width="0.0223%" height="15" fill="rgb(219,183,54)" fg:x="5609" fg:w="2"/><text x="62.8086%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="62.5586%" y="469" width="0.0223%" height="15" fill="rgb(216,185,54)" fg:x="5609" fg:w="2"/><text x="62.8086%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="62.5586%" y="453" width="0.0223%" height="15" fill="rgb(254,217,39)" fg:x="5609" fg:w="2"/><text x="62.8086%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="62.5586%" y="437" width="0.0223%" height="15" fill="rgb(240,178,23)" fg:x="5609" fg:w="2"/><text x="62.8086%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="62.5586%" y="421" width="0.0223%" height="15" fill="rgb(218,11,47)" fg:x="5609" fg:w="2"/><text x="62.8086%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="62.5697%" y="405" width="0.0112%" height="15" fill="rgb(218,51,51)" fg:x="5610" fg:w="1"/><text x="62.8197%" y="415.50"></text></g><g><title>core::cmp::min (62 samples, 0.69%)</title><rect x="62.5809%" y="501" width="0.6915%" height="15" fill="rgb(238,126,27)" fg:x="5611" fg:w="62"/><text x="62.8309%" y="511.50"></text></g><g><title>core::cmp::Ord::min (62 samples, 0.69%)</title><rect x="62.5809%" y="485" width="0.6915%" height="15" fill="rgb(249,202,22)" fg:x="5611" fg:w="62"/><text x="62.8309%" y="495.50"></text></g><g><title>core::cmp::min_by (62 samples, 0.69%)</title><rect x="62.5809%" y="469" width="0.6915%" height="15" fill="rgb(254,195,49)" fg:x="5611" fg:w="62"/><text x="62.8309%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (591 samples, 6.59%)</title><rect x="60.0379%" y="549" width="6.5916%" height="15" fill="rgb(208,123,14)" fg:x="5383" fg:w="591"/><text x="60.2879%" y="559.50">&lt;std::col..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (587 samples, 6.55%)</title><rect x="60.0825%" y="533" width="6.5470%" height="15" fill="rgb(224,200,8)" fg:x="5387" fg:w="587"/><text x="60.3325%" y="543.50">&lt;core::ha..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (587 samples, 6.55%)</title><rect x="60.0825%" y="517" width="6.5470%" height="15" fill="rgb(217,61,36)" fg:x="5387" fg:w="587"/><text x="60.3325%" y="527.50">&lt;core::ha..</text></g><g><title>core::hash::sip::u8to64_le (301 samples, 3.36%)</title><rect x="63.2724%" y="501" width="3.3571%" height="15" fill="rgb(206,35,45)" fg:x="5673" fg:w="301"/><text x="63.5224%" y="511.50">cor..</text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1,317 samples, 14.69%)</title><rect x="51.9518%" y="597" width="14.6888%" height="15" fill="rgb(217,65,33)" fg:x="4658" fg:w="1317"/><text x="52.2018%" y="607.50">&lt;alloc::string::String..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1,300 samples, 14.50%)</title><rect x="52.1414%" y="581" width="14.4992%" height="15" fill="rgb(222,158,48)" fg:x="4675" fg:w="1300"/><text x="52.3914%" y="591.50">core::hash::impls::&lt;im..</text></g><g><title>core::hash::Hasher::write_u8 (681 samples, 7.60%)</title><rect x="59.0453%" y="565" width="7.5954%" height="15" fill="rgb(254,2,54)" fg:x="5294" fg:w="681"/><text x="59.2953%" y="575.50">core::hash..</text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="66.6295%" y="549" width="0.0112%" height="15" fill="rgb(250,143,38)" fg:x="5974" fg:w="1"/><text x="66.8795%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="66.6295%" y="533" width="0.0112%" height="15" fill="rgb(248,25,0)" fg:x="5974" fg:w="1"/><text x="66.8795%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="66.6295%" y="517" width="0.0112%" height="15" fill="rgb(206,152,27)" fg:x="5974" fg:w="1"/><text x="66.8795%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="66.6295%" y="501" width="0.0112%" height="15" fill="rgb(240,77,30)" fg:x="5974" fg:w="1"/><text x="66.8795%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="66.6295%" y="485" width="0.0112%" height="15" fill="rgb(231,5,3)" fg:x="5974" fg:w="1"/><text x="66.8795%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="66.6295%" y="469" width="0.0112%" height="15" fill="rgb(207,226,32)" fg:x="5974" fg:w="1"/><text x="66.8795%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="66.6295%" y="453" width="0.0112%" height="15" fill="rgb(222,207,47)" fg:x="5974" fg:w="1"/><text x="66.8795%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="66.6295%" y="437" width="0.0112%" height="15" fill="rgb(229,115,45)" fg:x="5974" fg:w="1"/><text x="66.8795%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="66.6295%" y="421" width="0.0112%" height="15" fill="rgb(224,191,6)" fg:x="5974" fg:w="1"/><text x="66.8795%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="66.6295%" y="405" width="0.0112%" height="15" fill="rgb(230,227,24)" fg:x="5974" fg:w="1"/><text x="66.8795%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="66.6295%" y="389" width="0.0112%" height="15" fill="rgb(228,80,19)" fg:x="5974" fg:w="1"/><text x="66.8795%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.02%)</title><rect x="66.6629%" y="533" width="0.0223%" height="15" fill="rgb(247,229,0)" fg:x="5977" fg:w="2"/><text x="66.9129%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="66.6741%" y="517" width="0.0112%" height="15" fill="rgb(237,194,15)" fg:x="5978" fg:w="1"/><text x="66.9241%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (7 samples, 0.08%)</title><rect x="66.6406%" y="581" width="0.0781%" height="15" fill="rgb(219,203,20)" fg:x="5975" fg:w="7"/><text x="66.8906%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (7 samples, 0.08%)</title><rect x="66.6406%" y="565" width="0.0781%" height="15" fill="rgb(234,128,8)" fg:x="5975" fg:w="7"/><text x="66.8906%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.08%)</title><rect x="66.6406%" y="549" width="0.0781%" height="15" fill="rgb(248,202,8)" fg:x="5975" fg:w="7"/><text x="66.8906%" y="559.50"></text></g><g><title>core::hash::sip::u8to64_le (3 samples, 0.03%)</title><rect x="66.6853%" y="533" width="0.0335%" height="15" fill="rgb(206,104,37)" fg:x="5979" fg:w="3"/><text x="66.9353%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="66.7076%" y="517" width="0.0112%" height="15" fill="rgb(223,8,27)" fg:x="5981" fg:w="1"/><text x="66.9576%" y="527.50"></text></g><g><title>hashbrown::map::make_hash (2,669 samples, 29.77%)</title><rect x="37.0511%" y="645" width="29.7680%" height="15" fill="rgb(216,217,28)" fg:x="3322" fg:w="2669"/><text x="37.3011%" y="655.50">hashbrown::map::make_hash</text></g><g><title>core::hash::BuildHasher::hash_one (2,637 samples, 29.41%)</title><rect x="37.4080%" y="629" width="29.4111%" height="15" fill="rgb(249,199,1)" fg:x="3354" fg:w="2637"/><text x="37.6580%" y="639.50">core::hash::BuildHasher::hash_one</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,333 samples, 14.87%)</title><rect x="51.9518%" y="613" width="14.8673%" height="15" fill="rgb(240,85,17)" fg:x="4658" fg:w="1333"/><text x="52.2018%" y="623.50">core::hash::impls::&lt;imp..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (16 samples, 0.18%)</title><rect x="66.6406%" y="597" width="0.1785%" height="15" fill="rgb(206,108,45)" fg:x="5975" fg:w="16"/><text x="66.8906%" y="607.50"></text></g><g><title>core::hash::Hasher::write_u8 (9 samples, 0.10%)</title><rect x="66.7187%" y="581" width="0.1004%" height="15" fill="rgb(245,210,41)" fg:x="5982" fg:w="9"/><text x="66.9687%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (8 samples, 0.09%)</title><rect x="66.7299%" y="565" width="0.0892%" height="15" fill="rgb(206,13,37)" fg:x="5983" fg:w="8"/><text x="66.9799%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (8 samples, 0.09%)</title><rect x="66.7299%" y="549" width="0.0892%" height="15" fill="rgb(250,61,18)" fg:x="5983" fg:w="8"/><text x="66.9799%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.09%)</title><rect x="66.7299%" y="533" width="0.0892%" height="15" fill="rgb(235,172,48)" fg:x="5983" fg:w="8"/><text x="66.9799%" y="543.50"></text></g><g><title>core::hash::sip::u8to64_le (5 samples, 0.06%)</title><rect x="66.7633%" y="517" width="0.0558%" height="15" fill="rgb(249,201,17)" fg:x="5986" fg:w="5"/><text x="67.0133%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (77 samples, 0.86%)</title><rect x="68.0236%" y="597" width="0.8588%" height="15" fill="rgb(219,208,6)" fg:x="6099" fg:w="77"/><text x="68.2736%" y="607.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (77 samples, 0.86%)</title><rect x="68.0236%" y="581" width="0.8588%" height="15" fill="rgb(248,31,23)" fg:x="6099" fg:w="77"/><text x="68.2736%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="68.8824%" y="597" width="0.0112%" height="15" fill="rgb(245,15,42)" fg:x="6176" fg:w="1"/><text x="69.1324%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="68.8824%" y="581" width="0.0112%" height="15" fill="rgb(222,217,39)" fg:x="6176" fg:w="1"/><text x="69.1324%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="69.4847%" y="517" width="0.0223%" height="15" fill="rgb(210,219,27)" fg:x="6230" fg:w="2"/><text x="69.7347%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="69.4847%" y="501" width="0.0223%" height="15" fill="rgb(252,166,36)" fg:x="6230" fg:w="2"/><text x="69.7347%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="69.4847%" y="485" width="0.0223%" height="15" fill="rgb(245,132,34)" fg:x="6230" fg:w="2"/><text x="69.7347%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="69.4847%" y="469" width="0.0223%" height="15" fill="rgb(236,54,3)" fg:x="6230" fg:w="2"/><text x="69.7347%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="69.4959%" y="453" width="0.0112%" height="15" fill="rgb(241,173,43)" fg:x="6231" fg:w="1"/><text x="69.7459%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="69.4959%" y="437" width="0.0112%" height="15" fill="rgb(215,190,9)" fg:x="6231" fg:w="1"/><text x="69.7459%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="69.4959%" y="421" width="0.0112%" height="15" fill="rgb(242,101,16)" fg:x="6231" fg:w="1"/><text x="69.7459%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="69.4959%" y="405" width="0.0112%" height="15" fill="rgb(223,190,21)" fg:x="6231" fg:w="1"/><text x="69.7459%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="69.4959%" y="389" width="0.0112%" height="15" fill="rgb(215,228,25)" fg:x="6231" fg:w="1"/><text x="69.7459%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (57 samples, 0.64%)</title><rect x="68.8936%" y="549" width="0.6357%" height="15" fill="rgb(225,36,22)" fg:x="6177" fg:w="57"/><text x="69.1436%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (57 samples, 0.64%)</title><rect x="68.8936%" y="533" width="0.6357%" height="15" fill="rgb(251,106,46)" fg:x="6177" fg:w="57"/><text x="69.1436%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (2 samples, 0.02%)</title><rect x="69.5070%" y="517" width="0.0223%" height="15" fill="rgb(208,90,1)" fg:x="6232" fg:w="2"/><text x="69.7570%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="69.5182%" y="501" width="0.0112%" height="15" fill="rgb(243,10,4)" fg:x="6233" fg:w="1"/><text x="69.7682%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="69.5182%" y="485" width="0.0112%" height="15" fill="rgb(212,137,27)" fg:x="6233" fg:w="1"/><text x="69.7682%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="69.5182%" y="469" width="0.0112%" height="15" fill="rgb(231,220,49)" fg:x="6233" fg:w="1"/><text x="69.7682%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (863 samples, 9.63%)</title><rect x="68.8936%" y="565" width="9.6253%" height="15" fill="rgb(237,96,20)" fg:x="6177" fg:w="863"/><text x="69.1436%" y="575.50">&lt;alloc::string..</text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (806 samples, 8.99%)</title><rect x="69.5293%" y="549" width="8.9895%" height="15" fill="rgb(239,229,30)" fg:x="6234" fg:w="806"/><text x="69.7793%" y="559.50">core::str::tr..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (806 samples, 8.99%)</title><rect x="69.5293%" y="533" width="8.9895%" height="15" fill="rgb(219,65,33)" fg:x="6234" fg:w="806"/><text x="69.7793%" y="543.50">core::cmp::im..</text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (806 samples, 8.99%)</title><rect x="69.5293%" y="517" width="8.9895%" height="15" fill="rgb(243,134,7)" fg:x="6234" fg:w="806"/><text x="69.7793%" y="527.50">core::slice::..</text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (806 samples, 8.99%)</title><rect x="69.5293%" y="501" width="8.9895%" height="15" fill="rgb(216,177,54)" fg:x="6234" fg:w="806"/><text x="69.7793%" y="511.50">&lt;[A] as core:..</text></g><g><title>__memcmp_avx2_movbe (749 samples, 8.35%)</title><rect x="70.1651%" y="485" width="8.3538%" height="15" fill="rgb(211,160,20)" fg:x="6291" fg:w="749"/><text x="70.4151%" y="495.50">__memcmp_avx..</text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="78.4965%" y="469" width="0.0223%" height="15" fill="rgb(239,85,39)" fg:x="7038" fg:w="2"/><text x="78.7465%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="78.5077%" y="453" width="0.0112%" height="15" fill="rgb(232,125,22)" fg:x="7039" fg:w="1"/><text x="78.7577%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="78.5077%" y="437" width="0.0112%" height="15" fill="rgb(244,57,34)" fg:x="7039" fg:w="1"/><text x="78.7577%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="78.5077%" y="421" width="0.0112%" height="15" fill="rgb(214,203,32)" fg:x="7039" fg:w="1"/><text x="78.7577%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="78.5077%" y="405" width="0.0112%" height="15" fill="rgb(207,58,43)" fg:x="7039" fg:w="1"/><text x="78.7577%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="78.5077%" y="389" width="0.0112%" height="15" fill="rgb(215,193,15)" fg:x="7039" fg:w="1"/><text x="78.7577%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="78.5077%" y="373" width="0.0112%" height="15" fill="rgb(232,15,44)" fg:x="7039" fg:w="1"/><text x="78.7577%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="78.5077%" y="357" width="0.0112%" height="15" fill="rgb(212,3,48)" fg:x="7039" fg:w="1"/><text x="78.7577%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="78.5077%" y="341" width="0.0112%" height="15" fill="rgb(218,128,7)" fg:x="7039" fg:w="1"/><text x="78.7577%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="78.5077%" y="325" width="0.0112%" height="15" fill="rgb(226,216,39)" fg:x="7039" fg:w="1"/><text x="78.7577%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="78.5077%" y="309" width="0.0112%" height="15" fill="rgb(243,47,51)" fg:x="7039" fg:w="1"/><text x="78.7577%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="78.5077%" y="293" width="0.0112%" height="15" fill="rgb(241,183,40)" fg:x="7039" fg:w="1"/><text x="78.7577%" y="303.50"></text></g><g><title>alloc::str::&lt;impl core::borrow::Borrow&lt;str&gt; for alloc::string::String&gt;::borrow (1 samples, 0.01%)</title><rect x="78.5188%" y="565" width="0.0112%" height="15" fill="rgb(231,217,32)" fg:x="7040" fg:w="1"/><text x="78.7688%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (1 samples, 0.01%)</title><rect x="78.5188%" y="549" width="0.0112%" height="15" fill="rgb(229,61,38)" fg:x="7040" fg:w="1"/><text x="78.7688%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="78.5188%" y="533" width="0.0112%" height="15" fill="rgb(225,210,5)" fg:x="7040" fg:w="1"/><text x="78.7688%" y="543.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (876 samples, 9.77%)</title><rect x="68.8936%" y="581" width="9.7702%" height="15" fill="rgb(231,79,45)" fg:x="6177" fg:w="876"/><text x="69.1436%" y="591.50">hashbrown::map..</text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (12 samples, 0.13%)</title><rect x="78.5300%" y="565" width="0.1338%" height="15" fill="rgb(224,100,7)" fg:x="7041" fg:w="12"/><text x="78.7800%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (12 samples, 0.13%)</title><rect x="78.5300%" y="549" width="0.1338%" height="15" fill="rgb(241,198,18)" fg:x="7041" fg:w="12"/><text x="78.7800%" y="559.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (12 samples, 0.13%)</title><rect x="78.5300%" y="533" width="0.1338%" height="15" fill="rgb(252,97,53)" fg:x="7041" fg:w="12"/><text x="78.7800%" y="543.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (12 samples, 0.13%)</title><rect x="78.5300%" y="517" width="0.1338%" height="15" fill="rgb(220,88,7)" fg:x="7041" fg:w="12"/><text x="78.7800%" y="527.50"></text></g><g><title>__memcmp_avx2_movbe (10 samples, 0.11%)</title><rect x="78.5523%" y="501" width="0.1115%" height="15" fill="rgb(213,176,14)" fg:x="7043" fg:w="10"/><text x="78.8023%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (902 samples, 10.06%)</title><rect x="68.8936%" y="597" width="10.0602%" height="15" fill="rgb(246,73,7)" fg:x="6177" fg:w="902"/><text x="69.1436%" y="607.50">hashbrown::raw:..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (26 samples, 0.29%)</title><rect x="78.6638%" y="581" width="0.2900%" height="15" fill="rgb(245,64,36)" fg:x="7053" fg:w="26"/><text x="78.9138%" y="591.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (26 samples, 0.29%)</title><rect x="78.6638%" y="565" width="0.2900%" height="15" fill="rgb(245,80,10)" fg:x="7053" fg:w="26"/><text x="78.9138%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (26 samples, 0.29%)</title><rect x="78.6638%" y="549" width="0.2900%" height="15" fill="rgb(232,107,50)" fg:x="7053" fg:w="26"/><text x="78.9138%" y="559.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_neg (26 samples, 0.29%)</title><rect x="78.6638%" y="533" width="0.2900%" height="15" fill="rgb(253,3,0)" fg:x="7053" fg:w="26"/><text x="78.9138%" y="543.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_sub (26 samples, 0.29%)</title><rect x="78.6638%" y="517" width="0.2900%" height="15" fill="rgb(212,99,53)" fg:x="7053" fg:w="26"/><text x="78.9138%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (19 samples, 0.21%)</title><rect x="78.9538%" y="597" width="0.2119%" height="15" fill="rgb(249,111,54)" fg:x="7079" fg:w="19"/><text x="79.2038%" y="607.50"></text></g><g><title>hashbrown::raw::h2 (236 samples, 2.63%)</title><rect x="79.1657%" y="597" width="2.6322%" height="15" fill="rgb(249,55,30)" fg:x="7098" fg:w="236"/><text x="79.4157%" y="607.50">ha..</text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="81.7867%" y="581" width="0.0112%" height="15" fill="rgb(237,47,42)" fg:x="7333" fg:w="1"/><text x="82.0367%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="81.7867%" y="565" width="0.0112%" height="15" fill="rgb(211,20,18)" fg:x="7333" fg:w="1"/><text x="82.0367%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="81.7867%" y="549" width="0.0112%" height="15" fill="rgb(231,203,46)" fg:x="7333" fg:w="1"/><text x="82.0367%" y="559.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (112 samples, 1.25%)</title><rect x="81.7979%" y="597" width="1.2492%" height="15" fill="rgb(237,142,3)" fg:x="7334" fg:w="112"/><text x="82.0479%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (112 samples, 1.25%)</title><rect x="81.7979%" y="581" width="1.2492%" height="15" fill="rgb(241,107,1)" fg:x="7334" fg:w="112"/><text x="82.0479%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (112 samples, 1.25%)</title><rect x="81.7979%" y="565" width="1.2492%" height="15" fill="rgb(229,83,13)" fg:x="7334" fg:w="112"/><text x="82.0479%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="83.0359%" y="549" width="0.0112%" height="15" fill="rgb(241,91,40)" fg:x="7445" fg:w="1"/><text x="83.2859%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="83.0359%" y="533" width="0.0112%" height="15" fill="rgb(225,3,45)" fg:x="7445" fg:w="1"/><text x="83.2859%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="83.0359%" y="517" width="0.0112%" height="15" fill="rgb(244,223,14)" fg:x="7445" fg:w="1"/><text x="83.2859%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="83.0359%" y="501" width="0.0112%" height="15" fill="rgb(224,124,37)" fg:x="7445" fg:w="1"/><text x="83.2859%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="83.0359%" y="485" width="0.0112%" height="15" fill="rgb(251,171,30)" fg:x="7445" fg:w="1"/><text x="83.2859%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="83.0359%" y="469" width="0.0112%" height="15" fill="rgb(236,46,54)" fg:x="7445" fg:w="1"/><text x="83.2859%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="83.0359%" y="453" width="0.0112%" height="15" fill="rgb(245,213,5)" fg:x="7445" fg:w="1"/><text x="83.2859%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="83.0359%" y="437" width="0.0112%" height="15" fill="rgb(230,144,27)" fg:x="7445" fg:w="1"/><text x="83.2859%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="83.0359%" y="421" width="0.0112%" height="15" fill="rgb(220,86,6)" fg:x="7445" fg:w="1"/><text x="83.2859%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="83.0359%" y="405" width="0.0112%" height="15" fill="rgb(240,20,13)" fg:x="7445" fg:w="1"/><text x="83.2859%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="83.0359%" y="389" width="0.0112%" height="15" fill="rgb(217,89,34)" fg:x="7445" fg:w="1"/><text x="83.2859%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="83.0359%" y="373" width="0.0112%" height="15" fill="rgb(229,13,5)" fg:x="7445" fg:w="1"/><text x="83.2859%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="83.0359%" y="357" width="0.0112%" height="15" fill="rgb(244,67,35)" fg:x="7445" fg:w="1"/><text x="83.2859%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1,524 samples, 17.00%)</title><rect x="66.8191%" y="645" width="16.9975%" height="15" fill="rgb(221,40,2)" fg:x="5991" fg:w="1524"/><text x="67.0691%" y="655.50">hashbrown::raw::RawTable&lt;T..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1,524 samples, 17.00%)</title><rect x="66.8191%" y="629" width="16.9975%" height="15" fill="rgb(237,157,21)" fg:x="5991" fg:w="1524"/><text x="67.0691%" y="639.50">hashbrown::raw::RawTable&lt;T..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1,524 samples, 17.00%)</title><rect x="66.8191%" y="613" width="16.9975%" height="15" fill="rgb(222,94,11)" fg:x="5991" fg:w="1524"/><text x="67.0691%" y="623.50">hashbrown::raw::RawTableIn..</text></g><g><title>hashbrown::raw::sse2::Group::match_byte (69 samples, 0.77%)</title><rect x="83.0471%" y="597" width="0.7696%" height="15" fill="rgb(249,113,6)" fg:x="7446" fg:w="69"/><text x="83.2971%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (69 samples, 0.77%)</title><rect x="83.0471%" y="581" width="0.7696%" height="15" fill="rgb(238,137,36)" fg:x="7446" fg:w="69"/><text x="83.2971%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (4,245 samples, 47.35%)</title><rect x="36.5269%" y="709" width="47.3455%" height="15" fill="rgb(210,102,26)" fg:x="3275" fg:w="4245"/><text x="36.7769%" y="719.50">&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4,245 samples, 47.35%)</title><rect x="36.5269%" y="693" width="47.3455%" height="15" fill="rgb(218,30,30)" fg:x="3275" fg:w="4245"/><text x="36.7769%" y="703.50">std::collections::hash::map::HashMap&lt;K,V,S&gt;::get</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (4,245 samples, 47.35%)</title><rect x="36.5269%" y="677" width="47.3455%" height="15" fill="rgb(214,67,26)" fg:x="3275" fg:w="4245"/><text x="36.7769%" y="687.50">hashbrown::map::HashMap&lt;K,V,S,A&gt;::get</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4,245 samples, 47.35%)</title><rect x="36.5269%" y="661" width="47.3455%" height="15" fill="rgb(251,9,53)" fg:x="3275" fg:w="4245"/><text x="36.7769%" y="671.50">hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::is_empty (5 samples, 0.06%)</title><rect x="83.8166%" y="645" width="0.0558%" height="15" fill="rgb(228,204,25)" fg:x="7515" fg:w="5"/><text x="84.0666%" y="655.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="83.8724%" y="709" width="0.0558%" height="15" fill="rgb(207,153,8)" fg:x="7520" fg:w="5"/><text x="84.1224%" y="719.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="83.9059%" y="693" width="0.0223%" height="15" fill="rgb(242,9,16)" fg:x="7523" fg:w="2"/><text x="84.1559%" y="703.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="83.9059%" y="677" width="0.0223%" height="15" fill="rgb(217,211,10)" fg:x="7523" fg:w="2"/><text x="84.1559%" y="687.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="83.9059%" y="661" width="0.0223%" height="15" fill="rgb(219,228,52)" fg:x="7523" fg:w="2"/><text x="84.1559%" y="671.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="83.9059%" y="645" width="0.0223%" height="15" fill="rgb(231,92,29)" fg:x="7523" fg:w="2"/><text x="84.1559%" y="655.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="83.9059%" y="629" width="0.0223%" height="15" fill="rgb(232,8,23)" fg:x="7523" fg:w="2"/><text x="84.1559%" y="639.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="83.9059%" y="613" width="0.0223%" height="15" fill="rgb(216,211,34)" fg:x="7523" fg:w="2"/><text x="84.1559%" y="623.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="83.9059%" y="597" width="0.0223%" height="15" fill="rgb(236,151,0)" fg:x="7523" fg:w="2"/><text x="84.1559%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="83.9059%" y="581" width="0.0223%" height="15" fill="rgb(209,168,3)" fg:x="7523" fg:w="2"/><text x="84.1559%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="83.9059%" y="565" width="0.0223%" height="15" fill="rgb(208,129,28)" fg:x="7523" fg:w="2"/><text x="84.1559%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="83.9059%" y="549" width="0.0223%" height="15" fill="rgb(229,78,22)" fg:x="7523" fg:w="2"/><text x="84.1559%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="83.9059%" y="533" width="0.0223%" height="15" fill="rgb(228,187,13)" fg:x="7523" fg:w="2"/><text x="84.1559%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="83.9059%" y="517" width="0.0223%" height="15" fill="rgb(240,119,24)" fg:x="7523" fg:w="2"/><text x="84.1559%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="83.9059%" y="501" width="0.0223%" height="15" fill="rgb(209,194,42)" fg:x="7523" fg:w="2"/><text x="84.1559%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="83.9059%" y="485" width="0.0223%" height="15" fill="rgb(247,200,46)" fg:x="7523" fg:w="2"/><text x="84.1559%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="83.9170%" y="469" width="0.0112%" height="15" fill="rgb(218,76,16)" fg:x="7524" fg:w="1"/><text x="84.1670%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="83.9170%" y="453" width="0.0112%" height="15" fill="rgb(225,21,48)" fg:x="7524" fg:w="1"/><text x="84.1670%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="83.9170%" y="437" width="0.0112%" height="15" fill="rgb(239,223,50)" fg:x="7524" fg:w="1"/><text x="84.1670%" y="447.50"></text></g><g><title>checked_request2size (2 samples, 0.02%)</title><rect x="84.2182%" y="501" width="0.0223%" height="15" fill="rgb(244,45,21)" fg:x="7551" fg:w="2"/><text x="84.4682%" y="511.50"></text></g><g><title>__GI___libc_malloc (21 samples, 0.23%)</title><rect x="84.0286%" y="517" width="0.2342%" height="15" fill="rgb(232,33,43)" fg:x="7534" fg:w="21"/><text x="84.2786%" y="527.50"></text></g><g><title>tcache_get (2 samples, 0.02%)</title><rect x="84.2405%" y="501" width="0.0223%" height="15" fill="rgb(209,8,3)" fg:x="7553" fg:w="2"/><text x="84.4905%" y="511.50"></text></g><g><title>__rdl_alloc (4 samples, 0.04%)</title><rect x="84.2628%" y="517" width="0.0446%" height="15" fill="rgb(214,25,53)" fg:x="7555" fg:w="4"/><text x="84.5128%" y="527.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (4 samples, 0.04%)</title><rect x="84.2628%" y="501" width="0.0446%" height="15" fill="rgb(254,186,54)" fg:x="7555" fg:w="4"/><text x="84.5128%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (38 samples, 0.42%)</title><rect x="83.9282%" y="613" width="0.4238%" height="15" fill="rgb(208,174,49)" fg:x="7525" fg:w="38"/><text x="84.1782%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (38 samples, 0.42%)</title><rect x="83.9282%" y="597" width="0.4238%" height="15" fill="rgb(233,191,51)" fg:x="7525" fg:w="38"/><text x="84.1782%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (38 samples, 0.42%)</title><rect x="83.9282%" y="581" width="0.4238%" height="15" fill="rgb(222,134,10)" fg:x="7525" fg:w="38"/><text x="84.1782%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (35 samples, 0.39%)</title><rect x="83.9616%" y="565" width="0.3904%" height="15" fill="rgb(230,226,20)" fg:x="7528" fg:w="35"/><text x="84.2116%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (35 samples, 0.39%)</title><rect x="83.9616%" y="549" width="0.3904%" height="15" fill="rgb(251,111,25)" fg:x="7528" fg:w="35"/><text x="84.2116%" y="559.50"></text></g><g><title>alloc::alloc::alloc (31 samples, 0.35%)</title><rect x="84.0062%" y="533" width="0.3458%" height="15" fill="rgb(224,40,46)" fg:x="7532" fg:w="31"/><text x="84.2562%" y="543.50"></text></g><g><title>__rust_alloc (4 samples, 0.04%)</title><rect x="84.3074%" y="517" width="0.0446%" height="15" fill="rgb(236,108,47)" fg:x="7559" fg:w="4"/><text x="84.5574%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="84.3408%" y="501" width="0.0112%" height="15" fill="rgb(234,93,0)" fg:x="7562" fg:w="1"/><text x="84.5908%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="84.3408%" y="485" width="0.0112%" height="15" fill="rgb(224,213,32)" fg:x="7562" fg:w="1"/><text x="84.5908%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="84.3408%" y="469" width="0.0112%" height="15" fill="rgb(251,11,48)" fg:x="7562" fg:w="1"/><text x="84.5908%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="84.3408%" y="453" width="0.0112%" height="15" fill="rgb(236,173,5)" fg:x="7562" fg:w="1"/><text x="84.5908%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="84.3408%" y="437" width="0.0112%" height="15" fill="rgb(230,95,12)" fg:x="7562" fg:w="1"/><text x="84.5908%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="84.3408%" y="421" width="0.0112%" height="15" fill="rgb(232,209,1)" fg:x="7562" fg:w="1"/><text x="84.5908%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="84.3408%" y="405" width="0.0112%" height="15" fill="rgb(232,6,1)" fg:x="7562" fg:w="1"/><text x="84.5908%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="84.3408%" y="389" width="0.0112%" height="15" fill="rgb(210,224,50)" fg:x="7562" fg:w="1"/><text x="84.5908%" y="399.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (43 samples, 0.48%)</title><rect x="83.9282%" y="709" width="0.4796%" height="15" fill="rgb(228,127,35)" fg:x="7525" fg:w="43"/><text x="84.1782%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (43 samples, 0.48%)</title><rect x="83.9282%" y="693" width="0.4796%" height="15" fill="rgb(245,102,45)" fg:x="7525" fg:w="43"/><text x="84.1782%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (43 samples, 0.48%)</title><rect x="83.9282%" y="677" width="0.4796%" height="15" fill="rgb(214,1,49)" fg:x="7525" fg:w="43"/><text x="84.1782%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (43 samples, 0.48%)</title><rect x="83.9282%" y="661" width="0.4796%" height="15" fill="rgb(226,163,40)" fg:x="7525" fg:w="43"/><text x="84.1782%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (43 samples, 0.48%)</title><rect x="83.9282%" y="645" width="0.4796%" height="15" fill="rgb(239,212,28)" fg:x="7525" fg:w="43"/><text x="84.1782%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (43 samples, 0.48%)</title><rect x="83.9282%" y="629" width="0.4796%" height="15" fill="rgb(220,20,13)" fg:x="7525" fg:w="43"/><text x="84.1782%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (5 samples, 0.06%)</title><rect x="84.3520%" y="613" width="0.0558%" height="15" fill="rgb(210,164,35)" fg:x="7563" fg:w="5"/><text x="84.6020%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.06%)</title><rect x="84.3520%" y="597" width="0.0558%" height="15" fill="rgb(248,109,41)" fg:x="7563" fg:w="5"/><text x="84.6020%" y="607.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.04%)</title><rect x="84.3631%" y="581" width="0.0446%" height="15" fill="rgb(238,23,50)" fg:x="7564" fg:w="4"/><text x="84.6131%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (1 samples, 0.01%)</title><rect x="84.4078%" y="709" width="0.0112%" height="15" fill="rgb(211,48,49)" fg:x="7568" fg:w="1"/><text x="84.6578%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.03%)</title><rect x="84.4189%" y="709" width="0.0335%" height="15" fill="rgb(223,36,21)" fg:x="7569" fg:w="3"/><text x="84.6689%" y="719.50"></text></g><g><title>core::ptr::write (3 samples, 0.03%)</title><rect x="84.4189%" y="693" width="0.0335%" height="15" fill="rgb(207,123,46)" fg:x="7569" fg:w="3"/><text x="84.6689%" y="703.50"></text></g><g><title>__GI___libc_free (9 samples, 0.10%)</title><rect x="84.4858%" y="613" width="0.1004%" height="15" fill="rgb(240,218,32)" fg:x="7575" fg:w="9"/><text x="84.7358%" y="623.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.02%)</title><rect x="84.5862%" y="613" width="0.0223%" height="15" fill="rgb(252,5,43)" fg:x="7584" fg:w="2"/><text x="84.8362%" y="623.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.02%)</title><rect x="84.5862%" y="597" width="0.0223%" height="15" fill="rgb(252,84,19)" fg:x="7584" fg:w="2"/><text x="84.8362%" y="607.50"></text></g><g><title>__rust_dealloc (3 samples, 0.03%)</title><rect x="84.6085%" y="613" width="0.0335%" height="15" fill="rgb(243,152,39)" fg:x="7586" fg:w="3"/><text x="84.8585%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (38 samples, 0.42%)</title><rect x="84.4524%" y="709" width="0.4238%" height="15" fill="rgb(234,160,15)" fg:x="7572" fg:w="38"/><text x="84.7024%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (38 samples, 0.42%)</title><rect x="84.4524%" y="693" width="0.4238%" height="15" fill="rgb(237,34,20)" fg:x="7572" fg:w="38"/><text x="84.7024%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (38 samples, 0.42%)</title><rect x="84.4524%" y="677" width="0.4238%" height="15" fill="rgb(229,97,13)" fg:x="7572" fg:w="38"/><text x="84.7024%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.42%)</title><rect x="84.4524%" y="661" width="0.4238%" height="15" fill="rgb(234,71,50)" fg:x="7572" fg:w="38"/><text x="84.7024%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (37 samples, 0.41%)</title><rect x="84.4635%" y="645" width="0.4127%" height="15" fill="rgb(253,155,4)" fg:x="7573" fg:w="37"/><text x="84.7135%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (37 samples, 0.41%)</title><rect x="84.4635%" y="629" width="0.4127%" height="15" fill="rgb(222,185,37)" fg:x="7573" fg:w="37"/><text x="84.7135%" y="639.50"></text></g><g><title>_int_free (21 samples, 0.23%)</title><rect x="84.6420%" y="613" width="0.2342%" height="15" fill="rgb(251,177,13)" fg:x="7589" fg:w="21"/><text x="84.8920%" y="623.50"></text></g><g><title>tcache_put (3 samples, 0.03%)</title><rect x="84.8427%" y="597" width="0.0335%" height="15" fill="rgb(250,179,40)" fg:x="7607" fg:w="3"/><text x="85.0927%" y="607.50"></text></g><g><title>__GI___libc_free (5 samples, 0.06%)</title><rect x="84.8874%" y="581" width="0.0558%" height="15" fill="rgb(242,44,2)" fg:x="7611" fg:w="5"/><text x="85.1374%" y="591.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.01%)</title><rect x="84.9431%" y="581" width="0.0112%" height="15" fill="rgb(216,177,13)" fg:x="7616" fg:w="1"/><text x="85.1931%" y="591.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.01%)</title><rect x="84.9431%" y="565" width="0.0112%" height="15" fill="rgb(216,106,43)" fg:x="7616" fg:w="1"/><text x="85.1931%" y="575.50"></text></g><g><title>__rust_dealloc (1 samples, 0.01%)</title><rect x="84.9543%" y="581" width="0.0112%" height="15" fill="rgb(216,183,2)" fg:x="7617" fg:w="1"/><text x="85.2043%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;nand2tetris::vm::Frame&gt;&gt; (21 samples, 0.23%)</title><rect x="84.8762%" y="709" width="0.2342%" height="15" fill="rgb(249,75,3)" fg:x="7610" fg:w="21"/><text x="85.1262%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;nand2tetris::vm::Frame&gt; (21 samples, 0.23%)</title><rect x="84.8762%" y="693" width="0.2342%" height="15" fill="rgb(219,67,39)" fg:x="7610" fg:w="21"/><text x="85.1262%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (21 samples, 0.23%)</title><rect x="84.8762%" y="677" width="0.2342%" height="15" fill="rgb(253,228,2)" fg:x="7610" fg:w="21"/><text x="85.1262%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (21 samples, 0.23%)</title><rect x="84.8762%" y="661" width="0.2342%" height="15" fill="rgb(235,138,27)" fg:x="7610" fg:w="21"/><text x="85.1262%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (21 samples, 0.23%)</title><rect x="84.8762%" y="645" width="0.2342%" height="15" fill="rgb(236,97,51)" fg:x="7610" fg:w="21"/><text x="85.1262%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.23%)</title><rect x="84.8762%" y="629" width="0.2342%" height="15" fill="rgb(240,80,30)" fg:x="7610" fg:w="21"/><text x="85.1262%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (21 samples, 0.23%)</title><rect x="84.8762%" y="613" width="0.2342%" height="15" fill="rgb(230,178,19)" fg:x="7610" fg:w="21"/><text x="85.1262%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (21 samples, 0.23%)</title><rect x="84.8762%" y="597" width="0.2342%" height="15" fill="rgb(210,190,27)" fg:x="7610" fg:w="21"/><text x="85.1262%" y="607.50"></text></g><g><title>_int_free (13 samples, 0.14%)</title><rect x="84.9654%" y="581" width="0.1450%" height="15" fill="rgb(222,107,31)" fg:x="7618" fg:w="13"/><text x="85.2154%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="85.1216%" y="677" width="0.0112%" height="15" fill="rgb(216,127,34)" fg:x="7632" fg:w="1"/><text x="85.3716%" y="687.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="85.1216%" y="661" width="0.0112%" height="15" fill="rgb(234,116,52)" fg:x="7632" fg:w="1"/><text x="85.3716%" y="671.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="85.1216%" y="645" width="0.0112%" height="15" fill="rgb(222,124,15)" fg:x="7632" fg:w="1"/><text x="85.3716%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="85.2219%" y="645" width="0.0223%" height="15" fill="rgb(231,179,28)" fg:x="7641" fg:w="2"/><text x="85.4719%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (14 samples, 0.16%)</title><rect x="85.1439%" y="661" width="0.1561%" height="15" fill="rgb(226,93,45)" fg:x="7634" fg:w="14"/><text x="85.3939%" y="671.50"></text></g><g><title>core::slice::memchr::memchr::{{closure}} (5 samples, 0.06%)</title><rect x="85.2443%" y="645" width="0.0558%" height="15" fill="rgb(215,8,51)" fg:x="7643" fg:w="5"/><text x="85.4943%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (6 samples, 0.07%)</title><rect x="85.3669%" y="645" width="0.0669%" height="15" fill="rgb(223,106,5)" fg:x="7654" fg:w="6"/><text x="85.6169%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.06%)</title><rect x="85.3781%" y="629" width="0.0558%" height="15" fill="rgb(250,191,5)" fg:x="7655" fg:w="5"/><text x="85.6281%" y="639.50"></text></g><g><title>core::slice::memchr::contains_zero_byte (2 samples, 0.02%)</title><rect x="85.4339%" y="645" width="0.0223%" height="15" fill="rgb(242,132,44)" fg:x="7660" fg:w="2"/><text x="85.6839%" y="655.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (2 samples, 0.02%)</title><rect x="85.4339%" y="629" width="0.0223%" height="15" fill="rgb(251,152,29)" fg:x="7660" fg:w="2"/><text x="85.6839%" y="639.50"></text></g><g><title>core::str::&lt;impl str&gt;::split_once (32 samples, 0.36%)</title><rect x="85.1104%" y="709" width="0.3569%" height="15" fill="rgb(218,179,5)" fg:x="7631" fg:w="32"/><text x="85.3604%" y="719.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (32 samples, 0.36%)</title><rect x="85.1104%" y="693" width="0.3569%" height="15" fill="rgb(227,67,19)" fg:x="7631" fg:w="32"/><text x="85.3604%" y="703.50"></text></g><g><title>core::slice::memchr::memchr (30 samples, 0.33%)</title><rect x="85.1327%" y="677" width="0.3346%" height="15" fill="rgb(233,119,31)" fg:x="7633" fg:w="30"/><text x="85.3827%" y="687.50"></text></g><g><title>core::slice::memchr::memchr_general_case (15 samples, 0.17%)</title><rect x="85.3000%" y="661" width="0.1673%" height="15" fill="rgb(241,120,22)" fg:x="7648" fg:w="15"/><text x="85.5500%" y="671.50"></text></g><g><title>core::slice::memchr::repeat_byte (1 samples, 0.01%)</title><rect x="85.4562%" y="645" width="0.0112%" height="15" fill="rgb(224,102,30)" fg:x="7662" fg:w="1"/><text x="85.7062%" y="655.50"></text></g><g><title>&lt;nand2tetris::hardware::RAM as core::ops::index::Index&lt;i16&gt;&gt;::index (18 samples, 0.20%)</title><rect x="87.0734%" y="693" width="0.2008%" height="15" fill="rgb(210,164,37)" fg:x="7807" fg:w="18"/><text x="87.3234%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.03%)</title><rect x="87.4972%" y="533" width="0.0335%" height="15" fill="rgb(226,191,16)" fg:x="7845" fg:w="3"/><text x="87.7472%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (9 samples, 0.10%)</title><rect x="87.4638%" y="549" width="0.1004%" height="15" fill="rgb(214,40,45)" fg:x="7842" fg:w="9"/><text x="87.7138%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.03%)</title><rect x="87.5307%" y="533" width="0.0335%" height="15" fill="rgb(244,29,26)" fg:x="7848" fg:w="3"/><text x="87.7807%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (17 samples, 0.19%)</title><rect x="87.7203%" y="533" width="0.1896%" height="15" fill="rgb(216,16,5)" fg:x="7865" fg:w="17"/><text x="87.9703%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (63 samples, 0.70%)</title><rect x="87.3076%" y="597" width="0.7027%" height="15" fill="rgb(249,76,35)" fg:x="7828" fg:w="63"/><text x="87.5576%" y="607.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (63 samples, 0.70%)</title><rect x="87.3076%" y="581" width="0.7027%" height="15" fill="rgb(207,11,44)" fg:x="7828" fg:w="63"/><text x="87.5576%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (63 samples, 0.70%)</title><rect x="87.3076%" y="565" width="0.7027%" height="15" fill="rgb(228,190,49)" fg:x="7828" fg:w="63"/><text x="87.5576%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (40 samples, 0.45%)</title><rect x="87.5641%" y="549" width="0.4461%" height="15" fill="rgb(214,173,12)" fg:x="7851" fg:w="40"/><text x="87.8141%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (9 samples, 0.10%)</title><rect x="87.9099%" y="533" width="0.1004%" height="15" fill="rgb(218,26,35)" fg:x="7882" fg:w="9"/><text x="88.1599%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (19 samples, 0.21%)</title><rect x="88.0103%" y="597" width="0.2119%" height="15" fill="rgb(220,200,19)" fg:x="7891" fg:w="19"/><text x="88.2603%" y="607.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (14 samples, 0.16%)</title><rect x="88.0660%" y="581" width="0.1561%" height="15" fill="rgb(239,95,49)" fg:x="7896" fg:w="14"/><text x="88.3160%" y="591.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (5 samples, 0.06%)</title><rect x="88.1664%" y="565" width="0.0558%" height="15" fill="rgb(235,85,53)" fg:x="7905" fg:w="5"/><text x="88.4164%" y="575.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (5 samples, 0.06%)</title><rect x="88.1664%" y="549" width="0.0558%" height="15" fill="rgb(233,133,31)" fg:x="7905" fg:w="5"/><text x="88.4164%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (3 samples, 0.03%)</title><rect x="88.2222%" y="565" width="0.0335%" height="15" fill="rgb(218,25,20)" fg:x="7910" fg:w="3"/><text x="88.4722%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.03%)</title><rect x="88.2222%" y="549" width="0.0335%" height="15" fill="rgb(252,210,38)" fg:x="7910" fg:w="3"/><text x="88.4722%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (67 samples, 0.75%)</title><rect x="88.2556%" y="549" width="0.7473%" height="15" fill="rgb(242,134,21)" fg:x="7913" fg:w="67"/><text x="88.5056%" y="559.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (67 samples, 0.75%)</title><rect x="88.2556%" y="533" width="0.7473%" height="15" fill="rgb(213,28,48)" fg:x="7913" fg:w="67"/><text x="88.5056%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (67 samples, 0.75%)</title><rect x="88.2556%" y="517" width="0.7473%" height="15" fill="rgb(250,196,2)" fg:x="7913" fg:w="67"/><text x="88.5056%" y="527.50"></text></g><g><title>core::hash::sip::u8to64_le (50 samples, 0.56%)</title><rect x="88.4452%" y="501" width="0.5577%" height="15" fill="rgb(227,5,17)" fg:x="7930" fg:w="50"/><text x="88.6952%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.08%)</title><rect x="88.9248%" y="485" width="0.0781%" height="15" fill="rgb(221,226,24)" fg:x="7973" fg:w="7"/><text x="89.1748%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (7 samples, 0.08%)</title><rect x="89.3040%" y="469" width="0.0781%" height="15" fill="rgb(211,5,48)" fg:x="8007" fg:w="7"/><text x="89.5540%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (11 samples, 0.12%)</title><rect x="89.2817%" y="485" width="0.1227%" height="15" fill="rgb(219,150,6)" fg:x="8005" fg:w="11"/><text x="89.5317%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.02%)</title><rect x="89.3821%" y="469" width="0.0223%" height="15" fill="rgb(251,46,16)" fg:x="8014" fg:w="2"/><text x="89.6321%" y="479.50"></text></g><g><title>core::cmp::min (4 samples, 0.04%)</title><rect x="89.4044%" y="485" width="0.0446%" height="15" fill="rgb(220,204,40)" fg:x="8016" fg:w="4"/><text x="89.6544%" y="495.50"></text></g><g><title>core::cmp::Ord::min (4 samples, 0.04%)</title><rect x="89.4044%" y="469" width="0.0446%" height="15" fill="rgb(211,85,2)" fg:x="8016" fg:w="4"/><text x="89.6544%" y="479.50"></text></g><g><title>core::cmp::min_by (4 samples, 0.04%)</title><rect x="89.4044%" y="453" width="0.0446%" height="15" fill="rgb(229,17,7)" fg:x="8016" fg:w="4"/><text x="89.6544%" y="463.50"></text></g><g><title>hashbrown::map::make_hash (227 samples, 2.53%)</title><rect x="87.2741%" y="629" width="2.5318%" height="15" fill="rgb(239,72,28)" fg:x="7825" fg:w="227"/><text x="87.5241%" y="639.50">ha..</text></g><g><title>core::hash::BuildHasher::hash_one (224 samples, 2.50%)</title><rect x="87.3076%" y="613" width="2.4983%" height="15" fill="rgb(230,47,54)" fg:x="7828" fg:w="224"/><text x="87.5576%" y="623.50">co..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (142 samples, 1.58%)</title><rect x="88.2222%" y="597" width="1.5838%" height="15" fill="rgb(214,50,8)" fg:x="7910" fg:w="142"/><text x="88.4722%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (142 samples, 1.58%)</title><rect x="88.2222%" y="581" width="1.5838%" height="15" fill="rgb(216,198,43)" fg:x="7910" fg:w="142"/><text x="88.4722%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (139 samples, 1.55%)</title><rect x="88.2556%" y="565" width="1.5503%" height="15" fill="rgb(234,20,35)" fg:x="7913" fg:w="139"/><text x="88.5056%" y="575.50"></text></g><g><title>core::hash::Hasher::write_u8 (72 samples, 0.80%)</title><rect x="89.0029%" y="549" width="0.8030%" height="15" fill="rgb(254,45,19)" fg:x="7980" fg:w="72"/><text x="89.2529%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (66 samples, 0.74%)</title><rect x="89.0698%" y="533" width="0.7361%" height="15" fill="rgb(219,14,44)" fg:x="7986" fg:w="66"/><text x="89.3198%" y="543.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (65 samples, 0.72%)</title><rect x="89.0810%" y="517" width="0.7250%" height="15" fill="rgb(217,220,26)" fg:x="7987" fg:w="65"/><text x="89.3310%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (65 samples, 0.72%)</title><rect x="89.0810%" y="501" width="0.7250%" height="15" fill="rgb(213,158,28)" fg:x="7987" fg:w="65"/><text x="89.3310%" y="511.50"></text></g><g><title>core::hash::sip::u8to64_le (32 samples, 0.36%)</title><rect x="89.4490%" y="485" width="0.3569%" height="15" fill="rgb(252,51,52)" fg:x="8020" fg:w="32"/><text x="89.6990%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.07%)</title><rect x="89.8952%" y="581" width="0.0669%" height="15" fill="rgb(246,89,16)" fg:x="8060" fg:w="6"/><text x="90.1452%" y="591.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (6 samples, 0.07%)</title><rect x="89.8952%" y="565" width="0.0669%" height="15" fill="rgb(216,158,49)" fg:x="8060" fg:w="6"/><text x="90.1452%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (4 samples, 0.04%)</title><rect x="89.9621%" y="533" width="0.0446%" height="15" fill="rgb(236,107,19)" fg:x="8066" fg:w="4"/><text x="90.2121%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (4 samples, 0.04%)</title><rect x="89.9621%" y="517" width="0.0446%" height="15" fill="rgb(228,185,30)" fg:x="8066" fg:w="4"/><text x="90.2121%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (52 samples, 0.58%)</title><rect x="89.9621%" y="581" width="0.5800%" height="15" fill="rgb(246,134,8)" fg:x="8066" fg:w="52"/><text x="90.2121%" y="591.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (52 samples, 0.58%)</title><rect x="89.9621%" y="565" width="0.5800%" height="15" fill="rgb(214,143,50)" fg:x="8066" fg:w="52"/><text x="90.2121%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (52 samples, 0.58%)</title><rect x="89.9621%" y="549" width="0.5800%" height="15" fill="rgb(228,75,8)" fg:x="8066" fg:w="52"/><text x="90.2121%" y="559.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (48 samples, 0.54%)</title><rect x="90.0067%" y="533" width="0.5354%" height="15" fill="rgb(207,175,4)" fg:x="8070" fg:w="48"/><text x="90.2567%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (48 samples, 0.54%)</title><rect x="90.0067%" y="517" width="0.5354%" height="15" fill="rgb(205,108,24)" fg:x="8070" fg:w="48"/><text x="90.2567%" y="527.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (48 samples, 0.54%)</title><rect x="90.0067%" y="501" width="0.5354%" height="15" fill="rgb(244,120,49)" fg:x="8070" fg:w="48"/><text x="90.2567%" y="511.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (48 samples, 0.54%)</title><rect x="90.0067%" y="485" width="0.5354%" height="15" fill="rgb(223,47,38)" fg:x="8070" fg:w="48"/><text x="90.2567%" y="495.50"></text></g><g><title>__memcmp_avx2_movbe (44 samples, 0.49%)</title><rect x="90.0513%" y="469" width="0.4907%" height="15" fill="rgb(229,179,11)" fg:x="8074" fg:w="44"/><text x="90.3013%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (2 samples, 0.02%)</title><rect x="90.5420%" y="581" width="0.0223%" height="15" fill="rgb(231,122,1)" fg:x="8118" fg:w="2"/><text x="90.7920%" y="591.50"></text></g><g><title>hashbrown::raw::h2 (22 samples, 0.25%)</title><rect x="90.5644%" y="581" width="0.2454%" height="15" fill="rgb(245,119,9)" fg:x="8120" fg:w="22"/><text x="90.8144%" y="591.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (5 samples, 0.06%)</title><rect x="90.8097%" y="581" width="0.0558%" height="15" fill="rgb(241,163,25)" fg:x="8142" fg:w="5"/><text x="91.0597%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (5 samples, 0.06%)</title><rect x="90.8097%" y="565" width="0.0558%" height="15" fill="rgb(217,214,3)" fg:x="8142" fg:w="5"/><text x="91.0597%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.06%)</title><rect x="90.8097%" y="549" width="0.0558%" height="15" fill="rgb(240,86,28)" fg:x="8142" fg:w="5"/><text x="91.0597%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (97 samples, 1.08%)</title><rect x="89.8059%" y="629" width="1.0819%" height="15" fill="rgb(215,47,9)" fg:x="8052" fg:w="97"/><text x="90.0559%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (97 samples, 1.08%)</title><rect x="89.8059%" y="613" width="1.0819%" height="15" fill="rgb(252,25,45)" fg:x="8052" fg:w="97"/><text x="90.0559%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (97 samples, 1.08%)</title><rect x="89.8059%" y="597" width="1.0819%" height="15" fill="rgb(251,164,9)" fg:x="8052" fg:w="97"/><text x="90.0559%" y="607.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.02%)</title><rect x="90.8655%" y="581" width="0.0223%" height="15" fill="rgb(233,194,0)" fg:x="8147" fg:w="2"/><text x="91.1155%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.02%)</title><rect x="90.8655%" y="565" width="0.0223%" height="15" fill="rgb(249,111,24)" fg:x="8147" fg:w="2"/><text x="91.1155%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (325 samples, 3.62%)</title><rect x="87.2741%" y="693" width="3.6248%" height="15" fill="rgb(250,223,3)" fg:x="7825" fg:w="325"/><text x="87.5241%" y="703.50">&lt;std..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (325 samples, 3.62%)</title><rect x="87.2741%" y="677" width="3.6248%" height="15" fill="rgb(236,178,37)" fg:x="7825" fg:w="325"/><text x="87.5241%" y="687.50">std:..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (325 samples, 3.62%)</title><rect x="87.2741%" y="661" width="3.6248%" height="15" fill="rgb(241,158,50)" fg:x="7825" fg:w="325"/><text x="87.5241%" y="671.50">hash..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (325 samples, 3.62%)</title><rect x="87.2741%" y="645" width="3.6248%" height="15" fill="rgb(213,121,41)" fg:x="7825" fg:w="325"/><text x="87.5241%" y="655.50">hash..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::is_empty (1 samples, 0.01%)</title><rect x="90.8878%" y="629" width="0.0112%" height="15" fill="rgb(240,92,3)" fg:x="8149" fg:w="1"/><text x="91.1378%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="90.8990%" y="693" width="0.0112%" height="15" fill="rgb(205,123,3)" fg:x="8150" fg:w="1"/><text x="91.1490%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="90.8990%" y="677" width="0.0112%" height="15" fill="rgb(205,97,47)" fg:x="8150" fg:w="1"/><text x="91.1490%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="90.8990%" y="661" width="0.0112%" height="15" fill="rgb(247,152,14)" fg:x="8150" fg:w="1"/><text x="91.1490%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="90.8990%" y="645" width="0.0112%" height="15" fill="rgb(248,195,53)" fg:x="8150" fg:w="1"/><text x="91.1490%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="90.8990%" y="629" width="0.0112%" height="15" fill="rgb(226,201,16)" fg:x="8150" fg:w="1"/><text x="91.1490%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="90.8990%" y="613" width="0.0112%" height="15" fill="rgb(205,98,0)" fg:x="8150" fg:w="1"/><text x="91.1490%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="90.8990%" y="597" width="0.0112%" height="15" fill="rgb(214,191,48)" fg:x="8150" fg:w="1"/><text x="91.1490%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="90.8990%" y="581" width="0.0112%" height="15" fill="rgb(237,112,39)" fg:x="8150" fg:w="1"/><text x="91.1490%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="90.8990%" y="565" width="0.0112%" height="15" fill="rgb(247,203,27)" fg:x="8150" fg:w="1"/><text x="91.1490%" y="575.50"></text></g><g><title>nand2tetris::vm::&lt;impl nand2tetris::hardware::RAM&gt;::get (489 samples, 5.45%)</title><rect x="85.4673%" y="709" width="5.4539%" height="15" fill="rgb(235,124,28)" fg:x="7663" fg:w="489"/><text x="85.7173%" y="719.50">nand2te..</text></g><g><title>nand2tetris::vm::&lt;impl core::ops::index::Index&lt;nand2tetris::vm::Register&gt; for nand2tetris::hardware::RAM&gt;::index (1 samples, 0.01%)</title><rect x="90.9101%" y="693" width="0.0112%" height="15" fill="rgb(208,207,46)" fg:x="8151" fg:w="1"/><text x="91.1601%" y="703.50"></text></g><g><title>&lt;nand2tetris::hardware::RAM as core::ops::index::Index&lt;i16&gt;&gt;::index (1 samples, 0.01%)</title><rect x="90.9101%" y="677" width="0.0112%" height="15" fill="rgb(234,176,4)" fg:x="8151" fg:w="1"/><text x="91.1601%" y="687.50"></text></g><g><title>&lt;nand2tetris::hardware::RAM as core::ops::index::Index&lt;i16&gt;&gt;::index (25 samples, 0.28%)</title><rect x="91.3005%" y="693" width="0.2788%" height="15" fill="rgb(230,133,28)" fg:x="8186" fg:w="25"/><text x="91.5505%" y="703.50"></text></g><g><title>nand2tetris::vm::&lt;impl nand2tetris::hardware::RAM&gt;::pop (60 samples, 0.67%)</title><rect x="90.9213%" y="709" width="0.6692%" height="15" fill="rgb(211,137,40)" fg:x="8152" fg:w="60"/><text x="91.1713%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="91.5793%" y="693" width="0.0112%" height="15" fill="rgb(254,35,13)" fg:x="8211" fg:w="1"/><text x="91.8293%" y="703.50"></text></g><g><title>nand2tetris::vm::&lt;impl nand2tetris::hardware::RAM&gt;::push (92 samples, 1.03%)</title><rect x="91.5905%" y="709" width="1.0261%" height="15" fill="rgb(225,49,51)" fg:x="8212" fg:w="92"/><text x="91.8405%" y="719.50"></text></g><g><title>&lt;nand2tetris::hardware::RAM as core::ops::index::IndexMut&lt;i16&gt;&gt;::index_mut (1 samples, 0.01%)</title><rect x="92.6054%" y="693" width="0.0112%" height="15" fill="rgb(251,10,15)" fg:x="8303" fg:w="1"/><text x="92.8554%" y="703.50"></text></g><g><title>&lt;nand2tetris::hardware::RAM as core::ops::index::IndexMut&lt;i16&gt;&gt;::index_mut (10 samples, 0.11%)</title><rect x="92.9511%" y="693" width="0.1115%" height="15" fill="rgb(228,207,15)" fg:x="8334" fg:w="10"/><text x="93.2011%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="93.1073%" y="533" width="0.0223%" height="15" fill="rgb(241,99,19)" fg:x="8348" fg:w="2"/><text x="93.3573%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7 samples, 0.08%)</title><rect x="93.0961%" y="549" width="0.0781%" height="15" fill="rgb(207,104,49)" fg:x="8347" fg:w="7"/><text x="93.3461%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4 samples, 0.04%)</title><rect x="93.1296%" y="533" width="0.0446%" height="15" fill="rgb(234,99,18)" fg:x="8350" fg:w="4"/><text x="93.3796%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.06%)</title><rect x="93.1854%" y="533" width="0.0558%" height="15" fill="rgb(213,191,49)" fg:x="8355" fg:w="5"/><text x="93.4354%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (19 samples, 0.21%)</title><rect x="93.0627%" y="597" width="0.2119%" height="15" fill="rgb(210,226,19)" fg:x="8344" fg:w="19"/><text x="93.3127%" y="607.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (19 samples, 0.21%)</title><rect x="93.0627%" y="581" width="0.2119%" height="15" fill="rgb(229,97,18)" fg:x="8344" fg:w="19"/><text x="93.3127%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (19 samples, 0.21%)</title><rect x="93.0627%" y="565" width="0.2119%" height="15" fill="rgb(211,167,15)" fg:x="8344" fg:w="19"/><text x="93.3127%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (9 samples, 0.10%)</title><rect x="93.1742%" y="549" width="0.1004%" height="15" fill="rgb(210,169,34)" fg:x="8354" fg:w="9"/><text x="93.4242%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.03%)</title><rect x="93.2411%" y="533" width="0.0335%" height="15" fill="rgb(241,121,31)" fg:x="8360" fg:w="3"/><text x="93.4911%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (6 samples, 0.07%)</title><rect x="93.2746%" y="597" width="0.0669%" height="15" fill="rgb(232,40,11)" fg:x="8363" fg:w="6"/><text x="93.5246%" y="607.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (3 samples, 0.03%)</title><rect x="93.3081%" y="581" width="0.0335%" height="15" fill="rgb(205,86,26)" fg:x="8366" fg:w="3"/><text x="93.5581%" y="591.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.01%)</title><rect x="93.3304%" y="565" width="0.0112%" height="15" fill="rgb(231,126,28)" fg:x="8368" fg:w="1"/><text x="93.5804%" y="575.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.01%)</title><rect x="93.3304%" y="549" width="0.0112%" height="15" fill="rgb(219,221,18)" fg:x="8368" fg:w="1"/><text x="93.5804%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (10 samples, 0.11%)</title><rect x="93.3415%" y="549" width="0.1115%" height="15" fill="rgb(211,40,0)" fg:x="8369" fg:w="10"/><text x="93.5915%" y="559.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (10 samples, 0.11%)</title><rect x="93.3415%" y="533" width="0.1115%" height="15" fill="rgb(239,85,43)" fg:x="8369" fg:w="10"/><text x="93.5915%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10 samples, 0.11%)</title><rect x="93.3415%" y="517" width="0.1115%" height="15" fill="rgb(231,55,21)" fg:x="8369" fg:w="10"/><text x="93.5915%" y="527.50"></text></g><g><title>core::hash::sip::u8to64_le (8 samples, 0.09%)</title><rect x="93.3638%" y="501" width="0.0892%" height="15" fill="rgb(225,184,43)" fg:x="8371" fg:w="8"/><text x="93.6138%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="93.4419%" y="485" width="0.0112%" height="15" fill="rgb(251,158,41)" fg:x="8378" fg:w="1"/><text x="93.6919%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="93.5088%" y="469" width="0.0112%" height="15" fill="rgb(234,159,37)" fg:x="8384" fg:w="1"/><text x="93.7588%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.02%)</title><rect x="93.5088%" y="485" width="0.0223%" height="15" fill="rgb(216,204,22)" fg:x="8384" fg:w="2"/><text x="93.7588%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="93.5200%" y="469" width="0.0112%" height="15" fill="rgb(214,17,3)" fg:x="8385" fg:w="1"/><text x="93.7700%" y="479.50"></text></g><g><title>hashbrown::map::make_hash (47 samples, 0.52%)</title><rect x="93.0627%" y="629" width="0.5242%" height="15" fill="rgb(212,111,17)" fg:x="8344" fg:w="47"/><text x="93.3127%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (47 samples, 0.52%)</title><rect x="93.0627%" y="613" width="0.5242%" height="15" fill="rgb(221,157,24)" fg:x="8344" fg:w="47"/><text x="93.3127%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (22 samples, 0.25%)</title><rect x="93.3415%" y="597" width="0.2454%" height="15" fill="rgb(252,16,13)" fg:x="8369" fg:w="22"/><text x="93.5915%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (22 samples, 0.25%)</title><rect x="93.3415%" y="581" width="0.2454%" height="15" fill="rgb(221,62,2)" fg:x="8369" fg:w="22"/><text x="93.5915%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (22 samples, 0.25%)</title><rect x="93.3415%" y="565" width="0.2454%" height="15" fill="rgb(247,87,22)" fg:x="8369" fg:w="22"/><text x="93.5915%" y="575.50"></text></g><g><title>core::hash::Hasher::write_u8 (12 samples, 0.13%)</title><rect x="93.4530%" y="549" width="0.1338%" height="15" fill="rgb(215,73,9)" fg:x="8379" fg:w="12"/><text x="93.7030%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (10 samples, 0.11%)</title><rect x="93.4754%" y="533" width="0.1115%" height="15" fill="rgb(207,175,33)" fg:x="8381" fg:w="10"/><text x="93.7254%" y="543.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (10 samples, 0.11%)</title><rect x="93.4754%" y="517" width="0.1115%" height="15" fill="rgb(243,129,54)" fg:x="8381" fg:w="10"/><text x="93.7254%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10 samples, 0.11%)</title><rect x="93.4754%" y="501" width="0.1115%" height="15" fill="rgb(227,119,45)" fg:x="8381" fg:w="10"/><text x="93.7254%" y="511.50"></text></g><g><title>core::hash::sip::u8to64_le (5 samples, 0.06%)</title><rect x="93.5311%" y="485" width="0.0558%" height="15" fill="rgb(205,109,36)" fg:x="8386" fg:w="5"/><text x="93.7811%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="93.5980%" y="581" width="0.0112%" height="15" fill="rgb(205,6,39)" fg:x="8392" fg:w="1"/><text x="93.8480%" y="591.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.01%)</title><rect x="93.5980%" y="565" width="0.0112%" height="15" fill="rgb(221,32,16)" fg:x="8392" fg:w="1"/><text x="93.8480%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (11 samples, 0.12%)</title><rect x="93.6092%" y="581" width="0.1227%" height="15" fill="rgb(228,144,50)" fg:x="8393" fg:w="11"/><text x="93.8592%" y="591.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (11 samples, 0.12%)</title><rect x="93.6092%" y="565" width="0.1227%" height="15" fill="rgb(229,201,53)" fg:x="8393" fg:w="11"/><text x="93.8592%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (11 samples, 0.12%)</title><rect x="93.6092%" y="549" width="0.1227%" height="15" fill="rgb(249,153,27)" fg:x="8393" fg:w="11"/><text x="93.8592%" y="559.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (11 samples, 0.12%)</title><rect x="93.6092%" y="533" width="0.1227%" height="15" fill="rgb(227,106,25)" fg:x="8393" fg:w="11"/><text x="93.8592%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (11 samples, 0.12%)</title><rect x="93.6092%" y="517" width="0.1227%" height="15" fill="rgb(230,65,29)" fg:x="8393" fg:w="11"/><text x="93.8592%" y="527.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (11 samples, 0.12%)</title><rect x="93.6092%" y="501" width="0.1227%" height="15" fill="rgb(221,57,46)" fg:x="8393" fg:w="11"/><text x="93.8592%" y="511.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (11 samples, 0.12%)</title><rect x="93.6092%" y="485" width="0.1227%" height="15" fill="rgb(229,161,17)" fg:x="8393" fg:w="11"/><text x="93.8592%" y="495.50"></text></g><g><title>__memcmp_avx2_movbe (11 samples, 0.12%)</title><rect x="93.6092%" y="469" width="0.1227%" height="15" fill="rgb(222,213,11)" fg:x="8393" fg:w="11"/><text x="93.8592%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1 samples, 0.01%)</title><rect x="93.7319%" y="581" width="0.0112%" height="15" fill="rgb(235,35,13)" fg:x="8404" fg:w="1"/><text x="93.9819%" y="591.50"></text></g><g><title>hashbrown::raw::h2 (3 samples, 0.03%)</title><rect x="93.7430%" y="581" width="0.0335%" height="15" fill="rgb(233,158,34)" fg:x="8405" fg:w="3"/><text x="93.9930%" y="591.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (2 samples, 0.02%)</title><rect x="93.7765%" y="581" width="0.0223%" height="15" fill="rgb(215,151,48)" fg:x="8408" fg:w="2"/><text x="94.0265%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.02%)</title><rect x="93.7765%" y="565" width="0.0223%" height="15" fill="rgb(229,84,14)" fg:x="8408" fg:w="2"/><text x="94.0265%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="93.7765%" y="549" width="0.0223%" height="15" fill="rgb(229,68,14)" fg:x="8408" fg:w="2"/><text x="94.0265%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (67 samples, 0.75%)</title><rect x="93.0627%" y="693" width="0.7473%" height="15" fill="rgb(243,106,26)" fg:x="8344" fg:w="67"/><text x="93.3127%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (67 samples, 0.75%)</title><rect x="93.0627%" y="677" width="0.7473%" height="15" fill="rgb(206,45,38)" fg:x="8344" fg:w="67"/><text x="93.3127%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (67 samples, 0.75%)</title><rect x="93.0627%" y="661" width="0.7473%" height="15" fill="rgb(226,6,15)" fg:x="8344" fg:w="67"/><text x="93.3127%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (67 samples, 0.75%)</title><rect x="93.0627%" y="645" width="0.7473%" height="15" fill="rgb(232,22,54)" fg:x="8344" fg:w="67"/><text x="93.3127%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (20 samples, 0.22%)</title><rect x="93.5869%" y="629" width="0.2231%" height="15" fill="rgb(229,222,32)" fg:x="8391" fg:w="20"/><text x="93.8369%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (20 samples, 0.22%)</title><rect x="93.5869%" y="613" width="0.2231%" height="15" fill="rgb(228,62,29)" fg:x="8391" fg:w="20"/><text x="93.8369%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (20 samples, 0.22%)</title><rect x="93.5869%" y="597" width="0.2231%" height="15" fill="rgb(251,103,34)" fg:x="8391" fg:w="20"/><text x="93.8369%" y="607.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.01%)</title><rect x="93.7988%" y="581" width="0.0112%" height="15" fill="rgb(233,12,30)" fg:x="8410" fg:w="1"/><text x="94.0488%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.01%)</title><rect x="93.7988%" y="565" width="0.0112%" height="15" fill="rgb(238,52,0)" fg:x="8410" fg:w="1"/><text x="94.0488%" y="575.50"></text></g><g><title>nand2tetris::vm::&lt;impl nand2tetris::hardware::RAM&gt;::set (108 samples, 1.20%)</title><rect x="92.6166%" y="709" width="1.2046%" height="15" fill="rgb(223,98,5)" fg:x="8304" fg:w="108"/><text x="92.8666%" y="719.50"></text></g><g><title>nand2tetris::vm::&lt;impl core::ops::index::IndexMut&lt;nand2tetris::vm::Register&gt; for nand2tetris::hardware::RAM&gt;::index_mut (1 samples, 0.01%)</title><rect x="93.8099%" y="693" width="0.0112%" height="15" fill="rgb(228,75,37)" fg:x="8411" fg:w="1"/><text x="94.0599%" y="703.50"></text></g><g><title>&lt;nand2tetris::hardware::RAM as core::ops::index::IndexMut&lt;i16&gt;&gt;::index_mut (1 samples, 0.01%)</title><rect x="93.8099%" y="677" width="0.0112%" height="15" fill="rgb(205,115,49)" fg:x="8411" fg:w="1"/><text x="94.0599%" y="687.50"></text></g><g><title>nand2tetris::vm::VM::step (5,932 samples, 66.16%)</title><rect x="28.0504%" y="725" width="66.1611%" height="15" fill="rgb(250,154,43)" fg:x="2515" fg:w="5932"/><text x="28.3004%" y="735.50">nand2tetris::vm::VM::step</text></g><g><title>nand2tetris::vm::&lt;impl nand2tetris::hardware::RAM&gt;::stack_top (35 samples, 0.39%)</title><rect x="93.8211%" y="709" width="0.3904%" height="15" fill="rgb(226,43,29)" fg:x="8412" fg:w="35"/><text x="94.0711%" y="719.50"></text></g><g><title>&lt;nand2tetris::hardware::RAM as core::ops::index::IndexMut&lt;i16&gt;&gt;::index_mut (27 samples, 0.30%)</title><rect x="93.9103%" y="693" width="0.3011%" height="15" fill="rgb(249,228,39)" fg:x="8420" fg:w="27"/><text x="94.1603%" y="703.50"></text></g><g><title>sdl2::rect::Point::new (11 samples, 0.12%)</title><rect x="94.2115%" y="725" width="0.1227%" height="15" fill="rgb(216,79,43)" fg:x="8447" fg:w="11"/><text x="94.4615%" y="735.50"></text></g><g><title>sdl2::rect::clamp_position (9 samples, 0.10%)</title><rect x="94.2338%" y="709" width="0.1004%" height="15" fill="rgb(228,95,12)" fg:x="8449" fg:w="9"/><text x="94.4838%" y="719.50"></text></g><g><title>[libSDL2-2.0.so.0.10.0] (11 samples, 0.12%)</title><rect x="94.4457%" y="677" width="0.1227%" height="15" fill="rgb(249,221,15)" fg:x="8468" fg:w="11"/><text x="94.6957%" y="687.50"></text></g><g><title>[libSDL2-2.0.so.0.10.0] (1 samples, 0.01%)</title><rect x="94.5572%" y="661" width="0.0112%" height="15" fill="rgb(233,34,13)" fg:x="8478" fg:w="1"/><text x="94.8072%" y="671.50"></text></g><g><title>[libSDL2-2.0.so.0.10.0] (1 samples, 0.01%)</title><rect x="94.5572%" y="645" width="0.0112%" height="15" fill="rgb(214,103,39)" fg:x="8478" fg:w="1"/><text x="94.8072%" y="655.50"></text></g><g><title>sdl2::render::Canvas&lt;T&gt;::draw_points (22 samples, 0.25%)</title><rect x="94.3342%" y="725" width="0.2454%" height="15" fill="rgb(251,126,39)" fg:x="8458" fg:w="22"/><text x="94.5842%" y="735.50"></text></g><g><title>[libSDL2-2.0.so.0.10.0] (22 samples, 0.25%)</title><rect x="94.3342%" y="709" width="0.2454%" height="15" fill="rgb(214,216,36)" fg:x="8458" fg:w="22"/><text x="94.5842%" y="719.50"></text></g><g><title>[libSDL2-2.0.so.0.10.0] (12 samples, 0.13%)</title><rect x="94.4457%" y="693" width="0.1338%" height="15" fill="rgb(220,221,8)" fg:x="8468" fg:w="12"/><text x="94.6957%" y="703.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="94.5684%" y="677" width="0.0112%" height="15" fill="rgb(240,216,3)" fg:x="8479" fg:w="1"/><text x="94.8184%" y="687.50"></text></g><g><title>[libGLX_nvidia.so.470.103.01] (1 samples, 0.01%)</title><rect x="94.5795%" y="645" width="0.0112%" height="15" fill="rgb(232,218,17)" fg:x="8480" fg:w="1"/><text x="94.8295%" y="655.50"></text></g><g><title>[libGLX_nvidia.so.470.103.01] (1 samples, 0.01%)</title><rect x="94.5795%" y="629" width="0.0112%" height="15" fill="rgb(229,163,45)" fg:x="8480" fg:w="1"/><text x="94.8295%" y="639.50"></text></g><g><title>[libGLX_nvidia.so.470.103.01] (1 samples, 0.01%)</title><rect x="94.5795%" y="613" width="0.0112%" height="15" fill="rgb(231,110,42)" fg:x="8480" fg:w="1"/><text x="94.8295%" y="623.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="94.5795%" y="597" width="0.0112%" height="15" fill="rgb(208,170,48)" fg:x="8480" fg:w="1"/><text x="94.8295%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="94.5795%" y="581" width="0.0112%" height="15" fill="rgb(239,116,25)" fg:x="8480" fg:w="1"/><text x="94.8295%" y="591.50"></text></g><g><title>__GI___sched_yield (1 samples, 0.01%)</title><rect x="94.5795%" y="565" width="0.0112%" height="15" fill="rgb(219,200,50)" fg:x="8480" fg:w="1"/><text x="94.8295%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="94.5795%" y="549" width="0.0112%" height="15" fill="rgb(245,200,0)" fg:x="8480" fg:w="1"/><text x="94.8295%" y="559.50"></text></g><g><title>[libGLX_nvidia.so.470.103.01] (1 samples, 0.01%)</title><rect x="94.5907%" y="581" width="0.0112%" height="15" fill="rgb(245,119,33)" fg:x="8481" fg:w="1"/><text x="94.8407%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="94.6018%" y="565" width="0.0112%" height="15" fill="rgb(231,125,12)" fg:x="8482" fg:w="1"/><text x="94.8518%" y="575.50"></text></g><g><title>[libGLX_nvidia.so.470.103.01] (70 samples, 0.78%)</title><rect x="94.5907%" y="613" width="0.7807%" height="15" fill="rgb(216,96,41)" fg:x="8481" fg:w="70"/><text x="94.8407%" y="623.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (70 samples, 0.78%)</title><rect x="94.5907%" y="597" width="0.7807%" height="15" fill="rgb(248,43,45)" fg:x="8481" fg:w="70"/><text x="94.8407%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (69 samples, 0.77%)</title><rect x="94.6018%" y="581" width="0.7696%" height="15" fill="rgb(217,222,7)" fg:x="8482" fg:w="69"/><text x="94.8518%" y="591.50"></text></g><g><title>__GI___sched_yield (68 samples, 0.76%)</title><rect x="94.6130%" y="565" width="0.7584%" height="15" fill="rgb(233,28,6)" fg:x="8483" fg:w="68"/><text x="94.8630%" y="575.50"></text></g><g><title>[unknown] (67 samples, 0.75%)</title><rect x="94.6241%" y="549" width="0.7473%" height="15" fill="rgb(231,218,15)" fg:x="8484" fg:w="67"/><text x="94.8741%" y="559.50"></text></g><g><title>[unknown] (44 samples, 0.49%)</title><rect x="94.8807%" y="533" width="0.4907%" height="15" fill="rgb(226,171,48)" fg:x="8507" fg:w="44"/><text x="95.1307%" y="543.50"></text></g><g><title>[unknown] (41 samples, 0.46%)</title><rect x="94.9141%" y="517" width="0.4573%" height="15" fill="rgb(235,201,9)" fg:x="8510" fg:w="41"/><text x="95.1641%" y="527.50"></text></g><g><title>[unknown] (16 samples, 0.18%)</title><rect x="95.1930%" y="501" width="0.1785%" height="15" fill="rgb(217,80,15)" fg:x="8535" fg:w="16"/><text x="95.4430%" y="511.50"></text></g><g><title>[unknown] (12 samples, 0.13%)</title><rect x="95.2376%" y="485" width="0.1338%" height="15" fill="rgb(219,152,8)" fg:x="8539" fg:w="12"/><text x="95.4876%" y="495.50"></text></g><g><title>[unknown] (12 samples, 0.13%)</title><rect x="95.2376%" y="469" width="0.1338%" height="15" fill="rgb(243,107,38)" fg:x="8539" fg:w="12"/><text x="95.4876%" y="479.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="95.2487%" y="453" width="0.1227%" height="15" fill="rgb(231,17,5)" fg:x="8540" fg:w="11"/><text x="95.4987%" y="463.50"></text></g><g><title>[unknown] (7 samples, 0.08%)</title><rect x="95.2933%" y="437" width="0.0781%" height="15" fill="rgb(209,25,54)" fg:x="8544" fg:w="7"/><text x="95.5433%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="95.3491%" y="421" width="0.0223%" height="15" fill="rgb(219,0,2)" fg:x="8549" fg:w="2"/><text x="95.5991%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="95.3602%" y="405" width="0.0112%" height="15" fill="rgb(246,9,5)" fg:x="8550" fg:w="1"/><text x="95.6102%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="95.3602%" y="389" width="0.0112%" height="15" fill="rgb(226,159,4)" fg:x="8550" fg:w="1"/><text x="95.6102%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="95.3602%" y="373" width="0.0112%" height="15" fill="rgb(219,175,34)" fg:x="8550" fg:w="1"/><text x="95.6102%" y="383.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (5 samples, 0.06%)</title><rect x="95.3714%" y="517" width="0.0558%" height="15" fill="rgb(236,10,46)" fg:x="8551" fg:w="5"/><text x="95.6214%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (4 samples, 0.04%)</title><rect x="95.3826%" y="501" width="0.0446%" height="15" fill="rgb(240,211,16)" fg:x="8552" fg:w="4"/><text x="95.6326%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (4 samples, 0.04%)</title><rect x="95.3826%" y="485" width="0.0446%" height="15" fill="rgb(205,3,43)" fg:x="8552" fg:w="4"/><text x="95.6326%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (4 samples, 0.04%)</title><rect x="95.3826%" y="469" width="0.0446%" height="15" fill="rgb(245,7,22)" fg:x="8552" fg:w="4"/><text x="95.6326%" y="479.50"></text></g><g><title>__ioctl (3 samples, 0.03%)</title><rect x="95.3937%" y="453" width="0.0335%" height="15" fill="rgb(239,132,32)" fg:x="8553" fg:w="3"/><text x="95.6437%" y="463.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="95.3937%" y="437" width="0.0335%" height="15" fill="rgb(228,202,34)" fg:x="8553" fg:w="3"/><text x="95.6437%" y="447.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="95.3937%" y="421" width="0.0335%" height="15" fill="rgb(254,200,22)" fg:x="8553" fg:w="3"/><text x="95.6437%" y="431.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="95.3937%" y="405" width="0.0335%" height="15" fill="rgb(219,10,39)" fg:x="8553" fg:w="3"/><text x="95.6437%" y="415.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="95.3937%" y="389" width="0.0335%" height="15" fill="rgb(226,210,39)" fg:x="8553" fg:w="3"/><text x="95.6437%" y="399.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="95.3937%" y="373" width="0.0335%" height="15" fill="rgb(208,219,16)" fg:x="8553" fg:w="3"/><text x="95.6437%" y="383.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="95.3937%" y="357" width="0.0335%" height="15" fill="rgb(216,158,51)" fg:x="8553" fg:w="3"/><text x="95.6437%" y="367.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="95.3937%" y="341" width="0.0335%" height="15" fill="rgb(233,14,44)" fg:x="8553" fg:w="3"/><text x="95.6437%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="95.4049%" y="325" width="0.0223%" height="15" fill="rgb(237,97,39)" fg:x="8554" fg:w="2"/><text x="95.6549%" y="335.50"></text></g><g><title>[libGLX_nvidia.so.470.103.01] (77 samples, 0.86%)</title><rect x="94.5795%" y="693" width="0.8588%" height="15" fill="rgb(218,198,43)" fg:x="8480" fg:w="77"/><text x="94.8295%" y="703.50"></text></g><g><title>[libGLX_nvidia.so.470.103.01] (77 samples, 0.86%)</title><rect x="94.5795%" y="677" width="0.8588%" height="15" fill="rgb(231,104,20)" fg:x="8480" fg:w="77"/><text x="94.8295%" y="687.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (77 samples, 0.86%)</title><rect x="94.5795%" y="661" width="0.8588%" height="15" fill="rgb(254,36,13)" fg:x="8480" fg:w="77"/><text x="94.8295%" y="671.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (76 samples, 0.85%)</title><rect x="94.5907%" y="645" width="0.8476%" height="15" fill="rgb(248,14,50)" fg:x="8481" fg:w="76"/><text x="94.8407%" y="655.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (76 samples, 0.85%)</title><rect x="94.5907%" y="629" width="0.8476%" height="15" fill="rgb(217,107,29)" fg:x="8481" fg:w="76"/><text x="94.8407%" y="639.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (6 samples, 0.07%)</title><rect x="95.3714%" y="613" width="0.0669%" height="15" fill="rgb(251,169,33)" fg:x="8551" fg:w="6"/><text x="95.6214%" y="623.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (6 samples, 0.07%)</title><rect x="95.3714%" y="597" width="0.0669%" height="15" fill="rgb(217,108,32)" fg:x="8551" fg:w="6"/><text x="95.6214%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (6 samples, 0.07%)</title><rect x="95.3714%" y="581" width="0.0669%" height="15" fill="rgb(219,66,42)" fg:x="8551" fg:w="6"/><text x="95.6214%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (6 samples, 0.07%)</title><rect x="95.3714%" y="565" width="0.0669%" height="15" fill="rgb(206,180,7)" fg:x="8551" fg:w="6"/><text x="95.6214%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (6 samples, 0.07%)</title><rect x="95.3714%" y="549" width="0.0669%" height="15" fill="rgb(208,226,31)" fg:x="8551" fg:w="6"/><text x="95.6214%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (6 samples, 0.07%)</title><rect x="95.3714%" y="533" width="0.0669%" height="15" fill="rgb(218,26,49)" fg:x="8551" fg:w="6"/><text x="95.6214%" y="543.50"></text></g><g><title>__memset_avx2_unaligned_erms (1 samples, 0.01%)</title><rect x="95.4272%" y="517" width="0.0112%" height="15" fill="rgb(233,197,48)" fg:x="8556" fg:w="1"/><text x="95.6772%" y="527.50"></text></g><g><title>[libSDL2-2.0.so.0.10.0] (1 samples, 0.01%)</title><rect x="95.4606%" y="661" width="0.0112%" height="15" fill="rgb(252,181,51)" fg:x="8559" fg:w="1"/><text x="95.7106%" y="671.50"></text></g><g><title>[libSDL2-2.0.so.0.10.0] (1 samples, 0.01%)</title><rect x="95.4606%" y="645" width="0.0112%" height="15" fill="rgb(253,90,19)" fg:x="8559" fg:w="1"/><text x="95.7106%" y="655.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="95.8733%" y="389" width="0.0112%" height="15" fill="rgb(215,171,30)" fg:x="8596" fg:w="1"/><text x="96.1233%" y="399.50"></text></g><g><title>__ioctl (1 samples, 0.01%)</title><rect x="95.8733%" y="373" width="0.0112%" height="15" fill="rgb(214,222,9)" fg:x="8596" fg:w="1"/><text x="96.1233%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="95.8733%" y="357" width="0.0112%" height="15" fill="rgb(223,3,22)" fg:x="8596" fg:w="1"/><text x="96.1233%" y="367.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.01%)</title><rect x="95.8845%" y="389" width="0.0112%" height="15" fill="rgb(225,196,46)" fg:x="8597" fg:w="1"/><text x="96.1345%" y="399.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.01%)</title><rect x="95.8845%" y="373" width="0.0112%" height="15" fill="rgb(209,110,37)" fg:x="8597" fg:w="1"/><text x="96.1345%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="95.8845%" y="357" width="0.0112%" height="15" fill="rgb(249,89,12)" fg:x="8597" fg:w="1"/><text x="96.1345%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="95.8845%" y="341" width="0.0112%" height="15" fill="rgb(226,27,33)" fg:x="8597" fg:w="1"/><text x="96.1345%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="95.8845%" y="325" width="0.0112%" height="15" fill="rgb(213,82,22)" fg:x="8597" fg:w="1"/><text x="96.1345%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="95.8845%" y="309" width="0.0112%" height="15" fill="rgb(248,140,0)" fg:x="8597" fg:w="1"/><text x="96.1345%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="95.8845%" y="293" width="0.0112%" height="15" fill="rgb(228,106,3)" fg:x="8597" fg:w="1"/><text x="96.1345%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="95.8845%" y="277" width="0.0112%" height="15" fill="rgb(209,23,37)" fg:x="8597" fg:w="1"/><text x="96.1345%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="95.8845%" y="261" width="0.0112%" height="15" fill="rgb(241,93,50)" fg:x="8597" fg:w="1"/><text x="96.1345%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="95.8845%" y="245" width="0.0112%" height="15" fill="rgb(253,46,43)" fg:x="8597" fg:w="1"/><text x="96.1345%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="95.8845%" y="229" width="0.0112%" height="15" fill="rgb(226,206,43)" fg:x="8597" fg:w="1"/><text x="96.1345%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="95.8845%" y="213" width="0.0112%" height="15" fill="rgb(217,54,7)" fg:x="8597" fg:w="1"/><text x="96.1345%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="95.8845%" y="197" width="0.0112%" height="15" fill="rgb(223,5,52)" fg:x="8597" fg:w="1"/><text x="96.1345%" y="207.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (8 samples, 0.09%)</title><rect x="95.8621%" y="421" width="0.0892%" height="15" fill="rgb(206,52,46)" fg:x="8595" fg:w="8"/><text x="96.1121%" y="431.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (8 samples, 0.09%)</title><rect x="95.8621%" y="405" width="0.0892%" height="15" fill="rgb(253,136,11)" fg:x="8595" fg:w="8"/><text x="96.1121%" y="415.50"></text></g><g><title>__ioctl (5 samples, 0.06%)</title><rect x="95.8956%" y="389" width="0.0558%" height="15" fill="rgb(208,106,33)" fg:x="8598" fg:w="5"/><text x="96.1456%" y="399.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="95.8956%" y="373" width="0.0558%" height="15" fill="rgb(206,54,4)" fg:x="8598" fg:w="5"/><text x="96.1456%" y="383.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="95.8956%" y="357" width="0.0558%" height="15" fill="rgb(213,3,15)" fg:x="8598" fg:w="5"/><text x="96.1456%" y="367.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="95.8956%" y="341" width="0.0558%" height="15" fill="rgb(252,211,39)" fg:x="8598" fg:w="5"/><text x="96.1456%" y="351.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="95.9179%" y="325" width="0.0335%" height="15" fill="rgb(223,6,36)" fg:x="8600" fg:w="3"/><text x="96.1679%" y="335.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="95.9179%" y="309" width="0.0335%" height="15" fill="rgb(252,169,45)" fg:x="8600" fg:w="3"/><text x="96.1679%" y="319.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="95.9179%" y="293" width="0.0335%" height="15" fill="rgb(212,48,26)" fg:x="8600" fg:w="3"/><text x="96.1679%" y="303.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="95.9179%" y="277" width="0.0335%" height="15" fill="rgb(251,102,48)" fg:x="8600" fg:w="3"/><text x="96.1679%" y="287.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (18 samples, 0.20%)</title><rect x="95.7618%" y="597" width="0.2008%" height="15" fill="rgb(243,208,16)" fg:x="8586" fg:w="18"/><text x="96.0118%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (9 samples, 0.10%)</title><rect x="95.8621%" y="581" width="0.1004%" height="15" fill="rgb(219,96,24)" fg:x="8595" fg:w="9"/><text x="96.1121%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (9 samples, 0.10%)</title><rect x="95.8621%" y="565" width="0.1004%" height="15" fill="rgb(219,33,29)" fg:x="8595" fg:w="9"/><text x="96.1121%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (9 samples, 0.10%)</title><rect x="95.8621%" y="549" width="0.1004%" height="15" fill="rgb(223,176,5)" fg:x="8595" fg:w="9"/><text x="96.1121%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (9 samples, 0.10%)</title><rect x="95.8621%" y="533" width="0.1004%" height="15" fill="rgb(228,140,14)" fg:x="8595" fg:w="9"/><text x="96.1121%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (9 samples, 0.10%)</title><rect x="95.8621%" y="517" width="0.1004%" height="15" fill="rgb(217,179,31)" fg:x="8595" fg:w="9"/><text x="96.1121%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (9 samples, 0.10%)</title><rect x="95.8621%" y="501" width="0.1004%" height="15" fill="rgb(230,9,30)" fg:x="8595" fg:w="9"/><text x="96.1121%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (9 samples, 0.10%)</title><rect x="95.8621%" y="485" width="0.1004%" height="15" fill="rgb(230,136,20)" fg:x="8595" fg:w="9"/><text x="96.1121%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (9 samples, 0.10%)</title><rect x="95.8621%" y="469" width="0.1004%" height="15" fill="rgb(215,210,22)" fg:x="8595" fg:w="9"/><text x="96.1121%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (9 samples, 0.10%)</title><rect x="95.8621%" y="453" width="0.1004%" height="15" fill="rgb(218,43,5)" fg:x="8595" fg:w="9"/><text x="96.1121%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (9 samples, 0.10%)</title><rect x="95.8621%" y="437" width="0.1004%" height="15" fill="rgb(216,11,5)" fg:x="8595" fg:w="9"/><text x="96.1121%" y="447.50"></text></g><g><title>__ioctl (1 samples, 0.01%)</title><rect x="95.9514%" y="421" width="0.0112%" height="15" fill="rgb(209,82,29)" fg:x="8603" fg:w="1"/><text x="96.2014%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="95.9514%" y="405" width="0.0112%" height="15" fill="rgb(244,115,12)" fg:x="8603" fg:w="1"/><text x="96.2014%" y="415.50"></text></g><g><title>[libSDL2-2.0.so.0.10.0] (48 samples, 0.54%)</title><rect x="95.4383%" y="693" width="0.5354%" height="15" fill="rgb(222,82,18)" fg:x="8557" fg:w="48"/><text x="95.6883%" y="703.50"></text></g><g><title>[libSDL2-2.0.so.0.10.0] (48 samples, 0.54%)</title><rect x="95.4383%" y="677" width="0.5354%" height="15" fill="rgb(249,227,8)" fg:x="8557" fg:w="48"/><text x="95.6883%" y="687.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (45 samples, 0.50%)</title><rect x="95.4718%" y="661" width="0.5019%" height="15" fill="rgb(253,141,45)" fg:x="8560" fg:w="45"/><text x="95.7218%" y="671.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (25 samples, 0.28%)</title><rect x="95.6948%" y="645" width="0.2788%" height="15" fill="rgb(234,184,4)" fg:x="8580" fg:w="25"/><text x="95.9448%" y="655.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (23 samples, 0.26%)</title><rect x="95.7172%" y="629" width="0.2565%" height="15" fill="rgb(218,194,23)" fg:x="8582" fg:w="23"/><text x="95.9672%" y="639.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (21 samples, 0.23%)</title><rect x="95.7395%" y="613" width="0.2342%" height="15" fill="rgb(235,66,41)" fg:x="8584" fg:w="21"/><text x="95.9895%" y="623.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="95.9625%" y="597" width="0.0112%" height="15" fill="rgb(245,217,1)" fg:x="8604" fg:w="1"/><text x="96.2125%" y="607.50"></text></g><g><title>[libGLX.so.0.0.0] (2 samples, 0.02%)</title><rect x="95.9737%" y="677" width="0.0223%" height="15" fill="rgb(229,91,1)" fg:x="8605" fg:w="2"/><text x="96.2237%" y="687.50"></text></g><g><title>[libGLX.so.0.0.0] (2 samples, 0.02%)</title><rect x="95.9737%" y="661" width="0.0223%" height="15" fill="rgb(207,101,30)" fg:x="8605" fg:w="2"/><text x="96.2237%" y="671.50"></text></g><g><title>__GI___getpid (2 samples, 0.02%)</title><rect x="95.9737%" y="645" width="0.0223%" height="15" fill="rgb(223,82,49)" fg:x="8605" fg:w="2"/><text x="96.2237%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="95.9848%" y="629" width="0.0112%" height="15" fill="rgb(218,167,17)" fg:x="8606" fg:w="1"/><text x="96.2348%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="95.9848%" y="613" width="0.0112%" height="15" fill="rgb(208,103,14)" fg:x="8606" fg:w="1"/><text x="96.2348%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="95.9848%" y="597" width="0.0112%" height="15" fill="rgb(238,20,8)" fg:x="8606" fg:w="1"/><text x="96.2348%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (4 samples, 0.04%)</title><rect x="95.9960%" y="629" width="0.0446%" height="15" fill="rgb(218,80,54)" fg:x="8607" fg:w="4"/><text x="96.2460%" y="639.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (2 samples, 0.02%)</title><rect x="96.0183%" y="613" width="0.0223%" height="15" fill="rgb(240,144,17)" fg:x="8609" fg:w="2"/><text x="96.2683%" y="623.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (2 samples, 0.02%)</title><rect x="96.0183%" y="597" width="0.0223%" height="15" fill="rgb(245,27,50)" fg:x="8609" fg:w="2"/><text x="96.2683%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (2 samples, 0.02%)</title><rect x="96.0183%" y="581" width="0.0223%" height="15" fill="rgb(251,51,7)" fg:x="8609" fg:w="2"/><text x="96.2683%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.0294%" y="565" width="0.0112%" height="15" fill="rgb(245,217,29)" fg:x="8610" fg:w="1"/><text x="96.2794%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.0294%" y="549" width="0.0112%" height="15" fill="rgb(221,176,29)" fg:x="8610" fg:w="1"/><text x="96.2794%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.0294%" y="533" width="0.0112%" height="15" fill="rgb(212,180,24)" fg:x="8610" fg:w="1"/><text x="96.2794%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.0294%" y="517" width="0.0112%" height="15" fill="rgb(254,24,2)" fg:x="8610" fg:w="1"/><text x="96.2794%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.0294%" y="501" width="0.0112%" height="15" fill="rgb(230,100,2)" fg:x="8610" fg:w="1"/><text x="96.2794%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.0294%" y="485" width="0.0112%" height="15" fill="rgb(219,142,25)" fg:x="8610" fg:w="1"/><text x="96.2794%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.0294%" y="469" width="0.0112%" height="15" fill="rgb(240,73,43)" fg:x="8610" fg:w="1"/><text x="96.2794%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.0294%" y="453" width="0.0112%" height="15" fill="rgb(214,114,15)" fg:x="8610" fg:w="1"/><text x="96.2794%" y="463.50"></text></g><g><title>__ioctl (1 samples, 0.01%)</title><rect x="96.0294%" y="437" width="0.0112%" height="15" fill="rgb(207,130,4)" fg:x="8610" fg:w="1"/><text x="96.2794%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.0294%" y="421" width="0.0112%" height="15" fill="rgb(221,25,40)" fg:x="8610" fg:w="1"/><text x="96.2794%" y="431.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (5 samples, 0.06%)</title><rect x="95.9960%" y="645" width="0.0558%" height="15" fill="rgb(241,184,7)" fg:x="8607" fg:w="5"/><text x="96.2460%" y="655.50"></text></g><g><title>syscall (1 samples, 0.01%)</title><rect x="96.0406%" y="629" width="0.0112%" height="15" fill="rgb(235,159,4)" fg:x="8611" fg:w="1"/><text x="96.2906%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.0406%" y="613" width="0.0112%" height="15" fill="rgb(214,87,48)" fg:x="8611" fg:w="1"/><text x="96.2906%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.0406%" y="597" width="0.0112%" height="15" fill="rgb(246,198,24)" fg:x="8611" fg:w="1"/><text x="96.2906%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.0406%" y="581" width="0.0112%" height="15" fill="rgb(209,66,40)" fg:x="8611" fg:w="1"/><text x="96.2906%" y="591.50"></text></g><g><title>sdl2::render::Canvas&lt;T&gt;::present (133 samples, 1.48%)</title><rect x="94.5795%" y="725" width="1.4834%" height="15" fill="rgb(233,147,39)" fg:x="8480" fg:w="133"/><text x="94.8295%" y="735.50"></text></g><g><title>[libSDL2-2.0.so.0.10.0] (133 samples, 1.48%)</title><rect x="94.5795%" y="709" width="1.4834%" height="15" fill="rgb(231,145,52)" fg:x="8480" fg:w="133"/><text x="94.8295%" y="719.50"></text></g><g><title>glXSwapBuffers (8 samples, 0.09%)</title><rect x="95.9737%" y="693" width="0.0892%" height="15" fill="rgb(206,20,26)" fg:x="8605" fg:w="8"/><text x="96.2237%" y="703.50"></text></g><g><title>[libGLX_nvidia.so.470.103.01] (6 samples, 0.07%)</title><rect x="95.9960%" y="677" width="0.0669%" height="15" fill="rgb(238,220,4)" fg:x="8607" fg:w="6"/><text x="96.2460%" y="687.50"></text></g><g><title>[libGLX_nvidia.so.470.103.01] (6 samples, 0.07%)</title><rect x="95.9960%" y="661" width="0.0669%" height="15" fill="rgb(252,195,42)" fg:x="8607" fg:w="6"/><text x="96.2460%" y="671.50"></text></g><g><title>__GI___poll (1 samples, 0.01%)</title><rect x="96.0518%" y="645" width="0.0112%" height="15" fill="rgb(209,10,6)" fg:x="8612" fg:w="1"/><text x="96.3018%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.0518%" y="629" width="0.0112%" height="15" fill="rgb(229,3,52)" fg:x="8612" fg:w="1"/><text x="96.3018%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.0518%" y="613" width="0.0112%" height="15" fill="rgb(253,49,37)" fg:x="8612" fg:w="1"/><text x="96.3018%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.0518%" y="597" width="0.0112%" height="15" fill="rgb(240,103,49)" fg:x="8612" fg:w="1"/><text x="96.3018%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.0518%" y="581" width="0.0112%" height="15" fill="rgb(250,182,30)" fg:x="8612" fg:w="1"/><text x="96.3018%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.0518%" y="565" width="0.0112%" height="15" fill="rgb(248,8,30)" fg:x="8612" fg:w="1"/><text x="96.3018%" y="575.50"></text></g><g><title>[libGLX_nvidia.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.0629%" y="645" width="0.0112%" height="15" fill="rgb(237,120,30)" fg:x="8613" fg:w="1"/><text x="96.3129%" y="655.50"></text></g><g><title>_XReply (1 samples, 0.01%)</title><rect x="96.0629%" y="629" width="0.0112%" height="15" fill="rgb(221,146,34)" fg:x="8613" fg:w="1"/><text x="96.3129%" y="639.50"></text></g><g><title>_XSend (1 samples, 0.01%)</title><rect x="96.0629%" y="613" width="0.0112%" height="15" fill="rgb(242,55,13)" fg:x="8613" fg:w="1"/><text x="96.3129%" y="623.50"></text></g><g><title>xcb_writev (1 samples, 0.01%)</title><rect x="96.0629%" y="597" width="0.0112%" height="15" fill="rgb(242,112,31)" fg:x="8613" fg:w="1"/><text x="96.3129%" y="607.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.01%)</title><rect x="96.0629%" y="581" width="0.0112%" height="15" fill="rgb(249,192,27)" fg:x="8613" fg:w="1"/><text x="96.3129%" y="591.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.01%)</title><rect x="96.0629%" y="565" width="0.0112%" height="15" fill="rgb(208,204,44)" fg:x="8613" fg:w="1"/><text x="96.3129%" y="575.50"></text></g><g><title>__GI___writev (1 samples, 0.01%)</title><rect x="96.0629%" y="549" width="0.0112%" height="15" fill="rgb(208,93,54)" fg:x="8613" fg:w="1"/><text x="96.3129%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.0629%" y="533" width="0.0112%" height="15" fill="rgb(242,1,31)" fg:x="8613" fg:w="1"/><text x="96.3129%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.0629%" y="517" width="0.0112%" height="15" fill="rgb(241,83,25)" fg:x="8613" fg:w="1"/><text x="96.3129%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.0629%" y="501" width="0.0112%" height="15" fill="rgb(205,169,50)" fg:x="8613" fg:w="1"/><text x="96.3129%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.0629%" y="485" width="0.0112%" height="15" fill="rgb(239,186,37)" fg:x="8613" fg:w="1"/><text x="96.3129%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.0629%" y="469" width="0.0112%" height="15" fill="rgb(205,221,10)" fg:x="8613" fg:w="1"/><text x="96.3129%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.0629%" y="453" width="0.0112%" height="15" fill="rgb(218,196,15)" fg:x="8613" fg:w="1"/><text x="96.3129%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.0629%" y="437" width="0.0112%" height="15" fill="rgb(218,196,35)" fg:x="8613" fg:w="1"/><text x="96.3129%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.0629%" y="421" width="0.0112%" height="15" fill="rgb(233,63,24)" fg:x="8613" fg:w="1"/><text x="96.3129%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.0629%" y="405" width="0.0112%" height="15" fill="rgb(225,8,4)" fg:x="8613" fg:w="1"/><text x="96.3129%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.0629%" y="389" width="0.0112%" height="15" fill="rgb(234,105,35)" fg:x="8613" fg:w="1"/><text x="96.3129%" y="399.50"></text></g><g><title>[libGLX_nvidia.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.0741%" y="549" width="0.0112%" height="15" fill="rgb(236,21,32)" fg:x="8614" fg:w="1"/><text x="96.3241%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.0741%" y="533" width="0.0112%" height="15" fill="rgb(228,109,6)" fg:x="8614" fg:w="1"/><text x="96.3241%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.0741%" y="517" width="0.0112%" height="15" fill="rgb(229,215,31)" fg:x="8614" fg:w="1"/><text x="96.3241%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.0741%" y="501" width="0.0112%" height="15" fill="rgb(221,52,54)" fg:x="8614" fg:w="1"/><text x="96.3241%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.0741%" y="485" width="0.0112%" height="15" fill="rgb(252,129,43)" fg:x="8614" fg:w="1"/><text x="96.3241%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.0741%" y="469" width="0.0112%" height="15" fill="rgb(248,183,27)" fg:x="8614" fg:w="1"/><text x="96.3241%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.0741%" y="453" width="0.0112%" height="15" fill="rgb(250,0,22)" fg:x="8614" fg:w="1"/><text x="96.3241%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.0741%" y="437" width="0.0112%" height="15" fill="rgb(213,166,10)" fg:x="8614" fg:w="1"/><text x="96.3241%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.0741%" y="421" width="0.0112%" height="15" fill="rgb(207,163,36)" fg:x="8614" fg:w="1"/><text x="96.3241%" y="431.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.0741%" y="405" width="0.0112%" height="15" fill="rgb(208,122,22)" fg:x="8614" fg:w="1"/><text x="96.3241%" y="415.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.0741%" y="389" width="0.0112%" height="15" fill="rgb(207,104,49)" fg:x="8614" fg:w="1"/><text x="96.3241%" y="399.50"></text></g><g><title>__ioctl (1 samples, 0.01%)</title><rect x="96.0741%" y="373" width="0.0112%" height="15" fill="rgb(248,211,50)" fg:x="8614" fg:w="1"/><text x="96.3241%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.0741%" y="357" width="0.0112%" height="15" fill="rgb(217,13,45)" fg:x="8614" fg:w="1"/><text x="96.3241%" y="367.50"></text></g><g><title>[libGLX_nvidia.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.0852%" y="485" width="0.0112%" height="15" fill="rgb(211,216,49)" fg:x="8615" fg:w="1"/><text x="96.3352%" y="495.50"></text></g><g><title>[libGLX_nvidia.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.0852%" y="469" width="0.0112%" height="15" fill="rgb(221,58,53)" fg:x="8615" fg:w="1"/><text x="96.3352%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.0852%" y="453" width="0.0112%" height="15" fill="rgb(220,112,41)" fg:x="8615" fg:w="1"/><text x="96.3352%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.0852%" y="437" width="0.0112%" height="15" fill="rgb(236,38,28)" fg:x="8615" fg:w="1"/><text x="96.3352%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.0852%" y="421" width="0.0112%" height="15" fill="rgb(227,195,22)" fg:x="8615" fg:w="1"/><text x="96.3352%" y="431.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.0852%" y="405" width="0.0112%" height="15" fill="rgb(214,55,33)" fg:x="8615" fg:w="1"/><text x="96.3352%" y="415.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.0852%" y="389" width="0.0112%" height="15" fill="rgb(248,80,13)" fg:x="8615" fg:w="1"/><text x="96.3352%" y="399.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.0852%" y="373" width="0.0112%" height="15" fill="rgb(238,52,6)" fg:x="8615" fg:w="1"/><text x="96.3352%" y="383.50"></text></g><g><title>__ioctl (1 samples, 0.01%)</title><rect x="96.0852%" y="357" width="0.0112%" height="15" fill="rgb(224,198,47)" fg:x="8615" fg:w="1"/><text x="96.3352%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.0852%" y="341" width="0.0112%" height="15" fill="rgb(233,171,20)" fg:x="8615" fg:w="1"/><text x="96.3352%" y="351.50"></text></g><g><title>[libSDL2-2.0.so.0.10.0] (4 samples, 0.04%)</title><rect x="96.0629%" y="661" width="0.0446%" height="15" fill="rgb(241,30,25)" fg:x="8613" fg:w="4"/><text x="96.3129%" y="671.50"></text></g><g><title>[libSDL2-2.0.so.0.10.0] (3 samples, 0.03%)</title><rect x="96.0741%" y="645" width="0.0335%" height="15" fill="rgb(207,171,38)" fg:x="8614" fg:w="3"/><text x="96.3241%" y="655.50"></text></g><g><title>[libGLX.so.0.0.0] (3 samples, 0.03%)</title><rect x="96.0741%" y="629" width="0.0335%" height="15" fill="rgb(234,70,1)" fg:x="8614" fg:w="3"/><text x="96.3241%" y="639.50"></text></g><g><title>[libGLX.so.0.0.0] (3 samples, 0.03%)</title><rect x="96.0741%" y="613" width="0.0335%" height="15" fill="rgb(232,178,18)" fg:x="8614" fg:w="3"/><text x="96.3241%" y="623.50"></text></g><g><title>[libGLX.so.0.0.0] (3 samples, 0.03%)</title><rect x="96.0741%" y="597" width="0.0335%" height="15" fill="rgb(241,78,40)" fg:x="8614" fg:w="3"/><text x="96.3241%" y="607.50"></text></g><g><title>[libGLX_nvidia.so.470.103.01] (3 samples, 0.03%)</title><rect x="96.0741%" y="581" width="0.0335%" height="15" fill="rgb(222,35,25)" fg:x="8614" fg:w="3"/><text x="96.3241%" y="591.50"></text></g><g><title>[libGLX_nvidia.so.470.103.01] (3 samples, 0.03%)</title><rect x="96.0741%" y="565" width="0.0335%" height="15" fill="rgb(207,92,16)" fg:x="8614" fg:w="3"/><text x="96.3241%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (2 samples, 0.02%)</title><rect x="96.0852%" y="549" width="0.0223%" height="15" fill="rgb(216,59,51)" fg:x="8615" fg:w="2"/><text x="96.3352%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (2 samples, 0.02%)</title><rect x="96.0852%" y="533" width="0.0223%" height="15" fill="rgb(213,80,28)" fg:x="8615" fg:w="2"/><text x="96.3352%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (2 samples, 0.02%)</title><rect x="96.0852%" y="517" width="0.0223%" height="15" fill="rgb(220,93,7)" fg:x="8615" fg:w="2"/><text x="96.3352%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (2 samples, 0.02%)</title><rect x="96.0852%" y="501" width="0.0223%" height="15" fill="rgb(225,24,44)" fg:x="8615" fg:w="2"/><text x="96.3352%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.0964%" y="485" width="0.0112%" height="15" fill="rgb(243,74,40)" fg:x="8616" fg:w="1"/><text x="96.3464%" y="495.50"></text></g><g><title>sdl2::render::CanvasBuilder::build (6 samples, 0.07%)</title><rect x="96.0629%" y="725" width="0.0669%" height="15" fill="rgb(228,39,7)" fg:x="8613" fg:w="6"/><text x="96.3129%" y="735.50"></text></g><g><title>[libSDL2-2.0.so.0.10.0] (6 samples, 0.07%)</title><rect x="96.0629%" y="709" width="0.0669%" height="15" fill="rgb(227,79,8)" fg:x="8613" fg:w="6"/><text x="96.3129%" y="719.50"></text></g><g><title>[libSDL2-2.0.so.0.10.0] (6 samples, 0.07%)</title><rect x="96.0629%" y="693" width="0.0669%" height="15" fill="rgb(236,58,11)" fg:x="8613" fg:w="6"/><text x="96.3129%" y="703.50"></text></g><g><title>[libSDL2-2.0.so.0.10.0] (6 samples, 0.07%)</title><rect x="96.0629%" y="677" width="0.0669%" height="15" fill="rgb(249,63,35)" fg:x="8613" fg:w="6"/><text x="96.3129%" y="687.50"></text></g><g><title>glXSwapIntervalEXT (2 samples, 0.02%)</title><rect x="96.1075%" y="661" width="0.0223%" height="15" fill="rgb(252,114,16)" fg:x="8617" fg:w="2"/><text x="96.3575%" y="671.50"></text></g><g><title>[libGLX_nvidia.so.470.103.01] (2 samples, 0.02%)</title><rect x="96.1075%" y="645" width="0.0223%" height="15" fill="rgb(254,151,24)" fg:x="8617" fg:w="2"/><text x="96.3575%" y="655.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (2 samples, 0.02%)</title><rect x="96.1075%" y="629" width="0.0223%" height="15" fill="rgb(253,54,39)" fg:x="8617" fg:w="2"/><text x="96.3575%" y="639.50"></text></g><g><title>[libGLX_nvidia.so.470.103.01] (2 samples, 0.02%)</title><rect x="96.1075%" y="613" width="0.0223%" height="15" fill="rgb(243,25,45)" fg:x="8617" fg:w="2"/><text x="96.3575%" y="623.50"></text></g><g><title>[libGLX_nvidia.so.470.103.01] (2 samples, 0.02%)</title><rect x="96.1075%" y="597" width="0.0223%" height="15" fill="rgb(234,134,9)" fg:x="8617" fg:w="2"/><text x="96.3575%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (2 samples, 0.02%)</title><rect x="96.1075%" y="581" width="0.0223%" height="15" fill="rgb(227,166,31)" fg:x="8617" fg:w="2"/><text x="96.3575%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (2 samples, 0.02%)</title><rect x="96.1075%" y="565" width="0.0223%" height="15" fill="rgb(245,143,41)" fg:x="8617" fg:w="2"/><text x="96.3575%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (2 samples, 0.02%)</title><rect x="96.1075%" y="549" width="0.0223%" height="15" fill="rgb(238,181,32)" fg:x="8617" fg:w="2"/><text x="96.3575%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (2 samples, 0.02%)</title><rect x="96.1075%" y="533" width="0.0223%" height="15" fill="rgb(224,113,18)" fg:x="8617" fg:w="2"/><text x="96.3575%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (2 samples, 0.02%)</title><rect x="96.1075%" y="517" width="0.0223%" height="15" fill="rgb(240,229,28)" fg:x="8617" fg:w="2"/><text x="96.3575%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (2 samples, 0.02%)</title><rect x="96.1075%" y="501" width="0.0223%" height="15" fill="rgb(250,185,3)" fg:x="8617" fg:w="2"/><text x="96.3575%" y="511.50"></text></g><g><title>__ioctl (2 samples, 0.02%)</title><rect x="96.1075%" y="485" width="0.0223%" height="15" fill="rgb(212,59,25)" fg:x="8617" fg:w="2"/><text x="96.3575%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="96.1075%" y="469" width="0.0223%" height="15" fill="rgb(221,87,20)" fg:x="8617" fg:w="2"/><text x="96.3575%" y="479.50"></text></g><g><title>__GI___poll (5 samples, 0.06%)</title><rect x="96.1298%" y="565" width="0.0558%" height="15" fill="rgb(213,74,28)" fg:x="8619" fg:w="5"/><text x="96.3798%" y="575.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.1298%" y="549" width="0.0558%" height="15" fill="rgb(224,132,34)" fg:x="8619" fg:w="5"/><text x="96.3798%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.1298%" y="533" width="0.0558%" height="15" fill="rgb(222,101,24)" fg:x="8619" fg:w="5"/><text x="96.3798%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.1298%" y="517" width="0.0558%" height="15" fill="rgb(254,142,4)" fg:x="8619" fg:w="5"/><text x="96.3798%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.1298%" y="501" width="0.0558%" height="15" fill="rgb(230,229,49)" fg:x="8619" fg:w="5"/><text x="96.3798%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.1298%" y="485" width="0.0558%" height="15" fill="rgb(238,70,47)" fg:x="8619" fg:w="5"/><text x="96.3798%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.1298%" y="469" width="0.0558%" height="15" fill="rgb(231,160,17)" fg:x="8619" fg:w="5"/><text x="96.3798%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.1298%" y="453" width="0.0558%" height="15" fill="rgb(218,68,53)" fg:x="8619" fg:w="5"/><text x="96.3798%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.1298%" y="437" width="0.0558%" height="15" fill="rgb(236,111,10)" fg:x="8619" fg:w="5"/><text x="96.3798%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.1298%" y="421" width="0.0558%" height="15" fill="rgb(224,34,41)" fg:x="8619" fg:w="5"/><text x="96.3798%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.1298%" y="405" width="0.0558%" height="15" fill="rgb(241,118,19)" fg:x="8619" fg:w="5"/><text x="96.3798%" y="415.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.1298%" y="389" width="0.0558%" height="15" fill="rgb(238,129,25)" fg:x="8619" fg:w="5"/><text x="96.3798%" y="399.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.1298%" y="373" width="0.0558%" height="15" fill="rgb(238,22,31)" fg:x="8619" fg:w="5"/><text x="96.3798%" y="383.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.1298%" y="357" width="0.0558%" height="15" fill="rgb(222,174,48)" fg:x="8619" fg:w="5"/><text x="96.3798%" y="367.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.1298%" y="341" width="0.0558%" height="15" fill="rgb(206,152,40)" fg:x="8619" fg:w="5"/><text x="96.3798%" y="351.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.1298%" y="325" width="0.0558%" height="15" fill="rgb(218,99,54)" fg:x="8619" fg:w="5"/><text x="96.3798%" y="335.50"></text></g><g><title>_XConnectXCB (6 samples, 0.07%)</title><rect x="96.1298%" y="629" width="0.0669%" height="15" fill="rgb(220,174,26)" fg:x="8619" fg:w="6"/><text x="96.3798%" y="639.50"></text></g><g><title>xcb_connect_to_display_with_auth_info (6 samples, 0.07%)</title><rect x="96.1298%" y="613" width="0.0669%" height="15" fill="rgb(245,116,9)" fg:x="8619" fg:w="6"/><text x="96.3798%" y="623.50"></text></g><g><title>xcb_connect_to_fd (6 samples, 0.07%)</title><rect x="96.1298%" y="597" width="0.0669%" height="15" fill="rgb(209,72,35)" fg:x="8619" fg:w="6"/><text x="96.3798%" y="607.50"></text></g><g><title>[libxcb.so.1.1.0] (6 samples, 0.07%)</title><rect x="96.1298%" y="581" width="0.0669%" height="15" fill="rgb(226,126,21)" fg:x="8619" fg:w="6"/><text x="96.3798%" y="591.50"></text></g><g><title>__libc_recv (1 samples, 0.01%)</title><rect x="96.1856%" y="565" width="0.0112%" height="15" fill="rgb(227,192,1)" fg:x="8624" fg:w="1"/><text x="96.4356%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.1856%" y="549" width="0.0112%" height="15" fill="rgb(237,180,29)" fg:x="8624" fg:w="1"/><text x="96.4356%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.1856%" y="533" width="0.0112%" height="15" fill="rgb(230,197,35)" fg:x="8624" fg:w="1"/><text x="96.4356%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.1856%" y="517" width="0.0112%" height="15" fill="rgb(246,193,31)" fg:x="8624" fg:w="1"/><text x="96.4356%" y="527.50"></text></g><g><title>XOpenDisplay (7 samples, 0.08%)</title><rect x="96.1298%" y="645" width="0.0781%" height="15" fill="rgb(241,36,4)" fg:x="8619" fg:w="7"/><text x="96.3798%" y="655.50"></text></g><g><title>xcb_get_maximum_request_length (1 samples, 0.01%)</title><rect x="96.1967%" y="629" width="0.0112%" height="15" fill="rgb(241,130,17)" fg:x="8625" fg:w="1"/><text x="96.4467%" y="639.50"></text></g><g><title>xcb_wait_for_reply (1 samples, 0.01%)</title><rect x="96.1967%" y="613" width="0.0112%" height="15" fill="rgb(206,137,32)" fg:x="8625" fg:w="1"/><text x="96.4467%" y="623.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.01%)</title><rect x="96.1967%" y="597" width="0.0112%" height="15" fill="rgb(237,228,51)" fg:x="8625" fg:w="1"/><text x="96.4467%" y="607.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.01%)</title><rect x="96.1967%" y="581" width="0.0112%" height="15" fill="rgb(243,6,42)" fg:x="8625" fg:w="1"/><text x="96.4467%" y="591.50"></text></g><g><title>__GI___poll (1 samples, 0.01%)</title><rect x="96.1967%" y="565" width="0.0112%" height="15" fill="rgb(251,74,28)" fg:x="8625" fg:w="1"/><text x="96.4467%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.1967%" y="549" width="0.0112%" height="15" fill="rgb(218,20,49)" fg:x="8625" fg:w="1"/><text x="96.4467%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.1967%" y="533" width="0.0112%" height="15" fill="rgb(238,28,14)" fg:x="8625" fg:w="1"/><text x="96.4467%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.1967%" y="517" width="0.0112%" height="15" fill="rgb(229,40,46)" fg:x="8625" fg:w="1"/><text x="96.4467%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.1967%" y="501" width="0.0112%" height="15" fill="rgb(244,195,20)" fg:x="8625" fg:w="1"/><text x="96.4467%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.1967%" y="485" width="0.0112%" height="15" fill="rgb(253,56,35)" fg:x="8625" fg:w="1"/><text x="96.4467%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.1967%" y="469" width="0.0112%" height="15" fill="rgb(210,149,44)" fg:x="8625" fg:w="1"/><text x="96.4467%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.1967%" y="453" width="0.0112%" height="15" fill="rgb(240,135,12)" fg:x="8625" fg:w="1"/><text x="96.4467%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.1967%" y="437" width="0.0112%" height="15" fill="rgb(251,24,50)" fg:x="8625" fg:w="1"/><text x="96.4467%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.1967%" y="421" width="0.0112%" height="15" fill="rgb(243,200,47)" fg:x="8625" fg:w="1"/><text x="96.4467%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.1967%" y="405" width="0.0112%" height="15" fill="rgb(224,166,26)" fg:x="8625" fg:w="1"/><text x="96.4467%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.1967%" y="389" width="0.0112%" height="15" fill="rgb(233,0,47)" fg:x="8625" fg:w="1"/><text x="96.4467%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.1967%" y="373" width="0.0112%" height="15" fill="rgb(253,80,5)" fg:x="8625" fg:w="1"/><text x="96.4467%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.1967%" y="357" width="0.0112%" height="15" fill="rgb(214,133,25)" fg:x="8625" fg:w="1"/><text x="96.4467%" y="367.50"></text></g><g><title>[libGLX_nvidia.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.2079%" y="533" width="0.0112%" height="15" fill="rgb(209,27,14)" fg:x="8626" fg:w="1"/><text x="96.4579%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.2079%" y="517" width="0.0112%" height="15" fill="rgb(219,102,51)" fg:x="8626" fg:w="1"/><text x="96.4579%" y="527.50"></text></g><g><title>[libGLX_nvidia.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.2079%" y="501" width="0.0112%" height="15" fill="rgb(237,18,16)" fg:x="8626" fg:w="1"/><text x="96.4579%" y="511.50"></text></g><g><title>[libGLX_nvidia.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.2079%" y="485" width="0.0112%" height="15" fill="rgb(241,85,17)" fg:x="8626" fg:w="1"/><text x="96.4579%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.2079%" y="469" width="0.0112%" height="15" fill="rgb(236,90,42)" fg:x="8626" fg:w="1"/><text x="96.4579%" y="479.50"></text></g><g><title>[libGLX_nvidia.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.2079%" y="453" width="0.0112%" height="15" fill="rgb(249,57,21)" fg:x="8626" fg:w="1"/><text x="96.4579%" y="463.50"></text></g><g><title>[libGLX_nvidia.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.2079%" y="437" width="0.0112%" height="15" fill="rgb(243,12,36)" fg:x="8626" fg:w="1"/><text x="96.4579%" y="447.50"></text></g><g><title>[libGLX_nvidia.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.2079%" y="421" width="0.0112%" height="15" fill="rgb(253,128,47)" fg:x="8626" fg:w="1"/><text x="96.4579%" y="431.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.2079%" y="405" width="0.0112%" height="15" fill="rgb(207,33,20)" fg:x="8626" fg:w="1"/><text x="96.4579%" y="415.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.2079%" y="389" width="0.0112%" height="15" fill="rgb(233,215,35)" fg:x="8626" fg:w="1"/><text x="96.4579%" y="399.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.2079%" y="373" width="0.0112%" height="15" fill="rgb(249,188,52)" fg:x="8626" fg:w="1"/><text x="96.4579%" y="383.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.2079%" y="357" width="0.0112%" height="15" fill="rgb(225,12,32)" fg:x="8626" fg:w="1"/><text x="96.4579%" y="367.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.2079%" y="341" width="0.0112%" height="15" fill="rgb(247,98,14)" fg:x="8626" fg:w="1"/><text x="96.4579%" y="351.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.2079%" y="325" width="0.0112%" height="15" fill="rgb(247,219,48)" fg:x="8626" fg:w="1"/><text x="96.4579%" y="335.50"></text></g><g><title>__ioctl (1 samples, 0.01%)</title><rect x="96.2079%" y="309" width="0.0112%" height="15" fill="rgb(253,60,48)" fg:x="8626" fg:w="1"/><text x="96.4579%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.2079%" y="293" width="0.0112%" height="15" fill="rgb(245,15,52)" fg:x="8626" fg:w="1"/><text x="96.4579%" y="303.50"></text></g><g><title>[libGLX_nvidia.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.2190%" y="469" width="0.0112%" height="15" fill="rgb(220,133,28)" fg:x="8627" fg:w="1"/><text x="96.4690%" y="479.50"></text></g><g><title>[libGLX_nvidia.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.2190%" y="453" width="0.0112%" height="15" fill="rgb(217,180,4)" fg:x="8627" fg:w="1"/><text x="96.4690%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.2190%" y="437" width="0.0112%" height="15" fill="rgb(251,24,1)" fg:x="8627" fg:w="1"/><text x="96.4690%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.2190%" y="421" width="0.0112%" height="15" fill="rgb(212,185,49)" fg:x="8627" fg:w="1"/><text x="96.4690%" y="431.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.2190%" y="405" width="0.0112%" height="15" fill="rgb(215,175,22)" fg:x="8627" fg:w="1"/><text x="96.4690%" y="415.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.2190%" y="389" width="0.0112%" height="15" fill="rgb(250,205,14)" fg:x="8627" fg:w="1"/><text x="96.4690%" y="399.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.2190%" y="373" width="0.0112%" height="15" fill="rgb(225,211,22)" fg:x="8627" fg:w="1"/><text x="96.4690%" y="383.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.2190%" y="357" width="0.0112%" height="15" fill="rgb(251,179,42)" fg:x="8627" fg:w="1"/><text x="96.4690%" y="367.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.2190%" y="341" width="0.0112%" height="15" fill="rgb(208,216,51)" fg:x="8627" fg:w="1"/><text x="96.4690%" y="351.50"></text></g><g><title>__ioctl (1 samples, 0.01%)</title><rect x="96.2190%" y="325" width="0.0112%" height="15" fill="rgb(235,36,11)" fg:x="8627" fg:w="1"/><text x="96.4690%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.2190%" y="309" width="0.0112%" height="15" fill="rgb(213,189,28)" fg:x="8627" fg:w="1"/><text x="96.4690%" y="319.50"></text></g><g><title>[libGLX_nvidia.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.2414%" y="437" width="0.0112%" height="15" fill="rgb(227,203,42)" fg:x="8629" fg:w="1"/><text x="96.4914%" y="447.50"></text></g><g><title>[libGLX_nvidia.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.2414%" y="421" width="0.0112%" height="15" fill="rgb(244,72,36)" fg:x="8629" fg:w="1"/><text x="96.4914%" y="431.50"></text></g><g><title>_XRead (1 samples, 0.01%)</title><rect x="96.2414%" y="405" width="0.0112%" height="15" fill="rgb(213,53,17)" fg:x="8629" fg:w="1"/><text x="96.4914%" y="415.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="96.2414%" y="389" width="0.0112%" height="15" fill="rgb(207,167,3)" fg:x="8629" fg:w="1"/><text x="96.4914%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.2414%" y="373" width="0.0112%" height="15" fill="rgb(216,98,30)" fg:x="8629" fg:w="1"/><text x="96.4914%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.2414%" y="357" width="0.0112%" height="15" fill="rgb(236,123,15)" fg:x="8629" fg:w="1"/><text x="96.4914%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.2414%" y="341" width="0.0112%" height="15" fill="rgb(248,81,50)" fg:x="8629" fg:w="1"/><text x="96.4914%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.2414%" y="325" width="0.0112%" height="15" fill="rgb(214,120,4)" fg:x="8629" fg:w="1"/><text x="96.4914%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.2414%" y="309" width="0.0112%" height="15" fill="rgb(208,179,34)" fg:x="8629" fg:w="1"/><text x="96.4914%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.2414%" y="293" width="0.0112%" height="15" fill="rgb(227,140,7)" fg:x="8629" fg:w="1"/><text x="96.4914%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.2414%" y="277" width="0.0112%" height="15" fill="rgb(214,22,6)" fg:x="8629" fg:w="1"/><text x="96.4914%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.2414%" y="261" width="0.0112%" height="15" fill="rgb(207,137,27)" fg:x="8629" fg:w="1"/><text x="96.4914%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.2414%" y="245" width="0.0112%" height="15" fill="rgb(210,8,46)" fg:x="8629" fg:w="1"/><text x="96.4914%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.2414%" y="229" width="0.0112%" height="15" fill="rgb(240,16,54)" fg:x="8629" fg:w="1"/><text x="96.4914%" y="239.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.2525%" y="245" width="0.0112%" height="15" fill="rgb(211,209,29)" fg:x="8630" fg:w="1"/><text x="96.5025%" y="255.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.2525%" y="229" width="0.0112%" height="15" fill="rgb(226,228,24)" fg:x="8630" fg:w="1"/><text x="96.5025%" y="239.50"></text></g><g><title>__ioctl (1 samples, 0.01%)</title><rect x="96.2525%" y="213" width="0.0112%" height="15" fill="rgb(222,84,9)" fg:x="8630" fg:w="1"/><text x="96.5025%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.2525%" y="197" width="0.0112%" height="15" fill="rgb(234,203,30)" fg:x="8630" fg:w="1"/><text x="96.5025%" y="207.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (3 samples, 0.03%)</title><rect x="96.2525%" y="261" width="0.0335%" height="15" fill="rgb(238,109,14)" fg:x="8630" fg:w="3"/><text x="96.5025%" y="271.50"></text></g><g><title>__ioctl (2 samples, 0.02%)</title><rect x="96.2637%" y="245" width="0.0223%" height="15" fill="rgb(233,206,34)" fg:x="8631" fg:w="2"/><text x="96.5137%" y="255.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="96.2637%" y="229" width="0.0223%" height="15" fill="rgb(220,167,47)" fg:x="8631" fg:w="2"/><text x="96.5137%" y="239.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (4 samples, 0.04%)</title><rect x="96.2525%" y="277" width="0.0446%" height="15" fill="rgb(238,105,10)" fg:x="8630" fg:w="4"/><text x="96.5025%" y="287.50"></text></g><g><title>__ioctl (1 samples, 0.01%)</title><rect x="96.2860%" y="261" width="0.0112%" height="15" fill="rgb(213,227,17)" fg:x="8633" fg:w="1"/><text x="96.5360%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.2860%" y="245" width="0.0112%" height="15" fill="rgb(217,132,38)" fg:x="8633" fg:w="1"/><text x="96.5360%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.2860%" y="229" width="0.0112%" height="15" fill="rgb(242,146,4)" fg:x="8633" fg:w="1"/><text x="96.5360%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.2860%" y="213" width="0.0112%" height="15" fill="rgb(212,61,9)" fg:x="8633" fg:w="1"/><text x="96.5360%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.2860%" y="197" width="0.0112%" height="15" fill="rgb(247,126,22)" fg:x="8633" fg:w="1"/><text x="96.5360%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.2860%" y="181" width="0.0112%" height="15" fill="rgb(220,196,2)" fg:x="8633" fg:w="1"/><text x="96.5360%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.2860%" y="165" width="0.0112%" height="15" fill="rgb(208,46,4)" fg:x="8633" fg:w="1"/><text x="96.5360%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.2860%" y="149" width="0.0112%" height="15" fill="rgb(252,104,46)" fg:x="8633" fg:w="1"/><text x="96.5360%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.2860%" y="133" width="0.0112%" height="15" fill="rgb(237,152,48)" fg:x="8633" fg:w="1"/><text x="96.5360%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.2860%" y="117" width="0.0112%" height="15" fill="rgb(221,59,37)" fg:x="8633" fg:w="1"/><text x="96.5360%" y="127.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (6 samples, 0.07%)</title><rect x="96.2525%" y="293" width="0.0669%" height="15" fill="rgb(209,202,51)" fg:x="8630" fg:w="6"/><text x="96.5025%" y="303.50"></text></g><g><title>__ioctl (2 samples, 0.02%)</title><rect x="96.2971%" y="277" width="0.0223%" height="15" fill="rgb(228,81,30)" fg:x="8634" fg:w="2"/><text x="96.5471%" y="287.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="96.2971%" y="261" width="0.0223%" height="15" fill="rgb(227,42,39)" fg:x="8634" fg:w="2"/><text x="96.5471%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.3083%" y="245" width="0.0112%" height="15" fill="rgb(221,26,2)" fg:x="8635" fg:w="1"/><text x="96.5583%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.3083%" y="229" width="0.0112%" height="15" fill="rgb(254,61,31)" fg:x="8635" fg:w="1"/><text x="96.5583%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.3083%" y="213" width="0.0112%" height="15" fill="rgb(222,173,38)" fg:x="8635" fg:w="1"/><text x="96.5583%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.3083%" y="197" width="0.0112%" height="15" fill="rgb(218,50,12)" fg:x="8635" fg:w="1"/><text x="96.5583%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.3083%" y="181" width="0.0112%" height="15" fill="rgb(223,88,40)" fg:x="8635" fg:w="1"/><text x="96.5583%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.3083%" y="165" width="0.0112%" height="15" fill="rgb(237,54,19)" fg:x="8635" fg:w="1"/><text x="96.5583%" y="175.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (7 samples, 0.08%)</title><rect x="96.2525%" y="309" width="0.0781%" height="15" fill="rgb(251,129,25)" fg:x="8630" fg:w="7"/><text x="96.5025%" y="319.50"></text></g><g><title>__ioctl (1 samples, 0.01%)</title><rect x="96.3194%" y="293" width="0.0112%" height="15" fill="rgb(238,97,19)" fg:x="8636" fg:w="1"/><text x="96.5694%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.3194%" y="277" width="0.0112%" height="15" fill="rgb(240,169,18)" fg:x="8636" fg:w="1"/><text x="96.5694%" y="287.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (8 samples, 0.09%)</title><rect x="96.2525%" y="373" width="0.0892%" height="15" fill="rgb(230,187,49)" fg:x="8630" fg:w="8"/><text x="96.5025%" y="383.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (8 samples, 0.09%)</title><rect x="96.2525%" y="357" width="0.0892%" height="15" fill="rgb(209,44,26)" fg:x="8630" fg:w="8"/><text x="96.5025%" y="367.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (8 samples, 0.09%)</title><rect x="96.2525%" y="341" width="0.0892%" height="15" fill="rgb(244,0,6)" fg:x="8630" fg:w="8"/><text x="96.5025%" y="351.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (8 samples, 0.09%)</title><rect x="96.2525%" y="325" width="0.0892%" height="15" fill="rgb(248,18,21)" fg:x="8630" fg:w="8"/><text x="96.5025%" y="335.50"></text></g><g><title>__ioctl (1 samples, 0.01%)</title><rect x="96.3306%" y="309" width="0.0112%" height="15" fill="rgb(245,180,19)" fg:x="8637" fg:w="1"/><text x="96.5806%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.3306%" y="293" width="0.0112%" height="15" fill="rgb(252,118,36)" fg:x="8637" fg:w="1"/><text x="96.5806%" y="303.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (10 samples, 0.11%)</title><rect x="96.2525%" y="389" width="0.1115%" height="15" fill="rgb(210,224,19)" fg:x="8630" fg:w="10"/><text x="96.5025%" y="399.50"></text></g><g><title>__ioctl (2 samples, 0.02%)</title><rect x="96.3417%" y="373" width="0.0223%" height="15" fill="rgb(218,30,24)" fg:x="8638" fg:w="2"/><text x="96.5917%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="96.3417%" y="357" width="0.0223%" height="15" fill="rgb(219,75,50)" fg:x="8638" fg:w="2"/><text x="96.5917%" y="367.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (11 samples, 0.12%)</title><rect x="96.2525%" y="405" width="0.1227%" height="15" fill="rgb(234,72,50)" fg:x="8630" fg:w="11"/><text x="96.5025%" y="415.50"></text></g><g><title>__ioctl (1 samples, 0.01%)</title><rect x="96.3640%" y="389" width="0.0112%" height="15" fill="rgb(219,100,48)" fg:x="8640" fg:w="1"/><text x="96.6140%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.3640%" y="373" width="0.0112%" height="15" fill="rgb(253,5,41)" fg:x="8640" fg:w="1"/><text x="96.6140%" y="383.50"></text></g><g><title>[libGLX.so.0.0.0] (23 samples, 0.26%)</title><rect x="96.2079%" y="581" width="0.2565%" height="15" fill="rgb(247,181,11)" fg:x="8626" fg:w="23"/><text x="96.4579%" y="591.50"></text></g><g><title>[libGLX_nvidia.so.470.103.01] (23 samples, 0.26%)</title><rect x="96.2079%" y="565" width="0.2565%" height="15" fill="rgb(222,223,25)" fg:x="8626" fg:w="23"/><text x="96.4579%" y="575.50"></text></g><g><title>[libGLX_nvidia.so.470.103.01] (23 samples, 0.26%)</title><rect x="96.2079%" y="549" width="0.2565%" height="15" fill="rgb(214,198,28)" fg:x="8626" fg:w="23"/><text x="96.4579%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (22 samples, 0.25%)</title><rect x="96.2190%" y="533" width="0.2454%" height="15" fill="rgb(230,46,43)" fg:x="8627" fg:w="22"/><text x="96.4690%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (22 samples, 0.25%)</title><rect x="96.2190%" y="517" width="0.2454%" height="15" fill="rgb(233,65,53)" fg:x="8627" fg:w="22"/><text x="96.4690%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (22 samples, 0.25%)</title><rect x="96.2190%" y="501" width="0.2454%" height="15" fill="rgb(221,121,27)" fg:x="8627" fg:w="22"/><text x="96.4690%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (22 samples, 0.25%)</title><rect x="96.2190%" y="485" width="0.2454%" height="15" fill="rgb(247,70,47)" fg:x="8627" fg:w="22"/><text x="96.4690%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (21 samples, 0.23%)</title><rect x="96.2302%" y="469" width="0.2342%" height="15" fill="rgb(228,85,35)" fg:x="8628" fg:w="21"/><text x="96.4802%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (20 samples, 0.22%)</title><rect x="96.2414%" y="453" width="0.2231%" height="15" fill="rgb(209,50,18)" fg:x="8629" fg:w="20"/><text x="96.4914%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (19 samples, 0.21%)</title><rect x="96.2525%" y="437" width="0.2119%" height="15" fill="rgb(250,19,35)" fg:x="8630" fg:w="19"/><text x="96.5025%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (19 samples, 0.21%)</title><rect x="96.2525%" y="421" width="0.2119%" height="15" fill="rgb(253,107,29)" fg:x="8630" fg:w="19"/><text x="96.5025%" y="431.50"></text></g><g><title>__ioctl (8 samples, 0.09%)</title><rect x="96.3752%" y="405" width="0.0892%" height="15" fill="rgb(252,179,29)" fg:x="8641" fg:w="8"/><text x="96.6252%" y="415.50"></text></g><g><title>[unknown] (8 samples, 0.09%)</title><rect x="96.3752%" y="389" width="0.0892%" height="15" fill="rgb(238,194,6)" fg:x="8641" fg:w="8"/><text x="96.6252%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="96.4421%" y="373" width="0.0223%" height="15" fill="rgb(238,164,29)" fg:x="8647" fg:w="2"/><text x="96.6921%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="96.4421%" y="357" width="0.0223%" height="15" fill="rgb(224,25,9)" fg:x="8647" fg:w="2"/><text x="96.6921%" y="367.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="96.4421%" y="341" width="0.0223%" height="15" fill="rgb(244,153,23)" fg:x="8647" fg:w="2"/><text x="96.6921%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="96.4421%" y="325" width="0.0223%" height="15" fill="rgb(212,203,14)" fg:x="8647" fg:w="2"/><text x="96.6921%" y="335.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.01%)</title><rect x="96.4644%" y="485" width="0.0112%" height="15" fill="rgb(220,164,20)" fg:x="8649" fg:w="1"/><text x="96.7144%" y="495.50"></text></g><g><title>__libc_recvmsg (1 samples, 0.01%)</title><rect x="96.4644%" y="469" width="0.0112%" height="15" fill="rgb(222,203,48)" fg:x="8649" fg:w="1"/><text x="96.7144%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.4644%" y="453" width="0.0112%" height="15" fill="rgb(215,159,22)" fg:x="8649" fg:w="1"/><text x="96.7144%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.4644%" y="437" width="0.0112%" height="15" fill="rgb(216,183,47)" fg:x="8649" fg:w="1"/><text x="96.7144%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.4644%" y="421" width="0.0112%" height="15" fill="rgb(229,195,25)" fg:x="8649" fg:w="1"/><text x="96.7144%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.4644%" y="405" width="0.0112%" height="15" fill="rgb(224,132,51)" fg:x="8649" fg:w="1"/><text x="96.7144%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.4644%" y="389" width="0.0112%" height="15" fill="rgb(240,63,7)" fg:x="8649" fg:w="1"/><text x="96.7144%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.4644%" y="373" width="0.0112%" height="15" fill="rgb(249,182,41)" fg:x="8649" fg:w="1"/><text x="96.7144%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.4644%" y="357" width="0.0112%" height="15" fill="rgb(243,47,26)" fg:x="8649" fg:w="1"/><text x="96.7144%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.4644%" y="341" width="0.0112%" height="15" fill="rgb(233,48,2)" fg:x="8649" fg:w="1"/><text x="96.7144%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.4644%" y="325" width="0.0112%" height="15" fill="rgb(244,165,34)" fg:x="8649" fg:w="1"/><text x="96.7144%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.4644%" y="309" width="0.0112%" height="15" fill="rgb(207,89,7)" fg:x="8649" fg:w="1"/><text x="96.7144%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.4644%" y="293" width="0.0112%" height="15" fill="rgb(244,117,36)" fg:x="8649" fg:w="1"/><text x="96.7144%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.4644%" y="277" width="0.0112%" height="15" fill="rgb(226,144,34)" fg:x="8649" fg:w="1"/><text x="96.7144%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.4644%" y="261" width="0.0112%" height="15" fill="rgb(213,23,19)" fg:x="8649" fg:w="1"/><text x="96.7144%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.4644%" y="245" width="0.0112%" height="15" fill="rgb(217,75,12)" fg:x="8649" fg:w="1"/><text x="96.7144%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.4644%" y="229" width="0.0112%" height="15" fill="rgb(224,159,17)" fg:x="8649" fg:w="1"/><text x="96.7144%" y="239.50"></text></g><g><title>[libGLX_nvidia.so.470.103.01] (6 samples, 0.07%)</title><rect x="96.4644%" y="581" width="0.0669%" height="15" fill="rgb(217,118,1)" fg:x="8649" fg:w="6"/><text x="96.7144%" y="591.50"></text></g><g><title>[libGLX_nvidia.so.470.103.01] (6 samples, 0.07%)</title><rect x="96.4644%" y="565" width="0.0669%" height="15" fill="rgb(232,180,48)" fg:x="8649" fg:w="6"/><text x="96.7144%" y="575.50"></text></g><g><title>_XReply (6 samples, 0.07%)</title><rect x="96.4644%" y="549" width="0.0669%" height="15" fill="rgb(230,27,33)" fg:x="8649" fg:w="6"/><text x="96.7144%" y="559.50"></text></g><g><title>xcb_wait_for_reply64 (6 samples, 0.07%)</title><rect x="96.4644%" y="533" width="0.0669%" height="15" fill="rgb(205,31,21)" fg:x="8649" fg:w="6"/><text x="96.7144%" y="543.50"></text></g><g><title>[libxcb.so.1.1.0] (6 samples, 0.07%)</title><rect x="96.4644%" y="517" width="0.0669%" height="15" fill="rgb(253,59,4)" fg:x="8649" fg:w="6"/><text x="96.7144%" y="527.50"></text></g><g><title>[libxcb.so.1.1.0] (6 samples, 0.07%)</title><rect x="96.4644%" y="501" width="0.0669%" height="15" fill="rgb(224,201,9)" fg:x="8649" fg:w="6"/><text x="96.7144%" y="511.50"></text></g><g><title>__GI___poll (5 samples, 0.06%)</title><rect x="96.4756%" y="485" width="0.0558%" height="15" fill="rgb(229,206,30)" fg:x="8650" fg:w="5"/><text x="96.7256%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.4756%" y="469" width="0.0558%" height="15" fill="rgb(212,67,47)" fg:x="8650" fg:w="5"/><text x="96.7256%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.4756%" y="453" width="0.0558%" height="15" fill="rgb(211,96,50)" fg:x="8650" fg:w="5"/><text x="96.7256%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.4756%" y="437" width="0.0558%" height="15" fill="rgb(252,114,18)" fg:x="8650" fg:w="5"/><text x="96.7256%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.4756%" y="421" width="0.0558%" height="15" fill="rgb(223,58,37)" fg:x="8650" fg:w="5"/><text x="96.7256%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.4756%" y="405" width="0.0558%" height="15" fill="rgb(237,70,4)" fg:x="8650" fg:w="5"/><text x="96.7256%" y="415.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.4756%" y="389" width="0.0558%" height="15" fill="rgb(244,85,46)" fg:x="8650" fg:w="5"/><text x="96.7256%" y="399.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.4756%" y="373" width="0.0558%" height="15" fill="rgb(223,39,52)" fg:x="8650" fg:w="5"/><text x="96.7256%" y="383.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.4756%" y="357" width="0.0558%" height="15" fill="rgb(218,200,14)" fg:x="8650" fg:w="5"/><text x="96.7256%" y="367.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.4756%" y="341" width="0.0558%" height="15" fill="rgb(208,171,16)" fg:x="8650" fg:w="5"/><text x="96.7256%" y="351.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.4756%" y="325" width="0.0558%" height="15" fill="rgb(234,200,18)" fg:x="8650" fg:w="5"/><text x="96.7256%" y="335.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.4756%" y="309" width="0.0558%" height="15" fill="rgb(228,45,11)" fg:x="8650" fg:w="5"/><text x="96.7256%" y="319.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.4756%" y="293" width="0.0558%" height="15" fill="rgb(237,182,11)" fg:x="8650" fg:w="5"/><text x="96.7256%" y="303.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.4756%" y="277" width="0.0558%" height="15" fill="rgb(241,175,49)" fg:x="8650" fg:w="5"/><text x="96.7256%" y="287.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.4756%" y="261" width="0.0558%" height="15" fill="rgb(247,38,35)" fg:x="8650" fg:w="5"/><text x="96.7256%" y="271.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.4756%" y="245" width="0.0558%" height="15" fill="rgb(228,39,49)" fg:x="8650" fg:w="5"/><text x="96.7256%" y="255.50"></text></g><g><title>[libGL.so.1.7.0] (1 samples, 0.01%)</title><rect x="96.5313%" y="549" width="0.0112%" height="15" fill="rgb(226,101,26)" fg:x="8655" fg:w="1"/><text x="96.7813%" y="559.50"></text></g><g><title>[libGL.so.1.7.0] (1 samples, 0.01%)</title><rect x="96.5313%" y="533" width="0.0112%" height="15" fill="rgb(206,141,19)" fg:x="8655" fg:w="1"/><text x="96.7813%" y="543.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="96.5313%" y="517" width="0.0112%" height="15" fill="rgb(211,200,13)" fg:x="8655" fg:w="1"/><text x="96.7813%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.5313%" y="501" width="0.0112%" height="15" fill="rgb(241,121,6)" fg:x="8655" fg:w="1"/><text x="96.7813%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.5313%" y="485" width="0.0112%" height="15" fill="rgb(234,221,29)" fg:x="8655" fg:w="1"/><text x="96.7813%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.5313%" y="469" width="0.0112%" height="15" fill="rgb(229,136,5)" fg:x="8655" fg:w="1"/><text x="96.7813%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.5313%" y="453" width="0.0112%" height="15" fill="rgb(238,36,11)" fg:x="8655" fg:w="1"/><text x="96.7813%" y="463.50"></text></g><g><title>[libGLX_nvidia.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.5425%" y="549" width="0.0112%" height="15" fill="rgb(251,55,41)" fg:x="8656" fg:w="1"/><text x="96.7925%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.5425%" y="533" width="0.0112%" height="15" fill="rgb(242,34,40)" fg:x="8656" fg:w="1"/><text x="96.7925%" y="543.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (1 samples, 0.01%)</title><rect x="96.5425%" y="517" width="0.0112%" height="15" fill="rgb(215,42,17)" fg:x="8656" fg:w="1"/><text x="96.7925%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.5425%" y="501" width="0.0112%" height="15" fill="rgb(207,44,46)" fg:x="8656" fg:w="1"/><text x="96.7925%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.5425%" y="485" width="0.0112%" height="15" fill="rgb(211,206,28)" fg:x="8656" fg:w="1"/><text x="96.7925%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.5425%" y="469" width="0.0112%" height="15" fill="rgb(237,167,16)" fg:x="8656" fg:w="1"/><text x="96.7925%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.5425%" y="453" width="0.0112%" height="15" fill="rgb(233,66,6)" fg:x="8656" fg:w="1"/><text x="96.7925%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.5425%" y="437" width="0.0112%" height="15" fill="rgb(246,123,29)" fg:x="8656" fg:w="1"/><text x="96.7925%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.5425%" y="421" width="0.0112%" height="15" fill="rgb(209,62,40)" fg:x="8656" fg:w="1"/><text x="96.7925%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.5425%" y="405" width="0.0112%" height="15" fill="rgb(218,4,25)" fg:x="8656" fg:w="1"/><text x="96.7925%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.5425%" y="389" width="0.0112%" height="15" fill="rgb(253,91,49)" fg:x="8656" fg:w="1"/><text x="96.7925%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.5425%" y="373" width="0.0112%" height="15" fill="rgb(228,155,29)" fg:x="8656" fg:w="1"/><text x="96.7925%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.5425%" y="357" width="0.0112%" height="15" fill="rgb(243,57,37)" fg:x="8656" fg:w="1"/><text x="96.7925%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.5425%" y="341" width="0.0112%" height="15" fill="rgb(244,167,17)" fg:x="8656" fg:w="1"/><text x="96.7925%" y="351.50"></text></g><g><title>[libGLX.so.0.0.0] (34 samples, 0.38%)</title><rect x="96.2079%" y="613" width="0.3792%" height="15" fill="rgb(207,181,38)" fg:x="8626" fg:w="34"/><text x="96.4579%" y="623.50"></text></g><g><title>[libGLX.so.0.0.0] (34 samples, 0.38%)</title><rect x="96.2079%" y="597" width="0.3792%" height="15" fill="rgb(211,8,23)" fg:x="8626" fg:w="34"/><text x="96.4579%" y="607.50"></text></g><g><title>__glDispatchMakeCurrent (5 samples, 0.06%)</title><rect x="96.5313%" y="581" width="0.0558%" height="15" fill="rgb(235,11,44)" fg:x="8655" fg:w="5"/><text x="96.7813%" y="591.50"></text></g><g><title>[libGLdispatch.so.0.0.0] (5 samples, 0.06%)</title><rect x="96.5313%" y="565" width="0.0558%" height="15" fill="rgb(248,18,52)" fg:x="8655" fg:w="5"/><text x="96.7813%" y="575.50"></text></g><g><title>glXGetProcAddress (3 samples, 0.03%)</title><rect x="96.5536%" y="549" width="0.0335%" height="15" fill="rgb(208,4,7)" fg:x="8657" fg:w="3"/><text x="96.8036%" y="559.50"></text></g><g><title>[libGLX_nvidia.so.470.103.01] (3 samples, 0.03%)</title><rect x="96.5536%" y="533" width="0.0335%" height="15" fill="rgb(240,17,39)" fg:x="8657" fg:w="3"/><text x="96.8036%" y="543.50"></text></g><g><title>[libGLX_nvidia.so.470.103.01] (3 samples, 0.03%)</title><rect x="96.5536%" y="517" width="0.0335%" height="15" fill="rgb(207,170,3)" fg:x="8657" fg:w="3"/><text x="96.8036%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (3 samples, 0.03%)</title><rect x="96.5536%" y="501" width="0.0335%" height="15" fill="rgb(236,100,52)" fg:x="8657" fg:w="3"/><text x="96.8036%" y="511.50"></text></g><g><title>syscall (2 samples, 0.02%)</title><rect x="96.5648%" y="485" width="0.0223%" height="15" fill="rgb(246,78,51)" fg:x="8658" fg:w="2"/><text x="96.8148%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="96.5648%" y="469" width="0.0223%" height="15" fill="rgb(211,17,15)" fg:x="8658" fg:w="2"/><text x="96.8148%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.5760%" y="453" width="0.0112%" height="15" fill="rgb(209,59,46)" fg:x="8659" fg:w="1"/><text x="96.8260%" y="463.50"></text></g><g><title>[libGLX_nvidia.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.5871%" y="613" width="0.0112%" height="15" fill="rgb(210,92,25)" fg:x="8660" fg:w="1"/><text x="96.8371%" y="623.50"></text></g><g><title>[libGLX_nvidia.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.5871%" y="597" width="0.0112%" height="15" fill="rgb(238,174,52)" fg:x="8660" fg:w="1"/><text x="96.8371%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.5871%" y="581" width="0.0112%" height="15" fill="rgb(230,73,7)" fg:x="8660" fg:w="1"/><text x="96.8371%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.5871%" y="565" width="0.0112%" height="15" fill="rgb(243,124,40)" fg:x="8660" fg:w="1"/><text x="96.8371%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.5871%" y="549" width="0.0112%" height="15" fill="rgb(244,170,11)" fg:x="8660" fg:w="1"/><text x="96.8371%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.5871%" y="533" width="0.0112%" height="15" fill="rgb(207,114,54)" fg:x="8660" fg:w="1"/><text x="96.8371%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.5871%" y="517" width="0.0112%" height="15" fill="rgb(205,42,20)" fg:x="8660" fg:w="1"/><text x="96.8371%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.5871%" y="501" width="0.0112%" height="15" fill="rgb(230,30,28)" fg:x="8660" fg:w="1"/><text x="96.8371%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.5871%" y="485" width="0.0112%" height="15" fill="rgb(205,73,54)" fg:x="8660" fg:w="1"/><text x="96.8371%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.5871%" y="469" width="0.0112%" height="15" fill="rgb(254,227,23)" fg:x="8660" fg:w="1"/><text x="96.8371%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.5871%" y="453" width="0.0112%" height="15" fill="rgb(228,202,34)" fg:x="8660" fg:w="1"/><text x="96.8371%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.5871%" y="437" width="0.0112%" height="15" fill="rgb(222,225,37)" fg:x="8660" fg:w="1"/><text x="96.8371%" y="447.50"></text></g><g><title>__ioctl (1 samples, 0.01%)</title><rect x="96.5871%" y="421" width="0.0112%" height="15" fill="rgb(221,14,54)" fg:x="8660" fg:w="1"/><text x="96.8371%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.5871%" y="405" width="0.0112%" height="15" fill="rgb(254,102,2)" fg:x="8660" fg:w="1"/><text x="96.8371%" y="415.50"></text></g><g><title>[libdbus-1.so.3.19.11] (1 samples, 0.01%)</title><rect x="96.5983%" y="485" width="0.0112%" height="15" fill="rgb(232,104,17)" fg:x="8661" fg:w="1"/><text x="96.8483%" y="495.50"></text></g><g><title>[libdbus-1.so.3.19.11] (1 samples, 0.01%)</title><rect x="96.5983%" y="469" width="0.0112%" height="15" fill="rgb(250,220,14)" fg:x="8661" fg:w="1"/><text x="96.8483%" y="479.50"></text></g><g><title>[libdbus-1.so.3.19.11] (1 samples, 0.01%)</title><rect x="96.5983%" y="453" width="0.0112%" height="15" fill="rgb(241,158,9)" fg:x="8661" fg:w="1"/><text x="96.8483%" y="463.50"></text></g><g><title>_dbus_message_loader_queue_messages (1 samples, 0.01%)</title><rect x="96.5983%" y="437" width="0.0112%" height="15" fill="rgb(246,9,43)" fg:x="8661" fg:w="1"/><text x="96.8483%" y="447.50"></text></g><g><title>[libdbus-1.so.3.19.11] (1 samples, 0.01%)</title><rect x="96.5983%" y="421" width="0.0112%" height="15" fill="rgb(206,73,33)" fg:x="8661" fg:w="1"/><text x="96.8483%" y="431.50"></text></g><g><title>_dbus_validate_body_with_reason (1 samples, 0.01%)</title><rect x="96.5983%" y="405" width="0.0112%" height="15" fill="rgb(222,79,8)" fg:x="8661" fg:w="1"/><text x="96.8483%" y="415.50"></text></g><g><title>[libdbus-1.so.3.19.11] (1 samples, 0.01%)</title><rect x="96.5983%" y="389" width="0.0112%" height="15" fill="rgb(234,8,54)" fg:x="8661" fg:w="1"/><text x="96.8483%" y="399.50"></text></g><g><title>[libdbus-1.so.3.19.11] (1 samples, 0.01%)</title><rect x="96.5983%" y="373" width="0.0112%" height="15" fill="rgb(209,134,38)" fg:x="8661" fg:w="1"/><text x="96.8483%" y="383.50"></text></g><g><title>[libdbus-1.so.3.19.11] (1 samples, 0.01%)</title><rect x="96.5983%" y="357" width="0.0112%" height="15" fill="rgb(230,127,29)" fg:x="8661" fg:w="1"/><text x="96.8483%" y="367.50"></text></g><g><title>_dbus_validate_signature_with_reason (1 samples, 0.01%)</title><rect x="96.5983%" y="341" width="0.0112%" height="15" fill="rgb(242,44,41)" fg:x="8661" fg:w="1"/><text x="96.8483%" y="351.50"></text></g><g><title>[libSDL2-2.0.so.0.10.0] (6 samples, 0.07%)</title><rect x="96.5983%" y="597" width="0.0669%" height="15" fill="rgb(222,56,43)" fg:x="8661" fg:w="6"/><text x="96.8483%" y="607.50"></text></g><g><title>dbus_bus_register (6 samples, 0.07%)</title><rect x="96.5983%" y="581" width="0.0669%" height="15" fill="rgb(238,39,47)" fg:x="8661" fg:w="6"/><text x="96.8483%" y="591.50"></text></g><g><title>dbus_connection_send_with_reply_and_block (6 samples, 0.07%)</title><rect x="96.5983%" y="565" width="0.0669%" height="15" fill="rgb(226,79,43)" fg:x="8661" fg:w="6"/><text x="96.8483%" y="575.50"></text></g><g><title>[libdbus-1.so.3.19.11] (6 samples, 0.07%)</title><rect x="96.5983%" y="549" width="0.0669%" height="15" fill="rgb(242,105,53)" fg:x="8661" fg:w="6"/><text x="96.8483%" y="559.50"></text></g><g><title>[libdbus-1.so.3.19.11] (6 samples, 0.07%)</title><rect x="96.5983%" y="533" width="0.0669%" height="15" fill="rgb(251,132,46)" fg:x="8661" fg:w="6"/><text x="96.8483%" y="543.50"></text></g><g><title>[libdbus-1.so.3.19.11] (6 samples, 0.07%)</title><rect x="96.5983%" y="517" width="0.0669%" height="15" fill="rgb(231,77,14)" fg:x="8661" fg:w="6"/><text x="96.8483%" y="527.50"></text></g><g><title>[libdbus-1.so.3.19.11] (6 samples, 0.07%)</title><rect x="96.5983%" y="501" width="0.0669%" height="15" fill="rgb(240,135,9)" fg:x="8661" fg:w="6"/><text x="96.8483%" y="511.50"></text></g><g><title>__GI___poll (5 samples, 0.06%)</title><rect x="96.6094%" y="485" width="0.0558%" height="15" fill="rgb(248,109,14)" fg:x="8662" fg:w="5"/><text x="96.8594%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.6094%" y="469" width="0.0558%" height="15" fill="rgb(227,146,52)" fg:x="8662" fg:w="5"/><text x="96.8594%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.6094%" y="453" width="0.0558%" height="15" fill="rgb(232,54,3)" fg:x="8662" fg:w="5"/><text x="96.8594%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.6094%" y="437" width="0.0558%" height="15" fill="rgb(229,201,43)" fg:x="8662" fg:w="5"/><text x="96.8594%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.6094%" y="421" width="0.0558%" height="15" fill="rgb(252,161,33)" fg:x="8662" fg:w="5"/><text x="96.8594%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.6094%" y="405" width="0.0558%" height="15" fill="rgb(226,146,40)" fg:x="8662" fg:w="5"/><text x="96.8594%" y="415.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.6094%" y="389" width="0.0558%" height="15" fill="rgb(219,47,25)" fg:x="8662" fg:w="5"/><text x="96.8594%" y="399.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.6094%" y="373" width="0.0558%" height="15" fill="rgb(250,135,13)" fg:x="8662" fg:w="5"/><text x="96.8594%" y="383.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.6094%" y="357" width="0.0558%" height="15" fill="rgb(219,229,18)" fg:x="8662" fg:w="5"/><text x="96.8594%" y="367.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.6094%" y="341" width="0.0558%" height="15" fill="rgb(217,152,27)" fg:x="8662" fg:w="5"/><text x="96.8594%" y="351.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.6094%" y="325" width="0.0558%" height="15" fill="rgb(225,71,47)" fg:x="8662" fg:w="5"/><text x="96.8594%" y="335.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.6094%" y="309" width="0.0558%" height="15" fill="rgb(220,139,14)" fg:x="8662" fg:w="5"/><text x="96.8594%" y="319.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.6094%" y="293" width="0.0558%" height="15" fill="rgb(247,54,32)" fg:x="8662" fg:w="5"/><text x="96.8594%" y="303.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.6094%" y="277" width="0.0558%" height="15" fill="rgb(252,131,39)" fg:x="8662" fg:w="5"/><text x="96.8594%" y="287.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.6094%" y="261" width="0.0558%" height="15" fill="rgb(210,108,39)" fg:x="8662" fg:w="5"/><text x="96.8594%" y="271.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.6094%" y="245" width="0.0558%" height="15" fill="rgb(205,23,29)" fg:x="8662" fg:w="5"/><text x="96.8594%" y="255.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.01%)</title><rect x="96.6652%" y="421" width="0.0112%" height="15" fill="rgb(246,139,46)" fg:x="8667" fg:w="1"/><text x="96.9152%" y="431.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.01%)</title><rect x="96.6652%" y="405" width="0.0112%" height="15" fill="rgb(250,81,26)" fg:x="8667" fg:w="1"/><text x="96.9152%" y="415.50"></text></g><g><title>openaux (1 samples, 0.01%)</title><rect x="96.6652%" y="389" width="0.0112%" height="15" fill="rgb(214,104,7)" fg:x="8667" fg:w="1"/><text x="96.9152%" y="399.50"></text></g><g><title>_dl_map_object (1 samples, 0.01%)</title><rect x="96.6652%" y="373" width="0.0112%" height="15" fill="rgb(233,189,8)" fg:x="8667" fg:w="1"/><text x="96.9152%" y="383.50"></text></g><g><title>_dl_map_object_from_fd (1 samples, 0.01%)</title><rect x="96.6652%" y="357" width="0.0112%" height="15" fill="rgb(228,141,17)" fg:x="8667" fg:w="1"/><text x="96.9152%" y="367.50"></text></g><g><title>_dl_setup_hash (1 samples, 0.01%)</title><rect x="96.6652%" y="341" width="0.0112%" height="15" fill="rgb(247,157,1)" fg:x="8667" fg:w="1"/><text x="96.9152%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.6652%" y="325" width="0.0112%" height="15" fill="rgb(249,225,5)" fg:x="8667" fg:w="1"/><text x="96.9152%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.6652%" y="309" width="0.0112%" height="15" fill="rgb(242,55,13)" fg:x="8667" fg:w="1"/><text x="96.9152%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.6652%" y="293" width="0.0112%" height="15" fill="rgb(230,49,50)" fg:x="8667" fg:w="1"/><text x="96.9152%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.6652%" y="277" width="0.0112%" height="15" fill="rgb(241,111,38)" fg:x="8667" fg:w="1"/><text x="96.9152%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.6652%" y="261" width="0.0112%" height="15" fill="rgb(252,155,4)" fg:x="8667" fg:w="1"/><text x="96.9152%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.6652%" y="245" width="0.0112%" height="15" fill="rgb(212,69,32)" fg:x="8667" fg:w="1"/><text x="96.9152%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.6652%" y="229" width="0.0112%" height="15" fill="rgb(243,107,47)" fg:x="8667" fg:w="1"/><text x="96.9152%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.6652%" y="213" width="0.0112%" height="15" fill="rgb(247,130,12)" fg:x="8667" fg:w="1"/><text x="96.9152%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.6652%" y="197" width="0.0112%" height="15" fill="rgb(233,74,16)" fg:x="8667" fg:w="1"/><text x="96.9152%" y="207.50"></text></g><g><title>[libGLX.so.0.0.0] (2 samples, 0.02%)</title><rect x="96.6652%" y="581" width="0.0223%" height="15" fill="rgb(208,58,18)" fg:x="8667" fg:w="2"/><text x="96.9152%" y="591.50"></text></g><g><title>[libGLX.so.0.0.0] (2 samples, 0.02%)</title><rect x="96.6652%" y="565" width="0.0223%" height="15" fill="rgb(242,225,1)" fg:x="8667" fg:w="2"/><text x="96.9152%" y="575.50"></text></g><g><title>__dlopen (2 samples, 0.02%)</title><rect x="96.6652%" y="549" width="0.0223%" height="15" fill="rgb(249,39,40)" fg:x="8667" fg:w="2"/><text x="96.9152%" y="559.50"></text></g><g><title>_dlerror_run (2 samples, 0.02%)</title><rect x="96.6652%" y="533" width="0.0223%" height="15" fill="rgb(207,72,44)" fg:x="8667" fg:w="2"/><text x="96.9152%" y="543.50"></text></g><g><title>__GI__dl_catch_error (2 samples, 0.02%)</title><rect x="96.6652%" y="517" width="0.0223%" height="15" fill="rgb(215,193,12)" fg:x="8667" fg:w="2"/><text x="96.9152%" y="527.50"></text></g><g><title>__GI__dl_catch_exception (2 samples, 0.02%)</title><rect x="96.6652%" y="501" width="0.0223%" height="15" fill="rgb(248,41,39)" fg:x="8667" fg:w="2"/><text x="96.9152%" y="511.50"></text></g><g><title>dlopen_doit (2 samples, 0.02%)</title><rect x="96.6652%" y="485" width="0.0223%" height="15" fill="rgb(253,85,4)" fg:x="8667" fg:w="2"/><text x="96.9152%" y="495.50"></text></g><g><title>_dl_open (2 samples, 0.02%)</title><rect x="96.6652%" y="469" width="0.0223%" height="15" fill="rgb(243,70,31)" fg:x="8667" fg:w="2"/><text x="96.9152%" y="479.50"></text></g><g><title>__GI__dl_catch_exception (2 samples, 0.02%)</title><rect x="96.6652%" y="453" width="0.0223%" height="15" fill="rgb(253,195,26)" fg:x="8667" fg:w="2"/><text x="96.9152%" y="463.50"></text></g><g><title>dl_open_worker (2 samples, 0.02%)</title><rect x="96.6652%" y="437" width="0.0223%" height="15" fill="rgb(243,42,11)" fg:x="8667" fg:w="2"/><text x="96.9152%" y="447.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.01%)</title><rect x="96.6763%" y="421" width="0.0112%" height="15" fill="rgb(239,66,17)" fg:x="8668" fg:w="1"/><text x="96.9263%" y="431.50"></text></g><g><title>elf_dynamic_do_Rela (1 samples, 0.01%)</title><rect x="96.6763%" y="405" width="0.0112%" height="15" fill="rgb(217,132,21)" fg:x="8668" fg:w="1"/><text x="96.9263%" y="415.50"></text></g><g><title>elf_machine_rela_relative (1 samples, 0.01%)</title><rect x="96.6763%" y="389" width="0.0112%" height="15" fill="rgb(252,202,21)" fg:x="8668" fg:w="1"/><text x="96.9263%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.6763%" y="373" width="0.0112%" height="15" fill="rgb(233,98,36)" fg:x="8668" fg:w="1"/><text x="96.9263%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.6763%" y="357" width="0.0112%" height="15" fill="rgb(216,153,54)" fg:x="8668" fg:w="1"/><text x="96.9263%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.6763%" y="341" width="0.0112%" height="15" fill="rgb(250,99,7)" fg:x="8668" fg:w="1"/><text x="96.9263%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.6763%" y="325" width="0.0112%" height="15" fill="rgb(207,56,50)" fg:x="8668" fg:w="1"/><text x="96.9263%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.6763%" y="309" width="0.0112%" height="15" fill="rgb(244,61,34)" fg:x="8668" fg:w="1"/><text x="96.9263%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.6763%" y="293" width="0.0112%" height="15" fill="rgb(241,50,38)" fg:x="8668" fg:w="1"/><text x="96.9263%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.6763%" y="277" width="0.0112%" height="15" fill="rgb(212,166,30)" fg:x="8668" fg:w="1"/><text x="96.9263%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.6763%" y="261" width="0.0112%" height="15" fill="rgb(249,127,32)" fg:x="8668" fg:w="1"/><text x="96.9263%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.6763%" y="245" width="0.0112%" height="15" fill="rgb(209,103,0)" fg:x="8668" fg:w="1"/><text x="96.9263%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.6763%" y="229" width="0.0112%" height="15" fill="rgb(238,209,51)" fg:x="8668" fg:w="1"/><text x="96.9263%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.6763%" y="213" width="0.0112%" height="15" fill="rgb(237,56,23)" fg:x="8668" fg:w="1"/><text x="96.9263%" y="223.50"></text></g><g><title>XextAddDisplay (1 samples, 0.01%)</title><rect x="96.6875%" y="565" width="0.0112%" height="15" fill="rgb(215,153,46)" fg:x="8669" fg:w="1"/><text x="96.9375%" y="575.50"></text></g><g><title>XInitExtension (1 samples, 0.01%)</title><rect x="96.6875%" y="549" width="0.0112%" height="15" fill="rgb(224,49,31)" fg:x="8669" fg:w="1"/><text x="96.9375%" y="559.50"></text></g><g><title>XQueryExtension (1 samples, 0.01%)</title><rect x="96.6875%" y="533" width="0.0112%" height="15" fill="rgb(250,18,42)" fg:x="8669" fg:w="1"/><text x="96.9375%" y="543.50"></text></g><g><title>_XSend (1 samples, 0.01%)</title><rect x="96.6875%" y="517" width="0.0112%" height="15" fill="rgb(215,176,39)" fg:x="8669" fg:w="1"/><text x="96.9375%" y="527.50"></text></g><g><title>xcb_writev (1 samples, 0.01%)</title><rect x="96.6875%" y="501" width="0.0112%" height="15" fill="rgb(223,77,29)" fg:x="8669" fg:w="1"/><text x="96.9375%" y="511.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.01%)</title><rect x="96.6875%" y="485" width="0.0112%" height="15" fill="rgb(234,94,52)" fg:x="8669" fg:w="1"/><text x="96.9375%" y="495.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.01%)</title><rect x="96.6875%" y="469" width="0.0112%" height="15" fill="rgb(220,154,50)" fg:x="8669" fg:w="1"/><text x="96.9375%" y="479.50"></text></g><g><title>__GI___writev (1 samples, 0.01%)</title><rect x="96.6875%" y="453" width="0.0112%" height="15" fill="rgb(212,11,10)" fg:x="8669" fg:w="1"/><text x="96.9375%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.6875%" y="437" width="0.0112%" height="15" fill="rgb(205,166,19)" fg:x="8669" fg:w="1"/><text x="96.9375%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.6875%" y="421" width="0.0112%" height="15" fill="rgb(244,198,16)" fg:x="8669" fg:w="1"/><text x="96.9375%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.6875%" y="405" width="0.0112%" height="15" fill="rgb(219,69,12)" fg:x="8669" fg:w="1"/><text x="96.9375%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.6875%" y="389" width="0.0112%" height="15" fill="rgb(245,30,7)" fg:x="8669" fg:w="1"/><text x="96.9375%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.6875%" y="373" width="0.0112%" height="15" fill="rgb(218,221,48)" fg:x="8669" fg:w="1"/><text x="96.9375%" y="383.50"></text></g><g><title>XGetVisualInfo (1 samples, 0.01%)</title><rect x="96.6986%" y="549" width="0.0112%" height="15" fill="rgb(216,66,15)" fg:x="8670" fg:w="1"/><text x="96.9486%" y="559.50"></text></g><g><title>[libGLX_nvidia.so.470.103.01] (3 samples, 0.03%)</title><rect x="96.6875%" y="581" width="0.0335%" height="15" fill="rgb(226,122,50)" fg:x="8669" fg:w="3"/><text x="96.9375%" y="591.50"></text></g><g><title>[libGLX_nvidia.so.470.103.01] (2 samples, 0.02%)</title><rect x="96.6986%" y="565" width="0.0223%" height="15" fill="rgb(239,156,16)" fg:x="8670" fg:w="2"/><text x="96.9486%" y="575.50"></text></g><g><title>[libGLX_nvidia.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.7098%" y="549" width="0.0112%" height="15" fill="rgb(224,27,38)" fg:x="8671" fg:w="1"/><text x="96.9598%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (2 samples, 0.02%)</title><rect x="96.7209%" y="533" width="0.0223%" height="15" fill="rgb(224,39,27)" fg:x="8672" fg:w="2"/><text x="96.9709%" y="543.50"></text></g><g><title>syscall (2 samples, 0.02%)</title><rect x="96.7209%" y="517" width="0.0223%" height="15" fill="rgb(215,92,29)" fg:x="8672" fg:w="2"/><text x="96.9709%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="96.7209%" y="501" width="0.0223%" height="15" fill="rgb(207,159,16)" fg:x="8672" fg:w="2"/><text x="96.9709%" y="511.50"></text></g><g><title>[libSDL2-2.0.so.0.10.0] (14 samples, 0.16%)</title><rect x="96.5983%" y="613" width="0.1561%" height="15" fill="rgb(238,163,47)" fg:x="8661" fg:w="14"/><text x="96.8483%" y="623.50"></text></g><g><title>glXChooseVisual (8 samples, 0.09%)</title><rect x="96.6652%" y="597" width="0.0892%" height="15" fill="rgb(219,91,49)" fg:x="8667" fg:w="8"/><text x="96.9152%" y="607.50"></text></g><g><title>glXGetConfig (3 samples, 0.03%)</title><rect x="96.7209%" y="581" width="0.0335%" height="15" fill="rgb(227,167,31)" fg:x="8672" fg:w="3"/><text x="96.9709%" y="591.50"></text></g><g><title>[libGLX_nvidia.so.470.103.01] (3 samples, 0.03%)</title><rect x="96.7209%" y="565" width="0.0335%" height="15" fill="rgb(234,80,54)" fg:x="8672" fg:w="3"/><text x="96.9709%" y="575.50"></text></g><g><title>[libGLX_nvidia.so.470.103.01] (3 samples, 0.03%)</title><rect x="96.7209%" y="549" width="0.0335%" height="15" fill="rgb(212,114,2)" fg:x="8672" fg:w="3"/><text x="96.9709%" y="559.50"></text></g><g><title>syscall (1 samples, 0.01%)</title><rect x="96.7433%" y="533" width="0.0112%" height="15" fill="rgb(234,50,24)" fg:x="8674" fg:w="1"/><text x="96.9933%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.7433%" y="517" width="0.0112%" height="15" fill="rgb(221,68,8)" fg:x="8674" fg:w="1"/><text x="96.9933%" y="527.50"></text></g><g><title>[libGLX_nvidia.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.7544%" y="533" width="0.0112%" height="15" fill="rgb(254,180,31)" fg:x="8675" fg:w="1"/><text x="97.0044%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.7544%" y="517" width="0.0112%" height="15" fill="rgb(247,130,50)" fg:x="8675" fg:w="1"/><text x="97.0044%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.7544%" y="501" width="0.0112%" height="15" fill="rgb(211,109,4)" fg:x="8675" fg:w="1"/><text x="97.0044%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.7544%" y="485" width="0.0112%" height="15" fill="rgb(238,50,21)" fg:x="8675" fg:w="1"/><text x="97.0044%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.7544%" y="469" width="0.0112%" height="15" fill="rgb(225,57,45)" fg:x="8675" fg:w="1"/><text x="97.0044%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.7544%" y="453" width="0.0112%" height="15" fill="rgb(209,196,50)" fg:x="8675" fg:w="1"/><text x="97.0044%" y="463.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="96.7544%" y="437" width="0.0112%" height="15" fill="rgb(242,140,13)" fg:x="8675" fg:w="1"/><text x="97.0044%" y="447.50"></text></g><g><title>tcache_get (1 samples, 0.01%)</title><rect x="96.7544%" y="421" width="0.0112%" height="15" fill="rgb(217,111,7)" fg:x="8675" fg:w="1"/><text x="97.0044%" y="431.50"></text></g><g><title>[libGLX_nvidia.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.7656%" y="469" width="0.0112%" height="15" fill="rgb(253,193,51)" fg:x="8676" fg:w="1"/><text x="97.0156%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.7656%" y="453" width="0.0112%" height="15" fill="rgb(252,70,29)" fg:x="8676" fg:w="1"/><text x="97.0156%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.7656%" y="437" width="0.0112%" height="15" fill="rgb(232,127,12)" fg:x="8676" fg:w="1"/><text x="97.0156%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.7656%" y="421" width="0.0112%" height="15" fill="rgb(211,180,21)" fg:x="8676" fg:w="1"/><text x="97.0156%" y="431.50"></text></g><g><title>__ioctl (1 samples, 0.01%)</title><rect x="96.7656%" y="405" width="0.0112%" height="15" fill="rgb(229,72,13)" fg:x="8676" fg:w="1"/><text x="97.0156%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.7656%" y="389" width="0.0112%" height="15" fill="rgb(240,211,49)" fg:x="8676" fg:w="1"/><text x="97.0156%" y="399.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.8102%" y="421" width="0.0112%" height="15" fill="rgb(219,149,40)" fg:x="8680" fg:w="1"/><text x="97.0602%" y="431.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.8102%" y="405" width="0.0112%" height="15" fill="rgb(210,127,46)" fg:x="8680" fg:w="1"/><text x="97.0602%" y="415.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.8102%" y="389" width="0.0112%" height="15" fill="rgb(220,106,7)" fg:x="8680" fg:w="1"/><text x="97.0602%" y="399.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (1 samples, 0.01%)</title><rect x="96.8102%" y="373" width="0.0112%" height="15" fill="rgb(249,31,22)" fg:x="8680" fg:w="1"/><text x="97.0602%" y="383.50"></text></g><g><title>__GI___xstat (1 samples, 0.01%)</title><rect x="96.8102%" y="357" width="0.0112%" height="15" fill="rgb(253,1,49)" fg:x="8680" fg:w="1"/><text x="97.0602%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.8102%" y="341" width="0.0112%" height="15" fill="rgb(227,144,33)" fg:x="8680" fg:w="1"/><text x="97.0602%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.8102%" y="325" width="0.0112%" height="15" fill="rgb(249,163,44)" fg:x="8680" fg:w="1"/><text x="97.0602%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.8102%" y="309" width="0.0112%" height="15" fill="rgb(234,15,39)" fg:x="8680" fg:w="1"/><text x="97.0602%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.8102%" y="293" width="0.0112%" height="15" fill="rgb(207,66,16)" fg:x="8680" fg:w="1"/><text x="97.0602%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.8102%" y="277" width="0.0112%" height="15" fill="rgb(233,112,24)" fg:x="8680" fg:w="1"/><text x="97.0602%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.8102%" y="261" width="0.0112%" height="15" fill="rgb(230,90,22)" fg:x="8680" fg:w="1"/><text x="97.0602%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.8102%" y="245" width="0.0112%" height="15" fill="rgb(229,61,13)" fg:x="8680" fg:w="1"/><text x="97.0602%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.8102%" y="229" width="0.0112%" height="15" fill="rgb(225,57,24)" fg:x="8680" fg:w="1"/><text x="97.0602%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.8102%" y="213" width="0.0112%" height="15" fill="rgb(208,169,48)" fg:x="8680" fg:w="1"/><text x="97.0602%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.8102%" y="197" width="0.0112%" height="15" fill="rgb(244,218,51)" fg:x="8680" fg:w="1"/><text x="97.0602%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.8102%" y="181" width="0.0112%" height="15" fill="rgb(214,148,10)" fg:x="8680" fg:w="1"/><text x="97.0602%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.8102%" y="165" width="0.0112%" height="15" fill="rgb(225,174,27)" fg:x="8680" fg:w="1"/><text x="97.0602%" y="175.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (3 samples, 0.03%)</title><rect x="96.7990%" y="437" width="0.0335%" height="15" fill="rgb(230,96,26)" fg:x="8679" fg:w="3"/><text x="97.0490%" y="447.50"></text></g><g><title>__ioctl (1 samples, 0.01%)</title><rect x="96.8213%" y="421" width="0.0112%" height="15" fill="rgb(232,10,30)" fg:x="8681" fg:w="1"/><text x="97.0713%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.8213%" y="405" width="0.0112%" height="15" fill="rgb(222,8,50)" fg:x="8681" fg:w="1"/><text x="97.0713%" y="415.50"></text></g><g><title>sdl2::sdl::Sdl::video (64 samples, 0.71%)</title><rect x="96.1298%" y="725" width="0.7138%" height="15" fill="rgb(213,81,27)" fg:x="8619" fg:w="64"/><text x="96.3798%" y="735.50"></text></g><g><title>sdl2::sdl::VideoSubsystem::new (64 samples, 0.71%)</title><rect x="96.1298%" y="709" width="0.7138%" height="15" fill="rgb(245,50,10)" fg:x="8619" fg:w="64"/><text x="96.3798%" y="719.50"></text></g><g><title>[libSDL2-2.0.so.0.10.0] (64 samples, 0.71%)</title><rect x="96.1298%" y="693" width="0.7138%" height="15" fill="rgb(216,100,18)" fg:x="8619" fg:w="64"/><text x="96.3798%" y="703.50"></text></g><g><title>[libSDL2-2.0.so.0.10.0] (64 samples, 0.71%)</title><rect x="96.1298%" y="677" width="0.7138%" height="15" fill="rgb(236,147,54)" fg:x="8619" fg:w="64"/><text x="96.3798%" y="687.50"></text></g><g><title>[libSDL2-2.0.so.0.10.0] (64 samples, 0.71%)</title><rect x="96.1298%" y="661" width="0.7138%" height="15" fill="rgb(205,143,26)" fg:x="8619" fg:w="64"/><text x="96.3798%" y="671.50"></text></g><g><title>[libSDL2-2.0.so.0.10.0] (57 samples, 0.64%)</title><rect x="96.2079%" y="645" width="0.6357%" height="15" fill="rgb(236,26,9)" fg:x="8626" fg:w="57"/><text x="96.4579%" y="655.50"></text></g><g><title>[libSDL2-2.0.so.0.10.0] (57 samples, 0.64%)</title><rect x="96.2079%" y="629" width="0.6357%" height="15" fill="rgb(221,165,53)" fg:x="8626" fg:w="57"/><text x="96.4579%" y="639.50"></text></g><g><title>glXCreateContext (8 samples, 0.09%)</title><rect x="96.7544%" y="613" width="0.0892%" height="15" fill="rgb(214,110,17)" fg:x="8675" fg:w="8"/><text x="97.0044%" y="623.50"></text></g><g><title>glXCreateContext (8 samples, 0.09%)</title><rect x="96.7544%" y="597" width="0.0892%" height="15" fill="rgb(237,197,12)" fg:x="8675" fg:w="8"/><text x="97.0044%" y="607.50"></text></g><g><title>[libGLX_nvidia.so.470.103.01] (8 samples, 0.09%)</title><rect x="96.7544%" y="581" width="0.0892%" height="15" fill="rgb(205,84,17)" fg:x="8675" fg:w="8"/><text x="97.0044%" y="591.50"></text></g><g><title>[libGLX_nvidia.so.470.103.01] (8 samples, 0.09%)</title><rect x="96.7544%" y="565" width="0.0892%" height="15" fill="rgb(237,18,45)" fg:x="8675" fg:w="8"/><text x="97.0044%" y="575.50"></text></g><g><title>[libGLX_nvidia.so.470.103.01] (8 samples, 0.09%)</title><rect x="96.7544%" y="549" width="0.0892%" height="15" fill="rgb(221,87,14)" fg:x="8675" fg:w="8"/><text x="97.0044%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (7 samples, 0.08%)</title><rect x="96.7656%" y="533" width="0.0781%" height="15" fill="rgb(238,186,15)" fg:x="8676" fg:w="7"/><text x="97.0156%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (7 samples, 0.08%)</title><rect x="96.7656%" y="517" width="0.0781%" height="15" fill="rgb(208,115,11)" fg:x="8676" fg:w="7"/><text x="97.0156%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (7 samples, 0.08%)</title><rect x="96.7656%" y="501" width="0.0781%" height="15" fill="rgb(254,175,0)" fg:x="8676" fg:w="7"/><text x="97.0156%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (7 samples, 0.08%)</title><rect x="96.7656%" y="485" width="0.0781%" height="15" fill="rgb(227,24,42)" fg:x="8676" fg:w="7"/><text x="97.0156%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (6 samples, 0.07%)</title><rect x="96.7767%" y="469" width="0.0669%" height="15" fill="rgb(223,211,37)" fg:x="8677" fg:w="6"/><text x="97.0267%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (4 samples, 0.04%)</title><rect x="96.7990%" y="453" width="0.0446%" height="15" fill="rgb(235,49,27)" fg:x="8679" fg:w="4"/><text x="97.0490%" y="463.50"></text></g><g><title>__ioctl (1 samples, 0.01%)</title><rect x="96.8325%" y="437" width="0.0112%" height="15" fill="rgb(254,97,51)" fg:x="8682" fg:w="1"/><text x="97.0825%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.8325%" y="421" width="0.0112%" height="15" fill="rgb(249,51,40)" fg:x="8682" fg:w="1"/><text x="97.0825%" y="431.50"></text></g><g><title>XIfEvent (1 samples, 0.01%)</title><rect x="96.8436%" y="661" width="0.0112%" height="15" fill="rgb(210,128,45)" fg:x="8683" fg:w="1"/><text x="97.0936%" y="671.50"></text></g><g><title>_XReadEvents (1 samples, 0.01%)</title><rect x="96.8436%" y="645" width="0.0112%" height="15" fill="rgb(224,137,50)" fg:x="8683" fg:w="1"/><text x="97.0936%" y="655.50"></text></g><g><title>xcb_wait_for_event (1 samples, 0.01%)</title><rect x="96.8436%" y="629" width="0.0112%" height="15" fill="rgb(242,15,9)" fg:x="8683" fg:w="1"/><text x="97.0936%" y="639.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.01%)</title><rect x="96.8436%" y="613" width="0.0112%" height="15" fill="rgb(233,187,41)" fg:x="8683" fg:w="1"/><text x="97.0936%" y="623.50"></text></g><g><title>__GI___poll (1 samples, 0.01%)</title><rect x="96.8436%" y="597" width="0.0112%" height="15" fill="rgb(227,2,29)" fg:x="8683" fg:w="1"/><text x="97.0936%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.8436%" y="581" width="0.0112%" height="15" fill="rgb(222,70,3)" fg:x="8683" fg:w="1"/><text x="97.0936%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.8436%" y="565" width="0.0112%" height="15" fill="rgb(213,11,42)" fg:x="8683" fg:w="1"/><text x="97.0936%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.8436%" y="549" width="0.0112%" height="15" fill="rgb(225,150,9)" fg:x="8683" fg:w="1"/><text x="97.0936%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.8436%" y="533" width="0.0112%" height="15" fill="rgb(230,162,45)" fg:x="8683" fg:w="1"/><text x="97.0936%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.8436%" y="517" width="0.0112%" height="15" fill="rgb(222,14,52)" fg:x="8683" fg:w="1"/><text x="97.0936%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.8436%" y="501" width="0.0112%" height="15" fill="rgb(254,198,14)" fg:x="8683" fg:w="1"/><text x="97.0936%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.8436%" y="485" width="0.0112%" height="15" fill="rgb(220,217,30)" fg:x="8683" fg:w="1"/><text x="97.0936%" y="495.50"></text></g><g><title>pthread_self (1 samples, 0.01%)</title><rect x="96.8659%" y="565" width="0.0112%" height="15" fill="rgb(215,146,41)" fg:x="8685" fg:w="1"/><text x="97.1159%" y="575.50"></text></g><g><title>sdl2::video::WindowBuilder::build (5 samples, 0.06%)</title><rect x="96.8436%" y="725" width="0.0558%" height="15" fill="rgb(217,27,36)" fg:x="8683" fg:w="5"/><text x="97.0936%" y="735.50"></text></g><g><title>[libSDL2-2.0.so.0.10.0] (5 samples, 0.06%)</title><rect x="96.8436%" y="709" width="0.0558%" height="15" fill="rgb(219,218,39)" fg:x="8683" fg:w="5"/><text x="97.0936%" y="719.50"></text></g><g><title>[libSDL2-2.0.so.0.10.0] (5 samples, 0.06%)</title><rect x="96.8436%" y="693" width="0.0558%" height="15" fill="rgb(219,4,42)" fg:x="8683" fg:w="5"/><text x="97.0936%" y="703.50"></text></g><g><title>[libSDL2-2.0.so.0.10.0] (5 samples, 0.06%)</title><rect x="96.8436%" y="677" width="0.0558%" height="15" fill="rgb(249,119,36)" fg:x="8683" fg:w="5"/><text x="97.0936%" y="687.50"></text></g><g><title>[libSDL2-2.0.so.0.10.0] (4 samples, 0.04%)</title><rect x="96.8548%" y="661" width="0.0446%" height="15" fill="rgb(209,23,33)" fg:x="8684" fg:w="4"/><text x="97.1048%" y="671.50"></text></g><g><title>glXChooseVisual (4 samples, 0.04%)</title><rect x="96.8548%" y="645" width="0.0446%" height="15" fill="rgb(211,10,0)" fg:x="8684" fg:w="4"/><text x="97.1048%" y="655.50"></text></g><g><title>glXGetConfig (4 samples, 0.04%)</title><rect x="96.8548%" y="629" width="0.0446%" height="15" fill="rgb(208,99,37)" fg:x="8684" fg:w="4"/><text x="97.1048%" y="639.50"></text></g><g><title>[libGLX_nvidia.so.470.103.01] (3 samples, 0.03%)</title><rect x="96.8659%" y="613" width="0.0335%" height="15" fill="rgb(213,132,31)" fg:x="8685" fg:w="3"/><text x="97.1159%" y="623.50"></text></g><g><title>[libGLX_nvidia.so.470.103.01] (3 samples, 0.03%)</title><rect x="96.8659%" y="597" width="0.0335%" height="15" fill="rgb(243,129,40)" fg:x="8685" fg:w="3"/><text x="97.1159%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.470.103.01] (3 samples, 0.03%)</title><rect x="96.8659%" y="581" width="0.0335%" height="15" fill="rgb(210,66,33)" fg:x="8685" fg:w="3"/><text x="97.1159%" y="591.50"></text></g><g><title>syscall (2 samples, 0.02%)</title><rect x="96.8771%" y="565" width="0.0223%" height="15" fill="rgb(209,189,4)" fg:x="8686" fg:w="2"/><text x="97.1271%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="96.8771%" y="549" width="0.0223%" height="15" fill="rgb(214,107,37)" fg:x="8686" fg:w="2"/><text x="97.1271%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="96.8771%" y="533" width="0.0223%" height="15" fill="rgb(245,88,54)" fg:x="8686" fg:w="2"/><text x="97.1271%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="96.8771%" y="517" width="0.0223%" height="15" fill="rgb(205,146,20)" fg:x="8686" fg:w="2"/><text x="97.1271%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::stdio::StdoutLock&gt; (1 samples, 0.01%)</title><rect x="96.8994%" y="661" width="0.0112%" height="15" fill="rgb(220,161,25)" fg:x="8688" fg:w="1"/><text x="97.1494%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys_common::remutex::ReentrantMutexGuard&lt;core::cell::RefCell&lt;std::io::buffered::linewriter::LineWriter&lt;std::io::stdio::StdoutRaw&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="96.8994%" y="645" width="0.0112%" height="15" fill="rgb(215,152,15)" fg:x="8688" fg:w="1"/><text x="97.1494%" y="655.50"></text></g><g><title>&lt;std::sys_common::remutex::ReentrantMutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="96.8994%" y="629" width="0.0112%" height="15" fill="rgb(233,192,44)" fg:x="8688" fg:w="1"/><text x="97.1494%" y="639.50"></text></g><g><title>std::sys::unix::mutex::ReentrantMutex::unlock (1 samples, 0.01%)</title><rect x="96.8994%" y="613" width="0.0112%" height="15" fill="rgb(240,170,46)" fg:x="8688" fg:w="1"/><text x="97.1494%" y="623.50"></text></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="96.8994%" y="597" width="0.0112%" height="15" fill="rgb(207,104,33)" fg:x="8688" fg:w="1"/><text x="97.1494%" y="607.50"></text></g><g><title>std::io::Write::write_fmt (6 samples, 0.07%)</title><rect x="96.9106%" y="661" width="0.0669%" height="15" fill="rgb(219,21,39)" fg:x="8689" fg:w="6"/><text x="97.1606%" y="671.50"></text></g><g><title>core::fmt::write (6 samples, 0.07%)</title><rect x="96.9106%" y="645" width="0.0669%" height="15" fill="rgb(214,133,29)" fg:x="8689" fg:w="6"/><text x="97.1606%" y="655.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (5 samples, 0.06%)</title><rect x="96.9217%" y="629" width="0.0558%" height="15" fill="rgb(226,93,6)" fg:x="8690" fg:w="5"/><text x="97.1717%" y="639.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (5 samples, 0.06%)</title><rect x="96.9217%" y="613" width="0.0558%" height="15" fill="rgb(252,222,34)" fg:x="8690" fg:w="5"/><text x="97.1717%" y="623.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (5 samples, 0.06%)</title><rect x="96.9217%" y="597" width="0.0558%" height="15" fill="rgb(252,92,48)" fg:x="8690" fg:w="5"/><text x="97.1717%" y="607.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (5 samples, 0.06%)</title><rect x="96.9217%" y="581" width="0.0558%" height="15" fill="rgb(245,223,24)" fg:x="8690" fg:w="5"/><text x="97.1717%" y="591.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (5 samples, 0.06%)</title><rect x="96.9217%" y="565" width="0.0558%" height="15" fill="rgb(205,176,3)" fg:x="8690" fg:w="5"/><text x="97.1717%" y="575.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (5 samples, 0.06%)</title><rect x="96.9217%" y="549" width="0.0558%" height="15" fill="rgb(235,151,15)" fg:x="8690" fg:w="5"/><text x="97.1717%" y="559.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (5 samples, 0.06%)</title><rect x="96.9217%" y="533" width="0.0558%" height="15" fill="rgb(237,209,11)" fg:x="8690" fg:w="5"/><text x="97.1717%" y="543.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (5 samples, 0.06%)</title><rect x="96.9217%" y="517" width="0.0558%" height="15" fill="rgb(243,227,24)" fg:x="8690" fg:w="5"/><text x="97.1717%" y="527.50"></text></g><g><title>__libc_write (5 samples, 0.06%)</title><rect x="96.9217%" y="501" width="0.0558%" height="15" fill="rgb(239,193,16)" fg:x="8690" fg:w="5"/><text x="97.1717%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.9217%" y="485" width="0.0558%" height="15" fill="rgb(231,27,9)" fg:x="8690" fg:w="5"/><text x="97.1717%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.9217%" y="469" width="0.0558%" height="15" fill="rgb(219,169,10)" fg:x="8690" fg:w="5"/><text x="97.1717%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.9217%" y="453" width="0.0558%" height="15" fill="rgb(244,229,43)" fg:x="8690" fg:w="5"/><text x="97.1717%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.9217%" y="437" width="0.0558%" height="15" fill="rgb(254,38,20)" fg:x="8690" fg:w="5"/><text x="97.1717%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.9217%" y="421" width="0.0558%" height="15" fill="rgb(250,47,30)" fg:x="8690" fg:w="5"/><text x="97.1717%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.9217%" y="405" width="0.0558%" height="15" fill="rgb(224,124,36)" fg:x="8690" fg:w="5"/><text x="97.1717%" y="415.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.9217%" y="389" width="0.0558%" height="15" fill="rgb(246,68,51)" fg:x="8690" fg:w="5"/><text x="97.1717%" y="399.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.9217%" y="373" width="0.0558%" height="15" fill="rgb(253,43,49)" fg:x="8690" fg:w="5"/><text x="97.1717%" y="383.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.9217%" y="357" width="0.0558%" height="15" fill="rgb(219,54,36)" fg:x="8690" fg:w="5"/><text x="97.1717%" y="367.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.9217%" y="341" width="0.0558%" height="15" fill="rgb(227,133,34)" fg:x="8690" fg:w="5"/><text x="97.1717%" y="351.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="96.9217%" y="325" width="0.0558%" height="15" fill="rgb(247,227,15)" fg:x="8690" fg:w="5"/><text x="97.1717%" y="335.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="96.9440%" y="309" width="0.0335%" height="15" fill="rgb(229,96,14)" fg:x="8692" fg:w="3"/><text x="97.1940%" y="319.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="96.9440%" y="293" width="0.0335%" height="15" fill="rgb(220,79,17)" fg:x="8692" fg:w="3"/><text x="97.1940%" y="303.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="96.9440%" y="277" width="0.0335%" height="15" fill="rgb(205,131,53)" fg:x="8692" fg:w="3"/><text x="97.1940%" y="287.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="96.9440%" y="261" width="0.0335%" height="15" fill="rgb(209,50,29)" fg:x="8692" fg:w="3"/><text x="97.1940%" y="271.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="96.9440%" y="245" width="0.0335%" height="15" fill="rgb(245,86,46)" fg:x="8692" fg:w="3"/><text x="97.1940%" y="255.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="96.9552%" y="229" width="0.0223%" height="15" fill="rgb(235,66,46)" fg:x="8693" fg:w="2"/><text x="97.2052%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.9663%" y="213" width="0.0112%" height="15" fill="rgb(232,148,31)" fg:x="8694" fg:w="1"/><text x="97.2163%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.9663%" y="197" width="0.0112%" height="15" fill="rgb(217,149,8)" fg:x="8694" fg:w="1"/><text x="97.2163%" y="207.50"></text></g><g><title>std::io::stdio::_print (8 samples, 0.09%)</title><rect x="96.8994%" y="725" width="0.0892%" height="15" fill="rgb(209,183,11)" fg:x="8688" fg:w="8"/><text x="97.1494%" y="735.50"></text></g><g><title>std::io::stdio::print_to (8 samples, 0.09%)</title><rect x="96.8994%" y="709" width="0.0892%" height="15" fill="rgb(208,55,20)" fg:x="8688" fg:w="8"/><text x="97.1494%" y="719.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (8 samples, 0.09%)</title><rect x="96.8994%" y="693" width="0.0892%" height="15" fill="rgb(218,39,14)" fg:x="8688" fg:w="8"/><text x="97.1494%" y="703.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (8 samples, 0.09%)</title><rect x="96.8994%" y="677" width="0.0892%" height="15" fill="rgb(216,169,33)" fg:x="8688" fg:w="8"/><text x="97.1494%" y="687.50"></text></g><g><title>std::io::stdio::Stdout::lock (1 samples, 0.01%)</title><rect x="96.9775%" y="661" width="0.0112%" height="15" fill="rgb(233,80,24)" fg:x="8695" fg:w="1"/><text x="97.2275%" y="671.50"></text></g><g><title>std::io::stdio::Stdout::lock_any (1 samples, 0.01%)</title><rect x="96.9775%" y="645" width="0.0112%" height="15" fill="rgb(213,179,31)" fg:x="8695" fg:w="1"/><text x="97.2275%" y="655.50"></text></g><g><title>std::sys_common::remutex::ReentrantMutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="96.9775%" y="629" width="0.0112%" height="15" fill="rgb(209,19,5)" fg:x="8695" fg:w="1"/><text x="97.2275%" y="639.50"></text></g><g><title>std::sys::unix::mutex::ReentrantMutex::lock (1 samples, 0.01%)</title><rect x="96.9775%" y="613" width="0.0112%" height="15" fill="rgb(219,18,35)" fg:x="8695" fg:w="1"/><text x="97.2275%" y="623.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="96.9775%" y="597" width="0.0112%" height="15" fill="rgb(209,169,16)" fg:x="8695" fg:w="1"/><text x="97.2275%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.9775%" y="581" width="0.0112%" height="15" fill="rgb(245,90,51)" fg:x="8695" fg:w="1"/><text x="97.2275%" y="591.50"></text></g><g><title>nand2tetris::main (7,711 samples, 86.00%)</title><rect x="11.0529%" y="757" width="86.0027%" height="15" fill="rgb(220,99,45)" fg:x="991" fg:w="7711"/><text x="11.3029%" y="767.50">nand2tetris::main</text></g><g><title>nand2tetris::run_vm (7,711 samples, 86.00%)</title><rect x="11.0529%" y="741" width="86.0027%" height="15" fill="rgb(249,89,25)" fg:x="991" fg:w="7711"/><text x="11.3029%" y="751.50">nand2tetris::run_vm</text></g><g><title>std::time::Instant::now (6 samples, 0.07%)</title><rect x="96.9886%" y="725" width="0.0669%" height="15" fill="rgb(239,193,0)" fg:x="8696" fg:w="6"/><text x="97.2386%" y="735.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (6 samples, 0.07%)</title><rect x="96.9886%" y="709" width="0.0669%" height="15" fill="rgb(231,126,1)" fg:x="8696" fg:w="6"/><text x="97.2386%" y="719.50"></text></g><g><title>std::sys::unix::time::inner::now (6 samples, 0.07%)</title><rect x="96.9886%" y="693" width="0.0669%" height="15" fill="rgb(243,166,3)" fg:x="8696" fg:w="6"/><text x="97.2386%" y="703.50"></text></g><g><title>__GI___clock_gettime (5 samples, 0.06%)</title><rect x="96.9998%" y="677" width="0.0558%" height="15" fill="rgb(223,22,34)" fg:x="8697" fg:w="5"/><text x="97.2498%" y="687.50"></text></g><g><title>__vdso_clock_gettime (4 samples, 0.04%)</title><rect x="97.0109%" y="661" width="0.0446%" height="15" fill="rgb(251,52,51)" fg:x="8698" fg:w="4"/><text x="97.2609%" y="671.50"></text></g><g><title>nand2tetris::vm::&lt;impl nand2tetris::hardware::RAM&gt;::get (2 samples, 0.02%)</title><rect x="97.0555%" y="757" width="0.0223%" height="15" fill="rgb(221,165,28)" fg:x="8702" fg:w="2"/><text x="97.3055%" y="767.50"></text></g><g><title>nand2tetris::vm::&lt;impl nand2tetris::hardware::RAM&gt;::set (1 samples, 0.01%)</title><rect x="97.0778%" y="757" width="0.0112%" height="15" fill="rgb(218,121,47)" fg:x="8704" fg:w="1"/><text x="97.3278%" y="767.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.03%)</title><rect x="97.4571%" y="677" width="0.0335%" height="15" fill="rgb(209,120,9)" fg:x="8738" fg:w="3"/><text x="97.7071%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (9 samples, 0.10%)</title><rect x="97.4571%" y="741" width="0.1004%" height="15" fill="rgb(236,68,12)" fg:x="8738" fg:w="9"/><text x="97.7071%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (9 samples, 0.10%)</title><rect x="97.4571%" y="725" width="0.1004%" height="15" fill="rgb(225,194,26)" fg:x="8738" fg:w="9"/><text x="97.7071%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (9 samples, 0.10%)</title><rect x="97.4571%" y="709" width="0.1004%" height="15" fill="rgb(231,84,39)" fg:x="8738" fg:w="9"/><text x="97.7071%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (9 samples, 0.10%)</title><rect x="97.4571%" y="693" width="0.1004%" height="15" fill="rgb(210,11,45)" fg:x="8738" fg:w="9"/><text x="97.7071%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (6 samples, 0.07%)</title><rect x="97.4905%" y="677" width="0.0669%" height="15" fill="rgb(224,54,52)" fg:x="8741" fg:w="6"/><text x="97.7405%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.07%)</title><rect x="97.4905%" y="661" width="0.0669%" height="15" fill="rgb(238,102,14)" fg:x="8741" fg:w="6"/><text x="97.7405%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (6 samples, 0.07%)</title><rect x="97.4905%" y="645" width="0.0669%" height="15" fill="rgb(243,160,52)" fg:x="8741" fg:w="6"/><text x="97.7405%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (6 samples, 0.07%)</title><rect x="97.4905%" y="629" width="0.0669%" height="15" fill="rgb(216,114,19)" fg:x="8741" fg:w="6"/><text x="97.7405%" y="639.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (6 samples, 0.07%)</title><rect x="97.4905%" y="613" width="0.0669%" height="15" fill="rgb(244,166,37)" fg:x="8741" fg:w="6"/><text x="97.7405%" y="623.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (A,B)&gt;::eq (6 samples, 0.07%)</title><rect x="97.4905%" y="597" width="0.0669%" height="15" fill="rgb(246,29,44)" fg:x="8741" fg:w="6"/><text x="97.7405%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (6 samples, 0.07%)</title><rect x="97.4905%" y="581" width="0.0669%" height="15" fill="rgb(215,56,53)" fg:x="8741" fg:w="6"/><text x="97.7405%" y="591.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (6 samples, 0.07%)</title><rect x="97.4905%" y="565" width="0.0669%" height="15" fill="rgb(217,60,2)" fg:x="8741" fg:w="6"/><text x="97.7405%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (6 samples, 0.07%)</title><rect x="97.4905%" y="549" width="0.0669%" height="15" fill="rgb(207,26,24)" fg:x="8741" fg:w="6"/><text x="97.7405%" y="559.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (6 samples, 0.07%)</title><rect x="97.4905%" y="533" width="0.0669%" height="15" fill="rgb(252,210,15)" fg:x="8741" fg:w="6"/><text x="97.7405%" y="543.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (6 samples, 0.07%)</title><rect x="97.4905%" y="517" width="0.0669%" height="15" fill="rgb(253,209,26)" fg:x="8741" fg:w="6"/><text x="97.7405%" y="527.50"></text></g><g><title>nand2tetris::vm::VM::goto (51 samples, 0.57%)</title><rect x="97.0890%" y="757" width="0.5688%" height="15" fill="rgb(238,170,14)" fg:x="8705" fg:w="51"/><text x="97.3390%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,alloc::string::String)&gt; (9 samples, 0.10%)</title><rect x="97.5574%" y="741" width="0.1004%" height="15" fill="rgb(216,178,15)" fg:x="8747" fg:w="9"/><text x="97.8074%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (9 samples, 0.10%)</title><rect x="97.5574%" y="725" width="0.1004%" height="15" fill="rgb(250,197,2)" fg:x="8747" fg:w="9"/><text x="97.8074%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (9 samples, 0.10%)</title><rect x="97.5574%" y="709" width="0.1004%" height="15" fill="rgb(212,70,42)" fg:x="8747" fg:w="9"/><text x="97.8074%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (9 samples, 0.10%)</title><rect x="97.5574%" y="693" width="0.1004%" height="15" fill="rgb(227,213,9)" fg:x="8747" fg:w="9"/><text x="97.8074%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.10%)</title><rect x="97.5574%" y="677" width="0.1004%" height="15" fill="rgb(245,99,25)" fg:x="8747" fg:w="9"/><text x="97.8074%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.10%)</title><rect x="97.5574%" y="661" width="0.1004%" height="15" fill="rgb(250,82,29)" fg:x="8747" fg:w="9"/><text x="97.8074%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.10%)</title><rect x="97.5574%" y="645" width="0.1004%" height="15" fill="rgb(241,226,54)" fg:x="8747" fg:w="9"/><text x="97.8074%" y="655.50"></text></g><g><title>hashbrown::map::make_hash (18 samples, 0.20%)</title><rect x="99.6319%" y="677" width="0.2008%" height="15" fill="rgb(221,99,41)" fg:x="8933" fg:w="18"/><text x="99.8819%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (19 samples, 0.21%)</title><rect x="99.6319%" y="741" width="0.2119%" height="15" fill="rgb(213,90,21)" fg:x="8933" fg:w="19"/><text x="99.8819%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (19 samples, 0.21%)</title><rect x="99.6319%" y="725" width="0.2119%" height="15" fill="rgb(205,208,24)" fg:x="8933" fg:w="19"/><text x="99.8819%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (19 samples, 0.21%)</title><rect x="99.6319%" y="709" width="0.2119%" height="15" fill="rgb(246,31,12)" fg:x="8933" fg:w="19"/><text x="99.8819%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (19 samples, 0.21%)</title><rect x="99.6319%" y="693" width="0.2119%" height="15" fill="rgb(213,154,6)" fg:x="8933" fg:w="19"/><text x="99.8819%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="99.8327%" y="677" width="0.0112%" height="15" fill="rgb(222,163,29)" fg:x="8951" fg:w="1"/><text x="100.0827%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="99.8327%" y="661" width="0.0112%" height="15" fill="rgb(227,201,8)" fg:x="8951" fg:w="1"/><text x="100.0827%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.01%)</title><rect x="99.8327%" y="645" width="0.0112%" height="15" fill="rgb(233,9,32)" fg:x="8951" fg:w="1"/><text x="100.0827%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 0.01%)</title><rect x="99.8327%" y="629" width="0.0112%" height="15" fill="rgb(217,54,24)" fg:x="8951" fg:w="1"/><text x="100.0827%" y="639.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.01%)</title><rect x="99.8327%" y="613" width="0.0112%" height="15" fill="rgb(235,192,0)" fg:x="8951" fg:w="1"/><text x="100.0827%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="99.8327%" y="597" width="0.0112%" height="15" fill="rgb(235,45,9)" fg:x="8951" fg:w="1"/><text x="100.0827%" y="607.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.01%)</title><rect x="99.8327%" y="581" width="0.0112%" height="15" fill="rgb(246,42,40)" fg:x="8951" fg:w="1"/><text x="100.0827%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="99.8327%" y="565" width="0.0112%" height="15" fill="rgb(248,111,24)" fg:x="8951" fg:w="1"/><text x="100.0827%" y="575.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="99.8327%" y="549" width="0.0112%" height="15" fill="rgb(249,65,22)" fg:x="8951" fg:w="1"/><text x="100.0827%" y="559.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="99.8327%" y="533" width="0.0112%" height="15" fill="rgb(238,111,51)" fg:x="8951" fg:w="1"/><text x="100.0827%" y="543.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (3 samples, 0.03%)</title><rect x="99.8439%" y="741" width="0.0335%" height="15" fill="rgb(250,118,22)" fg:x="8952" fg:w="3"/><text x="100.0939%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (3 samples, 0.03%)</title><rect x="99.8439%" y="725" width="0.0335%" height="15" fill="rgb(234,84,26)" fg:x="8952" fg:w="3"/><text x="100.0939%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.03%)</title><rect x="99.8439%" y="709" width="0.0335%" height="15" fill="rgb(243,172,12)" fg:x="8952" fg:w="3"/><text x="100.0939%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.03%)</title><rect x="99.8439%" y="693" width="0.0335%" height="15" fill="rgb(236,150,49)" fg:x="8952" fg:w="3"/><text x="100.0939%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.03%)</title><rect x="99.8439%" y="677" width="0.0335%" height="15" fill="rgb(225,197,26)" fg:x="8952" fg:w="3"/><text x="100.0939%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.03%)</title><rect x="99.8439%" y="661" width="0.0335%" height="15" fill="rgb(214,17,42)" fg:x="8952" fg:w="3"/><text x="100.0939%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.03%)</title><rect x="99.8439%" y="645" width="0.0335%" height="15" fill="rgb(224,165,40)" fg:x="8952" fg:w="3"/><text x="100.0939%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.03%)</title><rect x="99.8439%" y="629" width="0.0335%" height="15" fill="rgb(246,100,4)" fg:x="8952" fg:w="3"/><text x="100.0939%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.03%)</title><rect x="99.8439%" y="613" width="0.0335%" height="15" fill="rgb(222,103,0)" fg:x="8952" fg:w="3"/><text x="100.0939%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.03%)</title><rect x="99.8439%" y="597" width="0.0335%" height="15" fill="rgb(227,189,26)" fg:x="8952" fg:w="3"/><text x="100.0939%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.03%)</title><rect x="99.8439%" y="581" width="0.0335%" height="15" fill="rgb(214,202,17)" fg:x="8952" fg:w="3"/><text x="100.0939%" y="591.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.03%)</title><rect x="99.8439%" y="565" width="0.0335%" height="15" fill="rgb(229,111,3)" fg:x="8952" fg:w="3"/><text x="100.0939%" y="575.50"></text></g><g><title>[unknown] (8,250 samples, 92.01%)</title><rect x="7.8965%" y="773" width="92.0143%" height="15" fill="rgb(229,172,15)" fg:x="708" fg:w="8250"/><text x="8.1465%" y="783.50">[unknown]</text></g><g><title>nand2tetris::vm::VM::step (202 samples, 2.25%)</title><rect x="97.6578%" y="757" width="2.2530%" height="15" fill="rgb(230,224,35)" fg:x="8756" fg:w="202"/><text x="97.9078%" y="767.50">n..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3 samples, 0.03%)</title><rect x="99.8773%" y="741" width="0.0335%" height="15" fill="rgb(251,141,6)" fg:x="8955" fg:w="3"/><text x="100.1273%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.03%)</title><rect x="99.8773%" y="725" width="0.0335%" height="15" fill="rgb(225,208,6)" fg:x="8955" fg:w="3"/><text x="100.1273%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.03%)</title><rect x="99.8773%" y="709" width="0.0335%" height="15" fill="rgb(246,181,16)" fg:x="8955" fg:w="3"/><text x="100.1273%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="99.8773%" y="693" width="0.0335%" height="15" fill="rgb(227,129,36)" fg:x="8955" fg:w="3"/><text x="100.1273%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.03%)</title><rect x="99.8773%" y="677" width="0.0335%" height="15" fill="rgb(248,117,24)" fg:x="8955" fg:w="3"/><text x="100.1273%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.03%)</title><rect x="99.8773%" y="661" width="0.0335%" height="15" fill="rgb(214,185,35)" fg:x="8955" fg:w="3"/><text x="100.1273%" y="671.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="99.9108%" y="773" width="0.0112%" height="15" fill="rgb(236,150,34)" fg:x="8958" fg:w="1"/><text x="100.1608%" y="783.50"></text></g><g><title>nand2tetris (8,960 samples, 99.93%)</title><rect x="0.0000%" y="789" width="99.9331%" height="15" fill="rgb(243,228,27)" fg:x="0" fg:w="8960"/><text x="0.2500%" y="799.50">nand2tetris</text></g><g><title>_start (1 samples, 0.01%)</title><rect x="99.9219%" y="773" width="0.0112%" height="15" fill="rgb(245,77,44)" fg:x="8959" fg:w="1"/><text x="100.1719%" y="783.50"></text></g><g><title>_dl_start (1 samples, 0.01%)</title><rect x="99.9219%" y="757" width="0.0112%" height="15" fill="rgb(235,214,42)" fg:x="8959" fg:w="1"/><text x="100.1719%" y="767.50"></text></g><g><title>_dl_start_final (1 samples, 0.01%)</title><rect x="99.9219%" y="741" width="0.0112%" height="15" fill="rgb(221,74,3)" fg:x="8959" fg:w="1"/><text x="100.1719%" y="751.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.01%)</title><rect x="99.9219%" y="725" width="0.0112%" height="15" fill="rgb(206,121,29)" fg:x="8959" fg:w="1"/><text x="100.1719%" y="735.50"></text></g><g><title>dl_main (1 samples, 0.01%)</title><rect x="99.9219%" y="709" width="0.0112%" height="15" fill="rgb(249,131,53)" fg:x="8959" fg:w="1"/><text x="100.1719%" y="719.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.01%)</title><rect x="99.9219%" y="693" width="0.0112%" height="15" fill="rgb(236,170,29)" fg:x="8959" fg:w="1"/><text x="100.1719%" y="703.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.01%)</title><rect x="99.9219%" y="677" width="0.0112%" height="15" fill="rgb(247,96,15)" fg:x="8959" fg:w="1"/><text x="100.1719%" y="687.50"></text></g><g><title>openaux (1 samples, 0.01%)</title><rect x="99.9219%" y="661" width="0.0112%" height="15" fill="rgb(211,210,7)" fg:x="8959" fg:w="1"/><text x="100.1719%" y="671.50"></text></g><g><title>_dl_map_object (1 samples, 0.01%)</title><rect x="99.9219%" y="645" width="0.0112%" height="15" fill="rgb(240,88,50)" fg:x="8959" fg:w="1"/><text x="100.1719%" y="655.50"></text></g><g><title>_dl_map_object_from_fd (1 samples, 0.01%)</title><rect x="99.9219%" y="629" width="0.0112%" height="15" fill="rgb(209,229,26)" fg:x="8959" fg:w="1"/><text x="100.1719%" y="639.50"></text></g><g><title>_dl_map_segments (1 samples, 0.01%)</title><rect x="99.9219%" y="613" width="0.0112%" height="15" fill="rgb(210,68,23)" fg:x="8959" fg:w="1"/><text x="100.1719%" y="623.50"></text></g><g><title>__mmap64 (1 samples, 0.01%)</title><rect x="99.9219%" y="597" width="0.0112%" height="15" fill="rgb(229,180,13)" fg:x="8959" fg:w="1"/><text x="100.1719%" y="607.50"></text></g><g><title>__mmap64 (1 samples, 0.01%)</title><rect x="99.9219%" y="581" width="0.0112%" height="15" fill="rgb(236,53,44)" fg:x="8959" fg:w="1"/><text x="100.1719%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.9219%" y="565" width="0.0112%" height="15" fill="rgb(244,214,29)" fg:x="8959" fg:w="1"/><text x="100.1719%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.9219%" y="549" width="0.0112%" height="15" fill="rgb(220,75,29)" fg:x="8959" fg:w="1"/><text x="100.1719%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.9219%" y="533" width="0.0112%" height="15" fill="rgb(214,183,37)" fg:x="8959" fg:w="1"/><text x="100.1719%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.9219%" y="517" width="0.0112%" height="15" fill="rgb(239,117,29)" fg:x="8959" fg:w="1"/><text x="100.1719%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.9219%" y="501" width="0.0112%" height="15" fill="rgb(237,171,35)" fg:x="8959" fg:w="1"/><text x="100.1719%" y="511.50"></text></g><g><title>all (8,966 samples, 100%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(229,178,53)" fg:x="0" fg:w="8966"/><text x="0.2500%" y="815.50"></text></g><g><title>perf-exec (6 samples, 0.07%)</title><rect x="99.9331%" y="789" width="0.0669%" height="15" fill="rgb(210,102,19)" fg:x="8960" fg:w="6"/><text x="100.1831%" y="799.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="99.9331%" y="773" width="0.0669%" height="15" fill="rgb(235,127,22)" fg:x="8960" fg:w="6"/><text x="100.1831%" y="783.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="99.9331%" y="757" width="0.0669%" height="15" fill="rgb(244,31,31)" fg:x="8960" fg:w="6"/><text x="100.1831%" y="767.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="99.9331%" y="741" width="0.0669%" height="15" fill="rgb(231,43,21)" fg:x="8960" fg:w="6"/><text x="100.1831%" y="751.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="99.9331%" y="725" width="0.0669%" height="15" fill="rgb(217,131,35)" fg:x="8960" fg:w="6"/><text x="100.1831%" y="735.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="99.9331%" y="709" width="0.0669%" height="15" fill="rgb(221,149,4)" fg:x="8960" fg:w="6"/><text x="100.1831%" y="719.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="99.9331%" y="693" width="0.0669%" height="15" fill="rgb(232,170,28)" fg:x="8960" fg:w="6"/><text x="100.1831%" y="703.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="99.9331%" y="677" width="0.0669%" height="15" fill="rgb(238,56,10)" fg:x="8960" fg:w="6"/><text x="100.1831%" y="687.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="99.9331%" y="661" width="0.0669%" height="15" fill="rgb(235,196,14)" fg:x="8960" fg:w="6"/><text x="100.1831%" y="671.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="99.9442%" y="645" width="0.0558%" height="15" fill="rgb(216,45,48)" fg:x="8961" fg:w="5"/><text x="100.1942%" y="655.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="99.9442%" y="629" width="0.0558%" height="15" fill="rgb(238,213,17)" fg:x="8961" fg:w="5"/><text x="100.1942%" y="639.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="99.9442%" y="613" width="0.0558%" height="15" fill="rgb(212,13,2)" fg:x="8961" fg:w="5"/><text x="100.1942%" y="623.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="99.9442%" y="597" width="0.0558%" height="15" fill="rgb(240,114,20)" fg:x="8961" fg:w="5"/><text x="100.1942%" y="607.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="99.9442%" y="581" width="0.0558%" height="15" fill="rgb(228,41,40)" fg:x="8961" fg:w="5"/><text x="100.1942%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="99.9442%" y="565" width="0.0558%" height="15" fill="rgb(244,132,35)" fg:x="8961" fg:w="5"/><text x="100.1942%" y="575.50"></text></g></svg></svg>